#pragma once
#include "glwpp/gl/api/gl_44.hpp"

namespace glwpp::gl {

bool LoadGl_45(LoadFunc func);

extern void (*BindTextureUnit)(GLuint unit, GLuint texture);
extern void (*BlitNamedFramebuffer)(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
extern GLenum (*CheckNamedFramebufferStatus)(GLuint framebuffer, GLenum target);
extern void (*ClearNamedBufferData)(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data);
extern void (*ClearNamedBufferSubData)(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data);
extern void (*ClearNamedFramebufferfi)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);
extern void (*ClearNamedFramebufferfv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value);
extern void (*ClearNamedFramebufferiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value);
extern void (*ClearNamedFramebufferuiv)(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value);
extern void (*ClipControl)(GLenum origin, GLenum depth);
extern void (*CompressedTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data);
extern void (*CompressedTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data);
extern void (*CompressedTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data);
extern void (*CopyNamedBufferSubData)(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);
extern void (*CopyTextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);
extern void (*CopyTextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void (*CopyTextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
extern void (*CreateBuffers)(GLsizei n, GLuint * buffers);
extern void (*CreateFramebuffers)(GLsizei n, GLuint * framebuffers);
extern void (*CreateProgramPipelines)(GLsizei n, GLuint * pipelines);
extern void (*CreateQueries)(GLenum target, GLsizei n, GLuint * ids);
extern void (*CreateRenderbuffers)(GLsizei n, GLuint * renderbuffers);
extern void (*CreateSamplers)(GLsizei n, GLuint * samplers);
extern void (*CreateTextures)(GLenum target, GLsizei n, GLuint * textures);
extern void (*CreateTransformFeedbacks)(GLsizei n, GLuint * ids);
extern void (*CreateVertexArrays)(GLsizei n, GLuint * arrays);
extern void (*DisableVertexArrayAttrib)(GLuint vaobj, GLuint index);
extern void (*EnableVertexArrayAttrib)(GLuint vaobj, GLuint index);
extern void (*FlushMappedNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length);
extern void (*GenerateTextureMipmap)(GLuint texture);
extern void (*GetCompressedTextureImage)(GLuint texture, GLint level, GLsizei bufSize, void * pixels);
extern void (*GetCompressedTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels);
extern GLenum (*GetGraphicsResetStatus)();
extern void (*GetNamedBufferParameteri64v)(GLuint buffer, GLenum pname, GLint64 * params);
extern void (*GetNamedBufferParameteriv)(GLuint buffer, GLenum pname, GLint * params);
extern void (*GetNamedBufferPointerv)(GLuint buffer, GLenum pname, void ** params);
extern void (*GetNamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data);
extern void (*GetNamedFramebufferAttachmentParameteriv)(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params);
extern void (*GetNamedFramebufferParameteriv)(GLuint framebuffer, GLenum pname, GLint * param);
extern void (*GetNamedRenderbufferParameteriv)(GLuint renderbuffer, GLenum pname, GLint * params);
extern void (*GetQueryBufferObjecti64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void (*GetQueryBufferObjectiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void (*GetQueryBufferObjectui64v)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void (*GetQueryBufferObjectuiv)(GLuint id, GLuint buffer, GLenum pname, GLintptr offset);
extern void (*GetTextureImage)(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
extern void (*GetTextureLevelParameterfv)(GLuint texture, GLint level, GLenum pname, GLfloat * params);
extern void (*GetTextureLevelParameteriv)(GLuint texture, GLint level, GLenum pname, GLint * params);
extern void (*GetTextureParameterIiv)(GLuint texture, GLenum pname, GLint * params);
extern void (*GetTextureParameterIuiv)(GLuint texture, GLenum pname, GLuint * params);
extern void (*GetTextureParameterfv)(GLuint texture, GLenum pname, GLfloat * params);
extern void (*GetTextureParameteriv)(GLuint texture, GLenum pname, GLint * params);
extern void (*GetTextureSubImage)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
extern void (*GetTransformFeedbacki64_v)(GLuint xfb, GLenum pname, GLuint index, GLint64 * param);
extern void (*GetTransformFeedbacki_v)(GLuint xfb, GLenum pname, GLuint index, GLint * param);
extern void (*GetTransformFeedbackiv)(GLuint xfb, GLenum pname, GLint * param);
extern void (*GetVertexArrayIndexed64iv)(GLuint vaobj, GLuint index, GLenum pname, GLint64 * param);
extern void (*GetVertexArrayIndexediv)(GLuint vaobj, GLuint index, GLenum pname, GLint * param);
extern void (*GetVertexArrayiv)(GLuint vaobj, GLenum pname, GLint * param);
extern void (*GetnCompressedTexImage)(GLenum target, GLint lod, GLsizei bufSize, void * pixels);
extern void (*GetnTexImage)(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels);
extern void (*GetnUniformdv)(GLuint program, GLint location, GLsizei bufSize, GLdouble * params);
extern void (*GetnUniformfv)(GLuint program, GLint location, GLsizei bufSize, GLfloat * params);
extern void (*GetnUniformiv)(GLuint program, GLint location, GLsizei bufSize, GLint * params);
extern void (*GetnUniformuiv)(GLuint program, GLint location, GLsizei bufSize, GLuint * params);
extern void (*InvalidateNamedFramebufferData)(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments);
extern void (*InvalidateNamedFramebufferSubData)(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height);
extern void *(*MapNamedBuffer)(GLuint buffer, GLenum access);
extern void *(*MapNamedBufferRange)(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access);
extern void (*MemoryBarrierByRegion)(GLbitfield barriers);
extern void (*NamedBufferData)(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage);
extern void (*NamedBufferStorage)(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags);
extern void (*NamedBufferSubData)(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data);
extern void (*NamedFramebufferDrawBuffer)(GLuint framebuffer, GLenum buf);
extern void (*NamedFramebufferDrawBuffers)(GLuint framebuffer, GLsizei n, const GLenum * bufs);
extern void (*NamedFramebufferParameteri)(GLuint framebuffer, GLenum pname, GLint param);
extern void (*NamedFramebufferReadBuffer)(GLuint framebuffer, GLenum src);
extern void (*NamedFramebufferRenderbuffer)(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
extern void (*NamedFramebufferTexture)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level);
extern void (*NamedFramebufferTextureLayer)(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer);
extern void (*NamedRenderbufferStorage)(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height);
extern void (*NamedRenderbufferStorageMultisample)(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
extern void (*ReadnPixels)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data);
extern void (*TextureBarrier)();
extern void (*TextureBuffer)(GLuint texture, GLenum internalformat, GLuint buffer);
extern void (*TextureBufferRange)(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern void (*TextureParameterIiv)(GLuint texture, GLenum pname, const GLint * params);
extern void (*TextureParameterIuiv)(GLuint texture, GLenum pname, const GLuint * params);
extern void (*TextureParameterf)(GLuint texture, GLenum pname, GLfloat param);
extern void (*TextureParameterfv)(GLuint texture, GLenum pname, const GLfloat * param);
extern void (*TextureParameteri)(GLuint texture, GLenum pname, GLint param);
extern void (*TextureParameteriv)(GLuint texture, GLenum pname, const GLint * param);
extern void (*TextureStorage1D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width);
extern void (*TextureStorage2D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
extern void (*TextureStorage2DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
extern void (*TextureStorage3D)(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
extern void (*TextureStorage3DMultisample)(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);
extern void (*TextureSubImage1D)(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels);
extern void (*TextureSubImage2D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels);
extern void (*TextureSubImage3D)(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels);
extern void (*TransformFeedbackBufferBase)(GLuint xfb, GLuint index, GLuint buffer);
extern void (*TransformFeedbackBufferRange)(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
extern GLboolean (*UnmapNamedBuffer)(GLuint buffer);
extern void (*VertexArrayAttribBinding)(GLuint vaobj, GLuint attribindex, GLuint bindingindex);
extern void (*VertexArrayAttribFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
extern void (*VertexArrayAttribIFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void (*VertexArrayAttribLFormat)(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
extern void (*VertexArrayBindingDivisor)(GLuint vaobj, GLuint bindingindex, GLuint divisor);
extern void (*VertexArrayElementBuffer)(GLuint vaobj, GLuint buffer);
extern void (*VertexArrayVertexBuffer)(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);
extern void (*VertexArrayVertexBuffers)(GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides);

}