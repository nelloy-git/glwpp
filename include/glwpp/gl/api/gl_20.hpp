#pragma once
#include "glwpp/gl/api/gl_15.hpp"

namespace glwpp::gl {

bool LoadGl_20(LoadFunc func);
 
extern void (*AttachShader)(UInt program, UInt shader);
extern void (*BindAttribLocation)(UInt program, UInt index, const Char * name);
extern void (*BlendEquationSeparate)(Enum modeRGB, Enum modeAlpha);
extern void (*CompileShader)(UInt shader);
extern UInt (*CreateProgram)();
extern UInt (*CreateShader)(Enum type);
extern void (*DeleteProgram)(UInt program);
extern void (*DeleteShader)(UInt shader);
extern void (*DetachShader)(UInt program, UInt shader);
extern void (*DisableVertexAttribArray)(UInt index);
extern void (*DrawBuffers)(Sizei n, const Enum * bufs);
extern void (*EnableVertexAttribArray)(UInt index);
extern void (*GetActiveAttrib)(UInt program, UInt index, Sizei bufSize, Sizei * length, Int * size, Enum * type, Char * name);
extern void (*GetActiveUniform)(UInt program, UInt index, Sizei bufSize, Sizei * length, Int * size, Enum * type, Char * name);
extern void (*GetAttachedShaders)(UInt program, Sizei maxCount, Sizei * count, UInt * shaders);
extern Int (*GetAttribLocation)(UInt program, const Char * name);
extern void (*GetProgramInfoLog)(UInt program, Sizei bufSize, Sizei * length, Char * infoLog);
extern void (*GetProgramiv)(UInt program, Enum pname, Int * params);
extern void (*GetShaderInfoLog)(UInt shader, Sizei bufSize, Sizei * length, Char * infoLog);
extern void (*GetShaderSource)(UInt shader, Sizei bufSize, Sizei * length, Char * source);
extern void (*GetShaderiv)(UInt shader, Enum pname, Int * params);
extern Int (*GetUniformLocation)(UInt program, const Char * name);
extern void (*GetUniformfv)(UInt program, Int location, Float * params);
extern void (*GetUniformiv)(UInt program, Int location, Int * params);
extern void (*GetVertexAttribPointerv)(UInt index, Enum pname, void ** pointer);
extern void (*GetVertexAttribdv)(UInt index, Enum pname, Double * params);
extern void (*GetVertexAttribfv)(UInt index, Enum pname, Float * params);
extern void (*GetVertexAttribiv)(UInt index, Enum pname, Int * params);
extern Bool (*IsProgram)(UInt program);
extern Bool (*IsShader)(UInt shader);
extern void (*LinkProgram)(UInt program);
extern void (*ShaderSource)(UInt shader, Sizei count, const Char *const* string, const Int * length);
extern void (*StencilFuncSeparate)(Enum face, Enum func, Int ref, UInt mask);
extern void (*StencilMaskSeparate)(Enum face, UInt mask);
extern void (*StencilOpSeparate)(Enum face, Enum sfail, Enum dpfail, Enum dppass);
extern void (*Uniform1f)(Int location, Float v0);
extern void (*Uniform1fv)(Int location, Sizei count, const Float * value);
extern void (*Uniform1i)(Int location, Int v0);
extern void (*Uniform1iv)(Int location, Sizei count, const Int * value);
extern void (*Uniform2f)(Int location, Float v0, Float v1);
extern void (*Uniform2fv)(Int location, Sizei count, const Float * value);
extern void (*Uniform2i)(Int location, Int v0, Int v1);
extern void (*Uniform2iv)(Int location, Sizei count, const Int * value);
extern void (*Uniform3f)(Int location, Float v0, Float v1, Float v2);
extern void (*Uniform3fv)(Int location, Sizei count, const Float * value);
extern void (*Uniform3i)(Int location, Int v0, Int v1, Int v2);
extern void (*Uniform3iv)(Int location, Sizei count, const Int * value);
extern void (*Uniform4f)(Int location, Float v0, Float v1, Float v2, Float v3);
extern void (*Uniform4fv)(Int location, Sizei count, const Float * value);
extern void (*Uniform4i)(Int location, Int v0, Int v1, Int v2, Int v3);
extern void (*Uniform4iv)(Int location, Sizei count, const Int * value);
extern void (*UniformMatrix2fv)(Int location, Sizei count, Bool transpose, const Float * value);
extern void (*UniformMatrix3fv)(Int location, Sizei count, Bool transpose, const Float * value);
extern void (*UniformMatrix4fv)(Int location, Sizei count, Bool transpose, const Float * value);
extern void (*UseProgram)(UInt program);
extern void (*ValidateProgram)(UInt program);
extern void (*VertexAttrib1d)(UInt index, Double x);
extern void (*VertexAttrib1dv)(UInt index, const Double * v);
extern void (*VertexAttrib1f)(UInt index, Float x);
extern void (*VertexAttrib1fv)(UInt index, const Float * v);
extern void (*VertexAttrib1s)(UInt index, Short x);
extern void (*VertexAttrib1sv)(UInt index, const Short * v);
extern void (*VertexAttrib2d)(UInt index, Double x, Double y);
extern void (*VertexAttrib2dv)(UInt index, const Double * v);
extern void (*VertexAttrib2f)(UInt index, Float x, Float y);
extern void (*VertexAttrib2fv)(UInt index, const Float * v);
extern void (*VertexAttrib2s)(UInt index, Short x, Short y);
extern void (*VertexAttrib2sv)(UInt index, const Short * v);
extern void (*VertexAttrib3d)(UInt index, Double x, Double y, Double z);
extern void (*VertexAttrib3dv)(UInt index, const Double * v);
extern void (*VertexAttrib3f)(UInt index, Float x, Float y, Float z);
extern void (*VertexAttrib3fv)(UInt index, const Float * v);
extern void (*VertexAttrib3s)(UInt index, Short x, Short y, Short z);
extern void (*VertexAttrib3sv)(UInt index, const Short * v);
extern void (*VertexAttrib4Nbv)(UInt index, const Byte * v);
extern void (*VertexAttrib4Niv)(UInt index, const Int * v);
extern void (*VertexAttrib4Nsv)(UInt index, const Short * v);
extern void (*VertexAttrib4Nub)(UInt index, UByte x, UByte y, UByte z, UByte w);
extern void (*VertexAttrib4Nubv)(UInt index, const UByte * v);
extern void (*VertexAttrib4Nuiv)(UInt index, const UInt * v);
extern void (*VertexAttrib4Nusv)(UInt index, const UShort * v);
extern void (*VertexAttrib4bv)(UInt index, const Byte * v);
extern void (*VertexAttrib4d)(UInt index, Double x, Double y, Double z, Double w);
extern void (*VertexAttrib4dv)(UInt index, const Double * v);
extern void (*VertexAttrib4f)(UInt index, Float x, Float y, Float z, Float w);
extern void (*VertexAttrib4fv)(UInt index, const Float * v);
extern void (*VertexAttrib4iv)(UInt index, const Int * v);
extern void (*VertexAttrib4s)(UInt index, Short x, Short y, Short z, Short w);
extern void (*VertexAttrib4sv)(UInt index, const Short * v);
extern void (*VertexAttrib4ubv)(UInt index, const UByte * v);
extern void (*VertexAttrib4uiv)(UInt index, const UInt * v);
extern void (*VertexAttrib4usv)(UInt index, const UShort * v);
extern void (*VertexAttribPointer)(UInt index, Int size, Enum type, Bool normalized, Sizei stride, const void * pointer);

}