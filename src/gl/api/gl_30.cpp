#include "glwpp/gl/api/gl_30.hpp"

#include "glad/gl.h"

using namespace glwpp;

void (*gl::BeginConditionalRender)(GLuint id, GLenum mode) = nullptr;
void (*gl::BeginTransformFeedback)(GLenum primitiveMode) = nullptr;
void (*gl::BindBufferBase)(GLenum target, GLuint index, GLuint buffer) = nullptr;
void (*gl::BindBufferRange)(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size) = nullptr;
void (*gl::BindFragDataLocation)(GLuint program, GLuint color, const GLchar * name) = nullptr;
void (*gl::BindFramebuffer)(GLenum target, GLuint framebuffer) = nullptr;
void (*gl::BindRenderbuffer)(GLenum target, GLuint renderbuffer) = nullptr;
void (*gl::BindVertexArray)(GLuint array) = nullptr;
void (*gl::BlitFramebuffer)(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter) = nullptr;
GLenum (*gl::CheckFramebufferStatus)(GLenum target) = nullptr;
void (*gl::ClampColor)(GLenum target, GLenum clamp) = nullptr;
void (*gl::ClearBufferfi)(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil) = nullptr;
void (*gl::ClearBufferfv)(GLenum buffer, GLint drawbuffer, const GLfloat * value) = nullptr;
void (*gl::ClearBufferiv)(GLenum buffer, GLint drawbuffer, const GLint * value) = nullptr;
void (*gl::ClearBufferuiv)(GLenum buffer, GLint drawbuffer, const GLuint * value) = nullptr;
void (*gl::ColorMaski)(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a) = nullptr;
void (*gl::DeleteFramebuffers)(GLsizei n, const GLuint * framebuffers) = nullptr;
void (*gl::DeleteRenderbuffers)(GLsizei n, const GLuint * renderbuffers) = nullptr;
void (*gl::DeleteVertexArrays)(GLsizei n, const GLuint * arrays) = nullptr;
void (*gl::Disablei)(GLenum target, GLuint index) = nullptr;
void (*gl::Enablei)(GLenum target, GLuint index) = nullptr;
void (*gl::EndConditionalRender)() = nullptr;
void (*gl::EndTransformFeedback)() = nullptr;
void (*gl::FlushMappedBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length) = nullptr;
void (*gl::FramebufferRenderbuffer)(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer) = nullptr;
void (*gl::FramebufferTexture1D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) = nullptr;
void (*gl::FramebufferTexture2D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level) = nullptr;
void (*gl::FramebufferTexture3D)(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset) = nullptr;
void (*gl::FramebufferTextureLayer)(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer) = nullptr;
void (*gl::GenFramebuffers)(GLsizei n, GLuint * framebuffers) = nullptr;
void (*gl::GenRenderbuffers)(GLsizei n, GLuint * renderbuffers) = nullptr;
void (*gl::GenVertexArrays)(GLsizei n, GLuint * arrays) = nullptr;
void (*gl::GenerateMipmap)(GLenum target) = nullptr;
void (*gl::GetBooleani_v)(GLenum target, GLuint index, GLboolean * data) = nullptr;
GLint (*gl::GetFragDataLocation)(GLuint program, const GLchar * name) = nullptr;
void (*gl::GetFramebufferAttachmentParameteriv)(GLenum target, GLenum attachment, GLenum pname, GLint * params) = nullptr;
void (*gl::GetIntegeri_v)(GLenum target, GLuint index, GLint * data) = nullptr;
void (*gl::GetRenderbufferParameteriv)(GLenum target, GLenum pname, GLint * params) = nullptr;
const GLubyte *(*gl::GetStringi)(GLenum name, GLuint index) = nullptr;
void (*gl::GetTexParameterIiv)(GLenum target, GLenum pname, GLint * params) = nullptr;
void (*gl::GetTexParameterIuiv)(GLenum target, GLenum pname, GLuint * params) = nullptr;
void (*gl::GetTransformFeedbackVarying)(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name) = nullptr;
void (*gl::GetUniformuiv)(GLuint program, GLint location, GLuint * params) = nullptr;
void (*gl::GetVertexAttribIiv)(GLuint index, GLenum pname, GLint * params) = nullptr;
void (*gl::GetVertexAttribIuiv)(GLuint index, GLenum pname, GLuint * params) = nullptr;
GLboolean (*gl::IsEnabledi)(GLenum target, GLuint index) = nullptr;
GLboolean (*gl::IsFramebuffer)(GLuint framebuffer) = nullptr;
GLboolean (*gl::IsRenderbuffer)(GLuint renderbuffer) = nullptr;
GLboolean (*gl::IsVertexArray)(GLuint array) = nullptr;
void *(*gl::MapBufferRange)(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access) = nullptr;
void (*gl::RenderbufferStorage)(GLenum target, GLenum internalformat, GLsizei width, GLsizei height) = nullptr;
void (*gl::RenderbufferStorageMultisample)(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height) = nullptr;
void (*gl::TexParameterIiv)(GLenum target, GLenum pname, const GLint * params) = nullptr;
void (*gl::TexParameterIuiv)(GLenum target, GLenum pname, const GLuint * params) = nullptr;
void (*gl::TransformFeedbackVaryings)(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode) = nullptr;
void (*gl::Uniform1ui)(GLint location, GLuint v0) = nullptr;
void (*gl::Uniform1uiv)(GLint location, GLsizei count, const GLuint * value) = nullptr;
void (*gl::Uniform2ui)(GLint location, GLuint v0, GLuint v1) = nullptr;
void (*gl::Uniform2uiv)(GLint location, GLsizei count, const GLuint * value) = nullptr;
void (*gl::Uniform3ui)(GLint location, GLuint v0, GLuint v1, GLuint v2) = nullptr;
void (*gl::Uniform3uiv)(GLint location, GLsizei count, const GLuint * value) = nullptr;
void (*gl::Uniform4ui)(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3) = nullptr;
void (*gl::Uniform4uiv)(GLint location, GLsizei count, const GLuint * value) = nullptr;
void (*gl::VertexAttribI1i)(GLuint index, GLint x) = nullptr;
void (*gl::VertexAttribI1iv)(GLuint index, const GLint * v) = nullptr;
void (*gl::VertexAttribI1ui)(GLuint index, GLuint x) = nullptr;
void (*gl::VertexAttribI1uiv)(GLuint index, const GLuint * v) = nullptr;
void (*gl::VertexAttribI2i)(GLuint index, GLint x, GLint y) = nullptr;
void (*gl::VertexAttribI2iv)(GLuint index, const GLint * v) = nullptr;
void (*gl::VertexAttribI2ui)(GLuint index, GLuint x, GLuint y) = nullptr;
void (*gl::VertexAttribI2uiv)(GLuint index, const GLuint * v) = nullptr;
void (*gl::VertexAttribI3i)(GLuint index, GLint x, GLint y, GLint z) = nullptr;
void (*gl::VertexAttribI3iv)(GLuint index, const GLint * v) = nullptr;
void (*gl::VertexAttribI3ui)(GLuint index, GLuint x, GLuint y, GLuint z) = nullptr;
void (*gl::VertexAttribI3uiv)(GLuint index, const GLuint * v) = nullptr;
void (*gl::VertexAttribI4bv)(GLuint index, const GLbyte * v) = nullptr;
void (*gl::VertexAttribI4i)(GLuint index, GLint x, GLint y, GLint z, GLint w) = nullptr;
void (*gl::VertexAttribI4iv)(GLuint index, const GLint * v) = nullptr;
void (*gl::VertexAttribI4sv)(GLuint index, const GLshort * v) = nullptr;
void (*gl::VertexAttribI4ubv)(GLuint index, const GLubyte * v) = nullptr;
void (*gl::VertexAttribI4ui)(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w) = nullptr;
void (*gl::VertexAttribI4uiv)(GLuint index, const GLuint * v) = nullptr;
void (*gl::VertexAttribI4usv)(GLuint index, const GLushort * v) = nullptr;
void (*gl::VertexAttribIPointer)(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer) = nullptr;

bool gl::LoadGl_30(LoadFunc func){
    if (!LoadGl_21(func)){
        return false;
    }
 
    gl::BeginConditionalRender = glBeginConditionalRender;
    gl::BeginTransformFeedback = glBeginTransformFeedback;
    gl::BindBufferBase = glBindBufferBase;
    gl::BindBufferRange = glBindBufferRange;
    gl::BindFragDataLocation = glBindFragDataLocation;
    gl::BindFramebuffer = glBindFramebuffer;
    gl::BindRenderbuffer = glBindRenderbuffer;
    gl::BindVertexArray = glBindVertexArray;
    gl::BlitFramebuffer = glBlitFramebuffer;
    gl::CheckFramebufferStatus = glCheckFramebufferStatus;
    gl::ClampColor = glClampColor;
    gl::ClearBufferfi = glClearBufferfi;
    gl::ClearBufferfv = glClearBufferfv;
    gl::ClearBufferiv = glClearBufferiv;
    gl::ClearBufferuiv = glClearBufferuiv;
    gl::ColorMaski = glColorMaski;
    gl::DeleteFramebuffers = glDeleteFramebuffers;
    gl::DeleteRenderbuffers = glDeleteRenderbuffers;
    gl::DeleteVertexArrays = glDeleteVertexArrays;
    gl::Disablei = glDisablei;
    gl::Enablei = glEnablei;
    gl::EndConditionalRender = glEndConditionalRender;
    gl::EndTransformFeedback = glEndTransformFeedback;
    gl::FlushMappedBufferRange = glFlushMappedBufferRange;
    gl::FramebufferRenderbuffer = glFramebufferRenderbuffer;
    gl::FramebufferTexture1D = glFramebufferTexture1D;
    gl::FramebufferTexture2D = glFramebufferTexture2D;
    gl::FramebufferTexture3D = glFramebufferTexture3D;
    gl::FramebufferTextureLayer = glFramebufferTextureLayer;
    gl::GenFramebuffers = glGenFramebuffers;
    gl::GenRenderbuffers = glGenRenderbuffers;
    gl::GenVertexArrays = glGenVertexArrays;
    gl::GenerateMipmap = glGenerateMipmap;
    gl::GetBooleani_v = glGetBooleani_v;
    gl::GetFragDataLocation = glGetFragDataLocation;
    gl::GetFramebufferAttachmentParameteriv = glGetFramebufferAttachmentParameteriv;
    gl::GetIntegeri_v = glGetIntegeri_v;
    gl::GetRenderbufferParameteriv = glGetRenderbufferParameteriv;
    gl::GetStringi = glGetStringi;
    gl::GetTexParameterIiv = glGetTexParameterIiv;
    gl::GetTexParameterIuiv = glGetTexParameterIuiv;
    gl::GetTransformFeedbackVarying = glGetTransformFeedbackVarying;
    gl::GetUniformuiv = glGetUniformuiv;
    gl::GetVertexAttribIiv = glGetVertexAttribIiv;
    gl::GetVertexAttribIuiv = glGetVertexAttribIuiv;
    gl::IsEnabledi = glIsEnabledi;
    gl::IsFramebuffer = glIsFramebuffer;
    gl::IsRenderbuffer = glIsRenderbuffer;
    gl::IsVertexArray = glIsVertexArray;
    gl::MapBufferRange = glMapBufferRange;
    gl::RenderbufferStorage = glRenderbufferStorage;
    gl::RenderbufferStorageMultisample = glRenderbufferStorageMultisample;
    gl::TexParameterIiv = glTexParameterIiv;
    gl::TexParameterIuiv = glTexParameterIuiv;
    gl::TransformFeedbackVaryings = glTransformFeedbackVaryings;
    gl::Uniform1ui = glUniform1ui;
    gl::Uniform1uiv = glUniform1uiv;
    gl::Uniform2ui = glUniform2ui;
    gl::Uniform2uiv = glUniform2uiv;
    gl::Uniform3ui = glUniform3ui;
    gl::Uniform3uiv = glUniform3uiv;
    gl::Uniform4ui = glUniform4ui;
    gl::Uniform4uiv = glUniform4uiv;
    gl::VertexAttribI1i = glVertexAttribI1i;
    gl::VertexAttribI1iv = glVertexAttribI1iv;
    gl::VertexAttribI1ui = glVertexAttribI1ui;
    gl::VertexAttribI1uiv = glVertexAttribI1uiv;
    gl::VertexAttribI2i = glVertexAttribI2i;
    gl::VertexAttribI2iv = glVertexAttribI2iv;
    gl::VertexAttribI2ui = glVertexAttribI2ui;
    gl::VertexAttribI2uiv = glVertexAttribI2uiv;
    gl::VertexAttribI3i = glVertexAttribI3i;
    gl::VertexAttribI3iv = glVertexAttribI3iv;
    gl::VertexAttribI3ui = glVertexAttribI3ui;
    gl::VertexAttribI3uiv = glVertexAttribI3uiv;
    gl::VertexAttribI4bv = glVertexAttribI4bv;
    gl::VertexAttribI4i = glVertexAttribI4i;
    gl::VertexAttribI4iv = glVertexAttribI4iv;
    gl::VertexAttribI4sv = glVertexAttribI4sv;
    gl::VertexAttribI4ubv = glVertexAttribI4ubv;
    gl::VertexAttribI4ui = glVertexAttribI4ui;
    gl::VertexAttribI4uiv = glVertexAttribI4uiv;
    gl::VertexAttribI4usv = glVertexAttribI4usv;
    gl::VertexAttribIPointer = glVertexAttribIPointer;

    return true;
}