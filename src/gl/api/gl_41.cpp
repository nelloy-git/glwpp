#include "glwpp/gl/api/gl_41.hpp"

#include "glad/gl.h"

using namespace glwpp;

void (*gl::ActiveShaderProgram)(UInt pipeline, UInt program) = nullptr;
void (*gl::BindProgramPipeline)(UInt pipeline) = nullptr;
void (*gl::ClearDepthf)(Float d) = nullptr;
GLuint (*gl::CreateShaderProgramv)(Enum type, Sizei count, const Char *const* strings) = nullptr;
void (*gl::DeleteProgramPipelines)(Sizei n, const UInt * pipelines) = nullptr;
void (*gl::DepthRangeArrayv)(UInt first, Sizei count, const Double * v) = nullptr;
void (*gl::DepthRangeIndexed)(UInt index, Double n, Double f) = nullptr;
void (*gl::DepthRangef)(Float n, Float f) = nullptr;
void (*gl::GenProgramPipelines)(Sizei n, UInt * pipelines) = nullptr;
void (*gl::GetDoublei_v)(Enum target, UInt index, Double * data) = nullptr;
void (*gl::GetFloati_v)(Enum target, UInt index, Float * data) = nullptr;
void (*gl::GetProgramBinary)(UInt program, Sizei bufSize, Sizei * length, Enum * binaryFormat, void * binary) = nullptr;
void (*gl::GetProgramPipelineInfoLog)(UInt pipeline, Sizei bufSize, Sizei * length, Char * infoLog) = nullptr;
void (*gl::GetProgramPipelineiv)(UInt pipeline, Enum pname, Int * params) = nullptr;
void (*gl::GetShaderPrecisionFormat)(Enum shadertype, Enum precisiontype, Int * range, Int * precision) = nullptr;
void (*gl::GetVertexAttribLdv)(UInt index, Enum pname, Double * params) = nullptr;
GLboolean (*gl::IsProgramPipeline)(UInt pipeline) = nullptr;
void (*gl::ProgramBinary)(UInt program, Enum binaryFormat, const void * binary, Sizei length) = nullptr;
void (*gl::ProgramParameteri)(UInt program, Enum pname, Int value) = nullptr;
void (*gl::ProgramUniform1d)(UInt program, Int location, Double v0) = nullptr;
void (*gl::ProgramUniform1dv)(UInt program, Int location, Sizei count, const Double * value) = nullptr;
void (*gl::ProgramUniform1f)(UInt program, Int location, Float v0) = nullptr;
void (*gl::ProgramUniform1fv)(UInt program, Int location, Sizei count, const Float * value) = nullptr;
void (*gl::ProgramUniform1i)(UInt program, Int location, Int v0) = nullptr;
void (*gl::ProgramUniform1iv)(UInt program, Int location, Sizei count, const Int * value) = nullptr;
void (*gl::ProgramUniform1ui)(UInt program, Int location, UInt v0) = nullptr;
void (*gl::ProgramUniform1uiv)(UInt program, Int location, Sizei count, const UInt * value) = nullptr;
void (*gl::ProgramUniform2d)(UInt program, Int location, Double v0, Double v1) = nullptr;
void (*gl::ProgramUniform2dv)(UInt program, Int location, Sizei count, const Double * value) = nullptr;
void (*gl::ProgramUniform2f)(UInt program, Int location, Float v0, Float v1) = nullptr;
void (*gl::ProgramUniform2fv)(UInt program, Int location, Sizei count, const Float * value) = nullptr;
void (*gl::ProgramUniform2i)(UInt program, Int location, Int v0, Int v1) = nullptr;
void (*gl::ProgramUniform2iv)(UInt program, Int location, Sizei count, const Int * value) = nullptr;
void (*gl::ProgramUniform2ui)(UInt program, Int location, UInt v0, UInt v1) = nullptr;
void (*gl::ProgramUniform2uiv)(UInt program, Int location, Sizei count, const UInt * value) = nullptr;
void (*gl::ProgramUniform3d)(UInt program, Int location, Double v0, Double v1, Double v2) = nullptr;
void (*gl::ProgramUniform3dv)(UInt program, Int location, Sizei count, const Double * value) = nullptr;
void (*gl::ProgramUniform3f)(UInt program, Int location, Float v0, Float v1, Float v2) = nullptr;
void (*gl::ProgramUniform3fv)(UInt program, Int location, Sizei count, const Float * value) = nullptr;
void (*gl::ProgramUniform3i)(UInt program, Int location, Int v0, Int v1, Int v2) = nullptr;
void (*gl::ProgramUniform3iv)(UInt program, Int location, Sizei count, const Int * value) = nullptr;
void (*gl::ProgramUniform3ui)(UInt program, Int location, UInt v0, UInt v1, UInt v2) = nullptr;
void (*gl::ProgramUniform3uiv)(UInt program, Int location, Sizei count, const UInt * value) = nullptr;
void (*gl::ProgramUniform4d)(UInt program, Int location, Double v0, Double v1, Double v2, Double v3) = nullptr;
void (*gl::ProgramUniform4dv)(UInt program, Int location, Sizei count, const Double * value) = nullptr;
void (*gl::ProgramUniform4f)(UInt program, Int location, Float v0, Float v1, Float v2, Float v3) = nullptr;
void (*gl::ProgramUniform4fv)(UInt program, Int location, Sizei count, const Float * value) = nullptr;
void (*gl::ProgramUniform4i)(UInt program, Int location, Int v0, Int v1, Int v2, Int v3) = nullptr;
void (*gl::ProgramUniform4iv)(UInt program, Int location, Sizei count, const Int * value) = nullptr;
void (*gl::ProgramUniform4ui)(UInt program, Int location, UInt v0, UInt v1, UInt v2, UInt v3) = nullptr;
void (*gl::ProgramUniform4uiv)(UInt program, Int location, Sizei count, const UInt * value) = nullptr;
void (*gl::ProgramUniformMatrix2dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix2fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ProgramUniformMatrix2x3dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix2x3fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ProgramUniformMatrix2x4dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix2x4fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ProgramUniformMatrix3dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix3fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ProgramUniformMatrix3x2dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix3x2fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ProgramUniformMatrix3x4dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix3x4fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ProgramUniformMatrix4dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix4fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ProgramUniformMatrix4x2dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix4x2fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ProgramUniformMatrix4x3dv)(UInt program, Int location, Sizei count, Bool transpose, const Double * value) = nullptr;
void (*gl::ProgramUniformMatrix4x3fv)(UInt program, Int location, Sizei count, Bool transpose, const Float * value) = nullptr;
void (*gl::ReleaseShaderCompiler)() = nullptr;
void (*gl::ScissorArrayv)(UInt first, Sizei count, const Int * v) = nullptr;
void (*gl::ScissorIndexed)(UInt index, Int left, Int bottom, Sizei width, Sizei height) = nullptr;
void (*gl::ScissorIndexedv)(UInt index, const Int * v) = nullptr;
void (*gl::ShaderBinary)(Sizei count, const UInt * shaders, Enum binaryFormat, const void * binary, Sizei length) = nullptr;
void (*gl::UseProgramStages)(UInt pipeline, BitField stages, UInt program) = nullptr;
void (*gl::ValidateProgramPipeline)(UInt pipeline) = nullptr;
void (*gl::VertexAttribL1d)(UInt index, Double x) = nullptr;
void (*gl::VertexAttribL1dv)(UInt index, const Double * v) = nullptr;
void (*gl::VertexAttribL2d)(UInt index, Double x, Double y) = nullptr;
void (*gl::VertexAttribL2dv)(UInt index, const Double * v) = nullptr;
void (*gl::VertexAttribL3d)(UInt index, Double x, Double y, Double z) = nullptr;
void (*gl::VertexAttribL3dv)(UInt index, const Double * v) = nullptr;
void (*gl::VertexAttribL4d)(UInt index, Double x, Double y, Double z, Double w) = nullptr;
void (*gl::VertexAttribL4dv)(UInt index, const Double * v) = nullptr;
void (*gl::VertexAttribLPointer)(UInt index, Int size, Enum type, Sizei stride, const void * pointer) = nullptr;
void (*gl::ViewportArrayv)(UInt first, Sizei count, const Float * v) = nullptr;
void (*gl::ViewportIndexedf)(UInt index, Float x, Float y, Float w, Float h) = nullptr;
void (*gl::ViewportIndexedfv)(UInt index, const Float * v) = nullptr;

bool gl::LoadGl_41(LoadFunc func){
    if (!LoadGl_40(func)){
        return false;
    }
 
    gl::ActiveShaderProgram = glActiveShaderProgram;
    gl::BindProgramPipeline = glBindProgramPipeline;
    gl::ClearDepthf = glClearDepthf;
    gl::CreateShaderProgramv = glCreateShaderProgramv;
    gl::DeleteProgramPipelines = glDeleteProgramPipelines;
    gl::DepthRangeArrayv = glDepthRangeArrayv;
    gl::DepthRangeIndexed = glDepthRangeIndexed;
    gl::DepthRangef = glDepthRangef;
    gl::GenProgramPipelines = glGenProgramPipelines;
    gl::GetDoublei_v = glGetDoublei_v;
    gl::GetFloati_v = glGetFloati_v;
    gl::GetProgramBinary = glGetProgramBinary;
    gl::GetProgramPipelineInfoLog = glGetProgramPipelineInfoLog;
    gl::GetProgramPipelineiv = glGetProgramPipelineiv;
    gl::GetShaderPrecisionFormat = glGetShaderPrecisionFormat;
    gl::GetVertexAttribLdv = glGetVertexAttribLdv;
    gl::IsProgramPipeline = glIsProgramPipeline;
    gl::ProgramBinary = glProgramBinary;
    gl::ProgramParameteri = glProgramParameteri;
    gl::ProgramUniform1d = glProgramUniform1d;
    gl::ProgramUniform1dv = glProgramUniform1dv;
    gl::ProgramUniform1f = glProgramUniform1f;
    gl::ProgramUniform1fv = glProgramUniform1fv;
    gl::ProgramUniform1i = glProgramUniform1i;
    gl::ProgramUniform1iv = glProgramUniform1iv;
    gl::ProgramUniform1ui = glProgramUniform1ui;
    gl::ProgramUniform1uiv = glProgramUniform1uiv;
    gl::ProgramUniform2d = glProgramUniform2d;
    gl::ProgramUniform2dv = glProgramUniform2dv;
    gl::ProgramUniform2f = glProgramUniform2f;
    gl::ProgramUniform2fv = glProgramUniform2fv;
    gl::ProgramUniform2i = glProgramUniform2i;
    gl::ProgramUniform2iv = glProgramUniform2iv;
    gl::ProgramUniform2ui = glProgramUniform2ui;
    gl::ProgramUniform2uiv = glProgramUniform2uiv;
    gl::ProgramUniform3d = glProgramUniform3d;
    gl::ProgramUniform3dv = glProgramUniform3dv;
    gl::ProgramUniform3f = glProgramUniform3f;
    gl::ProgramUniform3fv = glProgramUniform3fv;
    gl::ProgramUniform3i = glProgramUniform3i;
    gl::ProgramUniform3iv = glProgramUniform3iv;
    gl::ProgramUniform3ui = glProgramUniform3ui;
    gl::ProgramUniform3uiv = glProgramUniform3uiv;
    gl::ProgramUniform4d = glProgramUniform4d;
    gl::ProgramUniform4dv = glProgramUniform4dv;
    gl::ProgramUniform4f = glProgramUniform4f;
    gl::ProgramUniform4fv = glProgramUniform4fv;
    gl::ProgramUniform4i = glProgramUniform4i;
    gl::ProgramUniform4iv = glProgramUniform4iv;
    gl::ProgramUniform4ui = glProgramUniform4ui;
    gl::ProgramUniform4uiv = glProgramUniform4uiv;
    gl::ProgramUniformMatrix2dv = glProgramUniformMatrix2dv;
    gl::ProgramUniformMatrix2fv = glProgramUniformMatrix2fv;
    gl::ProgramUniformMatrix2x3dv = glProgramUniformMatrix2x3dv;
    gl::ProgramUniformMatrix2x3fv = glProgramUniformMatrix2x3fv;
    gl::ProgramUniformMatrix2x4dv = glProgramUniformMatrix2x4dv;
    gl::ProgramUniformMatrix2x4fv = glProgramUniformMatrix2x4fv;
    gl::ProgramUniformMatrix3dv = glProgramUniformMatrix3dv;
    gl::ProgramUniformMatrix3fv = glProgramUniformMatrix3fv;
    gl::ProgramUniformMatrix3x2dv = glProgramUniformMatrix3x2dv;
    gl::ProgramUniformMatrix3x2fv = glProgramUniformMatrix3x2fv;
    gl::ProgramUniformMatrix3x4dv = glProgramUniformMatrix3x4dv;
    gl::ProgramUniformMatrix3x4fv = glProgramUniformMatrix3x4fv;
    gl::ProgramUniformMatrix4dv = glProgramUniformMatrix4dv;
    gl::ProgramUniformMatrix4fv = glProgramUniformMatrix4fv;
    gl::ProgramUniformMatrix4x2dv = glProgramUniformMatrix4x2dv;
    gl::ProgramUniformMatrix4x2fv = glProgramUniformMatrix4x2fv;
    gl::ProgramUniformMatrix4x3dv = glProgramUniformMatrix4x3dv;
    gl::ProgramUniformMatrix4x3fv = glProgramUniformMatrix4x3fv;
    gl::ReleaseShaderCompiler = glReleaseShaderCompiler;
    gl::ScissorArrayv = glScissorArrayv;
    gl::ScissorIndexed = glScissorIndexed;
    gl::ScissorIndexedv = glScissorIndexedv;
    gl::ShaderBinary = glShaderBinary;
    gl::UseProgramStages = glUseProgramStages;
    gl::ValidateProgramPipeline = glValidateProgramPipeline;
    gl::VertexAttribL1d = glVertexAttribL1d;
    gl::VertexAttribL1dv = glVertexAttribL1dv;
    gl::VertexAttribL2d = glVertexAttribL2d;
    gl::VertexAttribL2dv = glVertexAttribL2dv;
    gl::VertexAttribL3d = glVertexAttribL3d;
    gl::VertexAttribL3dv = glVertexAttribL3dv;
    gl::VertexAttribL4d = glVertexAttribL4d;
    gl::VertexAttribL4dv = glVertexAttribL4dv;
    gl::VertexAttribLPointer = glVertexAttribLPointer;
    gl::ViewportArrayv = glViewportArrayv;
    gl::ViewportIndexedf = glViewportIndexedf;
    gl::ViewportIndexedfv = glViewportIndexedfv;

    return true;
}