#include "glwpp/gl/api/gl_45.hpp"

#include "glad/gl.h"

using namespace glwpp;

void (*gl::BindTextureUnit)(UInt unit, UInt texture) = nullptr;
void (*gl::BlitNamedFramebuffer)(UInt readFramebuffer, UInt drawFramebuffer, Int srcX0, Int srcY0, Int srcX1, Int srcY1, Int dstX0, Int dstY0, Int dstX1, Int dstY1, BitField mask, Enum filter) = nullptr;
GLenum (*gl::CheckNamedFramebufferStatus)(UInt framebuffer, Enum target) = nullptr;
void (*gl::ClearNamedBufferData)(UInt buffer, Enum internalformat, Enum format, Enum type, const void * data) = nullptr;
void (*gl::ClearNamedBufferSubData)(UInt buffer, Enum internalformat, IntPtr offset, SizeiPtr size, Enum format, Enum type, const void * data) = nullptr;
void (*gl::ClearNamedFramebufferfi)(UInt framebuffer, Enum buffer, Int drawbuffer, Float depth, Int stencil) = nullptr;
void (*gl::ClearNamedFramebufferfv)(UInt framebuffer, Enum buffer, Int drawbuffer, const Float * value) = nullptr;
void (*gl::ClearNamedFramebufferiv)(UInt framebuffer, Enum buffer, Int drawbuffer, const Int * value) = nullptr;
void (*gl::ClearNamedFramebufferuiv)(UInt framebuffer, Enum buffer, Int drawbuffer, const UInt * value) = nullptr;
void (*gl::ClipControl)(Enum origin, Enum depth) = nullptr;
void (*gl::CompressedTextureSubImage1D)(UInt texture, Int level, Int xoffset, Sizei width, Enum format, Sizei imageSize, const void * data) = nullptr;
void (*gl::CompressedTextureSubImage2D)(UInt texture, Int level, Int xoffset, Int yoffset, Sizei width, Sizei height, Enum format, Sizei imageSize, const void * data) = nullptr;
void (*gl::CompressedTextureSubImage3D)(UInt texture, Int level, Int xoffset, Int yoffset, Int zoffset, Sizei width, Sizei height, Sizei depth, Enum format, Sizei imageSize, const void * data) = nullptr;
void (*gl::CopyNamedBufferSubData)(UInt readBuffer, UInt writeBuffer, IntPtr readOffset, IntPtr writeOffset, SizeiPtr size) = nullptr;
void (*gl::CopyTextureSubImage1D)(UInt texture, Int level, Int xoffset, Int x, Int y, Sizei width) = nullptr;
void (*gl::CopyTextureSubImage2D)(UInt texture, Int level, Int xoffset, Int yoffset, Int x, Int y, Sizei width, Sizei height) = nullptr;
void (*gl::CopyTextureSubImage3D)(UInt texture, Int level, Int xoffset, Int yoffset, Int zoffset, Int x, Int y, Sizei width, Sizei height) = nullptr;
void (*gl::CreateBuffers)(Sizei n, UInt * buffers) = nullptr;
void (*gl::CreateFramebuffers)(Sizei n, UInt * framebuffers) = nullptr;
void (*gl::CreateProgramPipelines)(Sizei n, UInt * pipelines) = nullptr;
void (*gl::CreateQueries)(Enum target, Sizei n, UInt * ids) = nullptr;
void (*gl::CreateRenderbuffers)(Sizei n, UInt * renderbuffers) = nullptr;
void (*gl::CreateSamplers)(Sizei n, UInt * samplers) = nullptr;
void (*gl::CreateTextures)(Enum target, Sizei n, UInt * textures) = nullptr;
void (*gl::CreateTransformFeedbacks)(Sizei n, UInt * ids) = nullptr;
void (*gl::CreateVertexArrays)(Sizei n, UInt * arrays) = nullptr;
void (*gl::DisableVertexArrayAttrib)(UInt vaobj, UInt index) = nullptr;
void (*gl::EnableVertexArrayAttrib)(UInt vaobj, UInt index) = nullptr;
void (*gl::FlushMappedNamedBufferRange)(UInt buffer, IntPtr offset, SizeiPtr length) = nullptr;
void (*gl::GenerateTextureMipmap)(UInt texture) = nullptr;
void (*gl::GetCompressedTextureImage)(UInt texture, Int level, Sizei bufSize, void * pixels) = nullptr;
void (*gl::GetCompressedTextureSubImage)(UInt texture, Int level, Int xoffset, Int yoffset, Int zoffset, Sizei width, Sizei height, Sizei depth, Sizei bufSize, void * pixels) = nullptr;
GLenum (*gl::GetGraphicsResetStatus)() = nullptr;
void (*gl::GetNamedBufferParameteri64v)(UInt buffer, Enum pname, GLint64 * params) = nullptr;
void (*gl::GetNamedBufferParameteriv)(UInt buffer, Enum pname, Int * params) = nullptr;
void (*gl::GetNamedBufferPointerv)(UInt buffer, Enum pname, void ** params) = nullptr;
void (*gl::GetNamedBufferSubData)(UInt buffer, IntPtr offset, SizeiPtr size, void * data) = nullptr;
void (*gl::GetNamedFramebufferAttachmentParameteriv)(UInt framebuffer, Enum attachment, Enum pname, Int * params) = nullptr;
void (*gl::GetNamedFramebufferParameteriv)(UInt framebuffer, Enum pname, Int * param) = nullptr;
void (*gl::GetNamedRenderbufferParameteriv)(UInt renderbuffer, Enum pname, Int * params) = nullptr;
void (*gl::GetQueryBufferObjecti64v)(UInt id, UInt buffer, Enum pname, IntPtr offset) = nullptr;
void (*gl::GetQueryBufferObjectiv)(UInt id, UInt buffer, Enum pname, IntPtr offset) = nullptr;
void (*gl::GetQueryBufferObjectui64v)(UInt id, UInt buffer, Enum pname, IntPtr offset) = nullptr;
void (*gl::GetQueryBufferObjectuiv)(UInt id, UInt buffer, Enum pname, IntPtr offset) = nullptr;
void (*gl::GetTextureImage)(UInt texture, Int level, Enum format, Enum type, Sizei bufSize, void * pixels) = nullptr;
void (*gl::GetTextureLevelParameterfv)(UInt texture, Int level, Enum pname, Float * params) = nullptr;
void (*gl::GetTextureLevelParameteriv)(UInt texture, Int level, Enum pname, Int * params) = nullptr;
void (*gl::GetTextureParameterIiv)(UInt texture, Enum pname, Int * params) = nullptr;
void (*gl::GetTextureParameterIuiv)(UInt texture, Enum pname, UInt * params) = nullptr;
void (*gl::GetTextureParameterfv)(UInt texture, Enum pname, Float * params) = nullptr;
void (*gl::GetTextureParameteriv)(UInt texture, Enum pname, Int * params) = nullptr;
void (*gl::GetTextureSubImage)(UInt texture, Int level, Int xoffset, Int yoffset, Int zoffset, Sizei width, Sizei height, Sizei depth, Enum format, Enum type, Sizei bufSize, void * pixels) = nullptr;
void (*gl::GetTransformFeedbacki64_v)(UInt xfb, Enum pname, UInt index, GLint64 * param) = nullptr;
void (*gl::GetTransformFeedbacki_v)(UInt xfb, Enum pname, UInt index, Int * param) = nullptr;
void (*gl::GetTransformFeedbackiv)(UInt xfb, Enum pname, Int * param) = nullptr;
void (*gl::GetVertexArrayIndexed64iv)(UInt vaobj, UInt index, Enum pname, GLint64 * param) = nullptr;
void (*gl::GetVertexArrayIndexediv)(UInt vaobj, UInt index, Enum pname, Int * param) = nullptr;
void (*gl::GetVertexArrayiv)(UInt vaobj, Enum pname, Int * param) = nullptr;
void (*gl::GetnCompressedTexImage)(Enum target, Int lod, Sizei bufSize, void * pixels) = nullptr;
void (*gl::GetnTexImage)(Enum target, Int level, Enum format, Enum type, Sizei bufSize, void * pixels) = nullptr;
void (*gl::GetnUniformdv)(UInt program, Int location, Sizei bufSize, Double * params) = nullptr;
void (*gl::GetnUniformfv)(UInt program, Int location, Sizei bufSize, Float * params) = nullptr;
void (*gl::GetnUniformiv)(UInt program, Int location, Sizei bufSize, Int * params) = nullptr;
void (*gl::GetnUniformuiv)(UInt program, Int location, Sizei bufSize, UInt * params) = nullptr;
void (*gl::InvalidateNamedFramebufferData)(UInt framebuffer, Sizei numAttachments, const Enum * attachments) = nullptr;
void (*gl::InvalidateNamedFramebufferSubData)(UInt framebuffer, Sizei numAttachments, const Enum * attachments, Int x, Int y, Sizei width, Sizei height) = nullptr;
void *(*gl::MapNamedBuffer)(UInt buffer, Enum access) = nullptr;
void *(*gl::MapNamedBufferRange)(UInt buffer, IntPtr offset, SizeiPtr length, BitField access) = nullptr;
void (*gl::MemoryBarrierByRegion)(BitField barriers) = nullptr;
void (*gl::NamedBufferData)(UInt buffer, SizeiPtr size, const void * data, Enum usage) = nullptr;
void (*gl::NamedBufferStorage)(UInt buffer, SizeiPtr size, const void * data, BitField flags) = nullptr;
void (*gl::NamedBufferSubData)(UInt buffer, IntPtr offset, SizeiPtr size, const void * data) = nullptr;
void (*gl::NamedFramebufferDrawBuffer)(UInt framebuffer, Enum buf) = nullptr;
void (*gl::NamedFramebufferDrawBuffers)(UInt framebuffer, Sizei n, const Enum * bufs) = nullptr;
void (*gl::NamedFramebufferParameteri)(UInt framebuffer, Enum pname, Int param) = nullptr;
void (*gl::NamedFramebufferReadBuffer)(UInt framebuffer, Enum src) = nullptr;
void (*gl::NamedFramebufferRenderbuffer)(UInt framebuffer, Enum attachment, Enum renderbuffertarget, UInt renderbuffer) = nullptr;
void (*gl::NamedFramebufferTexture)(UInt framebuffer, Enum attachment, UInt texture, Int level) = nullptr;
void (*gl::NamedFramebufferTextureLayer)(UInt framebuffer, Enum attachment, UInt texture, Int level, Int layer) = nullptr;
void (*gl::NamedRenderbufferStorage)(UInt renderbuffer, Enum internalformat, Sizei width, Sizei height) = nullptr;
void (*gl::NamedRenderbufferStorageMultisample)(UInt renderbuffer, Sizei samples, Enum internalformat, Sizei width, Sizei height) = nullptr;
void (*gl::ReadnPixels)(Int x, Int y, Sizei width, Sizei height, Enum format, Enum type, Sizei bufSize, void * data) = nullptr;
void (*gl::TextureBarrier)() = nullptr;
void (*gl::TextureBuffer)(UInt texture, Enum internalformat, UInt buffer) = nullptr;
void (*gl::TextureBufferRange)(UInt texture, Enum internalformat, UInt buffer, IntPtr offset, SizeiPtr size) = nullptr;
void (*gl::TextureParameterIiv)(UInt texture, Enum pname, const Int * params) = nullptr;
void (*gl::TextureParameterIuiv)(UInt texture, Enum pname, const UInt * params) = nullptr;
void (*gl::TextureParameterf)(UInt texture, Enum pname, Float param) = nullptr;
void (*gl::TextureParameterfv)(UInt texture, Enum pname, const Float * param) = nullptr;
void (*gl::TextureParameteri)(UInt texture, Enum pname, Int param) = nullptr;
void (*gl::TextureParameteriv)(UInt texture, Enum pname, const Int * param) = nullptr;
void (*gl::TextureStorage1D)(UInt texture, Sizei levels, Enum internalformat, Sizei width) = nullptr;
void (*gl::TextureStorage2D)(UInt texture, Sizei levels, Enum internalformat, Sizei width, Sizei height) = nullptr;
void (*gl::TextureStorage2DMultisample)(UInt texture, Sizei samples, Enum internalformat, Sizei width, Sizei height, Bool fixedsamplelocations) = nullptr;
void (*gl::TextureStorage3D)(UInt texture, Sizei levels, Enum internalformat, Sizei width, Sizei height, Sizei depth) = nullptr;
void (*gl::TextureStorage3DMultisample)(UInt texture, Sizei samples, Enum internalformat, Sizei width, Sizei height, Sizei depth, Bool fixedsamplelocations) = nullptr;
void (*gl::TextureSubImage1D)(UInt texture, Int level, Int xoffset, Sizei width, Enum format, Enum type, const void * pixels) = nullptr;
void (*gl::TextureSubImage2D)(UInt texture, Int level, Int xoffset, Int yoffset, Sizei width, Sizei height, Enum format, Enum type, const void * pixels) = nullptr;
void (*gl::TextureSubImage3D)(UInt texture, Int level, Int xoffset, Int yoffset, Int zoffset, Sizei width, Sizei height, Sizei depth, Enum format, Enum type, const void * pixels) = nullptr;
void (*gl::TransformFeedbackBufferBase)(UInt xfb, UInt index, UInt buffer) = nullptr;
void (*gl::TransformFeedbackBufferRange)(UInt xfb, UInt index, UInt buffer, IntPtr offset, SizeiPtr size) = nullptr;
GLboolean (*gl::UnmapNamedBuffer)(UInt buffer) = nullptr;
void (*gl::VertexArrayAttribBinding)(UInt vaobj, UInt attribindex, UInt bindingindex) = nullptr;
void (*gl::VertexArrayAttribFormat)(UInt vaobj, UInt attribindex, Int size, Enum type, Bool normalized, UInt relativeoffset) = nullptr;
void (*gl::VertexArrayAttribIFormat)(UInt vaobj, UInt attribindex, Int size, Enum type, UInt relativeoffset) = nullptr;
void (*gl::VertexArrayAttribLFormat)(UInt vaobj, UInt attribindex, Int size, Enum type, UInt relativeoffset) = nullptr;
void (*gl::VertexArrayBindingDivisor)(UInt vaobj, UInt bindingindex, UInt divisor) = nullptr;
void (*gl::VertexArrayElementBuffer)(UInt vaobj, UInt buffer) = nullptr;
void (*gl::VertexArrayVertexBuffer)(UInt vaobj, UInt bindingindex, UInt buffer, IntPtr offset, Sizei stride) = nullptr;
void (*gl::VertexArrayVertexBuffers)(UInt vaobj, UInt first, Sizei count, const UInt * buffers, const IntPtr * offsets, const Sizei * strides) = nullptr;

bool gl::LoadGl_45(LoadFunc func){
    if (!LoadGl_44(func)){
        return false;
    }
 
    gl::BindTextureUnit = glBindTextureUnit;
    gl::BlitNamedFramebuffer = glBlitNamedFramebuffer;
    gl::CheckNamedFramebufferStatus = glCheckNamedFramebufferStatus;
    gl::ClearNamedBufferData = glClearNamedBufferData;
    gl::ClearNamedBufferSubData = glClearNamedBufferSubData;
    gl::ClearNamedFramebufferfi = glClearNamedFramebufferfi;
    gl::ClearNamedFramebufferfv = glClearNamedFramebufferfv;
    gl::ClearNamedFramebufferiv = glClearNamedFramebufferiv;
    gl::ClearNamedFramebufferuiv = glClearNamedFramebufferuiv;
    gl::ClipControl = glClipControl;
    gl::CompressedTextureSubImage1D = glCompressedTextureSubImage1D;
    gl::CompressedTextureSubImage2D = glCompressedTextureSubImage2D;
    gl::CompressedTextureSubImage3D = glCompressedTextureSubImage3D;
    gl::CopyNamedBufferSubData = glCopyNamedBufferSubData;
    gl::CopyTextureSubImage1D = glCopyTextureSubImage1D;
    gl::CopyTextureSubImage2D = glCopyTextureSubImage2D;
    gl::CopyTextureSubImage3D = glCopyTextureSubImage3D;
    gl::CreateBuffers = glCreateBuffers;
    gl::CreateFramebuffers = glCreateFramebuffers;
    gl::CreateProgramPipelines = glCreateProgramPipelines;
    gl::CreateQueries = glCreateQueries;
    gl::CreateRenderbuffers = glCreateRenderbuffers;
    gl::CreateSamplers = glCreateSamplers;
    gl::CreateTextures = glCreateTextures;
    gl::CreateTransformFeedbacks = glCreateTransformFeedbacks;
    gl::CreateVertexArrays = glCreateVertexArrays;
    gl::DisableVertexArrayAttrib = glDisableVertexArrayAttrib;
    gl::EnableVertexArrayAttrib = glEnableVertexArrayAttrib;
    gl::FlushMappedNamedBufferRange = glFlushMappedNamedBufferRange;
    gl::GenerateTextureMipmap = glGenerateTextureMipmap;
    gl::GetCompressedTextureImage = glGetCompressedTextureImage;
    gl::GetCompressedTextureSubImage = glGetCompressedTextureSubImage;
    gl::GetGraphicsResetStatus = glGetGraphicsResetStatus;
    gl::GetNamedBufferParameteri64v = glGetNamedBufferParameteri64v;
    gl::GetNamedBufferParameteriv = glGetNamedBufferParameteriv;
    gl::GetNamedBufferPointerv = glGetNamedBufferPointerv;
    gl::GetNamedBufferSubData = glGetNamedBufferSubData;
    gl::GetNamedFramebufferAttachmentParameteriv = glGetNamedFramebufferAttachmentParameteriv;
    gl::GetNamedFramebufferParameteriv = glGetNamedFramebufferParameteriv;
    gl::GetNamedRenderbufferParameteriv = glGetNamedRenderbufferParameteriv;
    gl::GetQueryBufferObjecti64v = glGetQueryBufferObjecti64v;
    gl::GetQueryBufferObjectiv = glGetQueryBufferObjectiv;
    gl::GetQueryBufferObjectui64v = glGetQueryBufferObjectui64v;
    gl::GetQueryBufferObjectuiv = glGetQueryBufferObjectuiv;
    gl::GetTextureImage = glGetTextureImage;
    gl::GetTextureLevelParameterfv = glGetTextureLevelParameterfv;
    gl::GetTextureLevelParameteriv = glGetTextureLevelParameteriv;
    gl::GetTextureParameterIiv = glGetTextureParameterIiv;
    gl::GetTextureParameterIuiv = glGetTextureParameterIuiv;
    gl::GetTextureParameterfv = glGetTextureParameterfv;
    gl::GetTextureParameteriv = glGetTextureParameteriv;
    gl::GetTextureSubImage = glGetTextureSubImage;
    gl::GetTransformFeedbacki64_v = glGetTransformFeedbacki64_v;
    gl::GetTransformFeedbacki_v = glGetTransformFeedbacki_v;
    gl::GetTransformFeedbackiv = glGetTransformFeedbackiv;
    gl::GetVertexArrayIndexed64iv = glGetVertexArrayIndexed64iv;
    gl::GetVertexArrayIndexediv = glGetVertexArrayIndexediv;
    gl::GetVertexArrayiv = glGetVertexArrayiv;
    gl::GetnCompressedTexImage = glGetnCompressedTexImage;
    gl::GetnTexImage = glGetnTexImage;
    gl::GetnUniformdv = glGetnUniformdv;
    gl::GetnUniformfv = glGetnUniformfv;
    gl::GetnUniformiv = glGetnUniformiv;
    gl::GetnUniformuiv = glGetnUniformuiv;
    gl::InvalidateNamedFramebufferData = glInvalidateNamedFramebufferData;
    gl::InvalidateNamedFramebufferSubData = glInvalidateNamedFramebufferSubData;
    gl::MapNamedBuffer = glMapNamedBuffer;
    gl::MapNamedBufferRange = glMapNamedBufferRange;
    gl::MemoryBarrierByRegion = glMemoryBarrierByRegion;
    gl::NamedBufferData = glNamedBufferData;
    gl::NamedBufferStorage = glNamedBufferStorage;
    gl::NamedBufferSubData = glNamedBufferSubData;
    gl::NamedFramebufferDrawBuffer = glNamedFramebufferDrawBuffer;
    gl::NamedFramebufferDrawBuffers = glNamedFramebufferDrawBuffers;
    gl::NamedFramebufferParameteri = glNamedFramebufferParameteri;
    gl::NamedFramebufferReadBuffer = glNamedFramebufferReadBuffer;
    gl::NamedFramebufferRenderbuffer = glNamedFramebufferRenderbuffer;
    gl::NamedFramebufferTexture = glNamedFramebufferTexture;
    gl::NamedFramebufferTextureLayer = glNamedFramebufferTextureLayer;
    gl::NamedRenderbufferStorage = glNamedRenderbufferStorage;
    gl::NamedRenderbufferStorageMultisample = glNamedRenderbufferStorageMultisample;
    gl::ReadnPixels = glReadnPixels;
    gl::TextureBarrier = glTextureBarrier;
    gl::TextureBuffer = glTextureBuffer;
    gl::TextureBufferRange = glTextureBufferRange;
    gl::TextureParameterIiv = glTextureParameterIiv;
    gl::TextureParameterIuiv = glTextureParameterIuiv;
    gl::TextureParameterf = glTextureParameterf;
    gl::TextureParameterfv = glTextureParameterfv;
    gl::TextureParameteri = glTextureParameteri;
    gl::TextureParameteriv = glTextureParameteriv;
    gl::TextureStorage1D = glTextureStorage1D;
    gl::TextureStorage2D = glTextureStorage2D;
    gl::TextureStorage2DMultisample = glTextureStorage2DMultisample;
    gl::TextureStorage3D = glTextureStorage3D;
    gl::TextureStorage3DMultisample = glTextureStorage3DMultisample;
    gl::TextureSubImage1D = glTextureSubImage1D;
    gl::TextureSubImage2D = glTextureSubImage2D;
    gl::TextureSubImage3D = glTextureSubImage3D;
    gl::TransformFeedbackBufferBase = glTransformFeedbackBufferBase;
    gl::TransformFeedbackBufferRange = glTransformFeedbackBufferRange;
    gl::UnmapNamedBuffer = glUnmapNamedBuffer;
    gl::VertexArrayAttribBinding = glVertexArrayAttribBinding;
    gl::VertexArrayAttribFormat = glVertexArrayAttribFormat;
    gl::VertexArrayAttribIFormat = glVertexArrayAttribIFormat;
    gl::VertexArrayAttribLFormat = glVertexArrayAttribLFormat;
    gl::VertexArrayBindingDivisor = glVertexArrayBindingDivisor;
    gl::VertexArrayElementBuffer = glVertexArrayElementBuffer;
    gl::VertexArrayVertexBuffer = glVertexArrayVertexBuffer;
    gl::VertexArrayVertexBuffers = glVertexArrayVertexBuffers;

    return true;
}