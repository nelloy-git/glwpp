#pragma once

#include <functional>
#include <memory>

#include "KHR/khrplatform.h"

#include "utils/SrcLoc.hpp"

struct __GLsync;

namespace glwpp {

class Context;

class InterfaceGl {
public:
    InterfaceGl(Context* ctx, const std::function<void(const SrcLoc&)> debug) :
        _ctx(ctx),
        _debug(debug){
    }
    InterfaceGl(const InterfaceGl&) = delete;
    InterfaceGl(const InterfaceGl&&) = delete;
    ~InterfaceGl(){};

    using GLsizei = const std::shared_ptr<int>&;
    using GLsizeiArr = const std::shared_ptr<int[]>&;
    using GLintptr = const std::shared_ptr<khronos_intptr_t>&;
    using GLintptrArr = const std::shared_ptr<khronos_intptr_t[]>&;
    using GLboolean = const std::shared_ptr<unsigned char>&;
    using GLbooleanArr = const std::shared_ptr<unsigned char[]>&;
    using GLbooleanRes = std::shared_ptr<unsigned char>;
    using GLushort = const std::shared_ptr<khronos_uint16_t>&;
    using GLushortArr = const std::shared_ptr<khronos_uint16_t[]>&;
    using GLshort = const std::shared_ptr<khronos_int16_t>&;
    using GLshortArr = const std::shared_ptr<khronos_int16_t[]>&;
    using GLint = const std::shared_ptr<int>&;
    using GLintArr = const std::shared_ptr<int[]>&;
    using GLintRes = std::shared_ptr<int>;
    using GLuint = const std::shared_ptr<unsigned int>&;
    using GLuintArr = const std::shared_ptr<unsigned int[]>&;
    using GLuintRes = std::shared_ptr<unsigned int>;
    using GLint64 = const std::shared_ptr<khronos_int64_t>&;
    using GLint64Arr = const std::shared_ptr<khronos_int64_t[]>&;
    using GLuint64 = const std::shared_ptr<khronos_uint64_t>&;
    using GLuint64Arr = const std::shared_ptr<khronos_uint64_t[]>&;
    using GLbitfield = const std::shared_ptr<unsigned int>&;
    using GLbitfieldArr = const std::shared_ptr<unsigned int[]>&;
    using GLenum = const std::shared_ptr<unsigned int>&;
    using GLenumArr = const std::shared_ptr<unsigned int[]>&;
    using GLenumRes = std::shared_ptr<unsigned int>;
    using GLchar = const std::shared_ptr<char>&;
    using GLcharArr = const std::shared_ptr<char[]>&;
    using GLcharArrRes = std::shared_ptr<char[]>;
    using GLbyte = const std::shared_ptr<khronos_int8_t>&;
    using GLbyteArr = const std::shared_ptr<khronos_int8_t[]>&;
    using GLubyte = const std::shared_ptr<khronos_uint8_t>&;
    using GLubyteArr = const std::shared_ptr<khronos_uint8_t[]>&;
    using GLubyteArrRes = std::shared_ptr<khronos_uint8_t[]>;
    using GLsizeiptr = const std::shared_ptr<khronos_ssize_t>&;
    using GLsizeiptrArr = const std::shared_ptr<khronos_ssize_t[]>&;
    using GLfloat = const std::shared_ptr<khronos_float_t>&;
    using GLfloatArr = const std::shared_ptr<khronos_float_t[]>&;
    using GLdouble = const std::shared_ptr<double>&;
    using GLdoubleArr = const std::shared_ptr<double[]>&;
    using GLsync = const std::shared_ptr<__GLsync*>&;
    using GLsyncRes = std::shared_ptr<__GLsync*>;
    using GLdata = const std::shared_ptr<void>&;
    using GLdataPtr = const std::shared_ptr<void*>&;
    using GLsrc = const SrcLoc&;

    virtual void ActiveShaderProgram(GLuint pipeline, GLuint program, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ActiveTexture(GLenum texture, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void AttachShader(GLuint program, GLuint shader, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BeginConditionalRender(GLuint id, GLenum mode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BeginQuery(GLenum target, GLuint id, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BeginQueryIndexed(GLenum target, GLuint index, GLuint id, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BeginTransformFeedback(GLenum primitiveMode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindAttribLocation(GLuint program, GLuint index, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindBuffer(GLenum target, GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindBufferBase(GLenum target, GLuint index, GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindBuffersBase(GLenum target, GLuint first, GLsizei count, GLuintArr buffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindBuffersRange(GLenum target, GLuint first, GLsizei count, GLuintArr buffers, GLintptrArr offsets, GLsizeiptrArr sizes, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindFragDataLocation(GLuint program, GLuint color, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindFramebuffer(GLenum target, GLuint framebuffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindImageTextures(GLuint first, GLsizei count, GLuintArr textures, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindProgramPipeline(GLuint pipeline, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindRenderbuffer(GLenum target, GLuint renderbuffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindSampler(GLuint unit, GLuint sampler, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindSamplers(GLuint first, GLsizei count, GLuintArr samplers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindTexture(GLenum target, GLuint texture, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindTextureUnit(GLuint unit, GLuint texture, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindTextures(GLuint first, GLsizei count, GLuintArr textures, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindTransformFeedback(GLenum target, GLuint id, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindVertexArray(GLuint array, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BindVertexBuffers(GLuint first, GLsizei count, GLuintArr buffers, GLintptrArr offsets, GLsizeiArr strides, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendEquation(GLenum mode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendEquationi(GLuint buf, GLenum mode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendFunc(GLenum sfactor, GLenum dfactor, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha, GLenum modeAlpha, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlendFunci(GLuint buf, GLenum src, GLenum dst, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BufferData(GLenum target, GLsizeiptr size, GLdata data, GLenum usage, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BufferStorage(GLenum target, GLsizeiptr size, GLdata data, GLbitfield flags, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void BufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CheckFramebufferStatus(GLenum target, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CheckNamedFramebufferStatus(GLuint framebuffer, GLenum target, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClampColor(GLenum target, GLenum clamp, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Clear(GLbitfield mask, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearBufferfv(GLenum buffer, GLint drawbuffer, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearBufferiv(GLenum buffer, GLint drawbuffer, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearBufferuiv(GLenum buffer, GLint drawbuffer, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearDepth(GLdouble depth, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearDepthf(GLfloat d, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearStencil(GLint s, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ClipControl(GLenum origin, GLenum depth, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompileShader(GLuint shader, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CreateBuffers(GLsizei n, GLuintArr dst, GLsrc src_loc = SrcLoc{}) = 0;

    virtual void CreateFramebuffers(GLsizei n, GLuintArr framebuffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLuintRes CreateProgram(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CreateProgramPipelines(GLsizei n, GLuintArr pipelines, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CreateQueries(GLenum target, GLsizei n, GLuintArr ids, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CreateRenderbuffers(GLsizei n, GLuintArr renderbuffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CreateSamplers(GLsizei n, GLuintArr samplers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLuintRes CreateShader(GLenum type, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CreateTextures(GLenum target, GLsizei n, GLuintArr textures, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CreateTransformFeedbacks(GLsizei n, GLuintArr ids, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CreateVertexArrays(GLsizei n, GLuintArr arrays, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void CullFace(GLenum mode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, GLuintArr ids, GLboolean enabled, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, GLcharArr buf, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteBuffers(GLsizei n, GLuintArr buffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteFramebuffers(GLsizei n, GLuintArr framebuffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteProgram(GLuint program, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteProgramPipelines(GLsizei n, GLuintArr pipelines, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteQueries(GLsizei n, GLuintArr ids, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteRenderbuffers(GLsizei n, GLuintArr renderbuffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteSamplers(GLsizei count, GLuintArr samplers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteShader(GLuint shader, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteSync(GLsync sync, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteTextures(GLsizei n, GLuintArr textures, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteTransformFeedbacks(GLsizei n, GLuintArr ids, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DeleteVertexArrays(GLsizei n, GLuintArr arrays, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DepthFunc(GLenum func, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DepthMask(GLboolean flag, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DepthRange(GLdouble n, GLdouble f, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DepthRangeArrayv(GLuint first, GLsizei count, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DepthRangeIndexed(GLuint index, GLdouble n, GLdouble f, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DepthRangef(GLfloat n, GLfloat f, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DetachShader(GLuint program, GLuint shader, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Disable(GLenum cap, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DisableVertexArrayAttrib(GLuint vaobj, GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DisableVertexAttribArray(GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Disablei(GLenum target, GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DispatchComputeIndirect(GLintptr indirect, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawArrays(GLenum mode, GLint first, GLsizei count, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawArraysIndirect(GLenum mode, GLdata indirect, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawBuffer(GLenum buf, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawBuffers(GLsizei n, GLenumArr bufs, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawElements(GLenum mode, GLsizei count, GLenum type, GLdata indices, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, GLdata indices, GLint basevertex, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawElementsIndirect(GLenum mode, GLenum type, GLdata indirect, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, GLdata indices, GLsizei instancecount, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, GLdata indices, GLsizei instancecount, GLuint baseinstance, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, GLdata indices, GLsizei instancecount, GLint basevertex, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, GLdata indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLdata indices, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLdata indices, GLint basevertex, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawTransformFeedback(GLenum mode, GLuint id, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void DrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Enable(GLenum cap, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void EnableVertexArrayAttrib(GLuint vaobj, GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void EnableVertexAttribArray(GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Enablei(GLenum target, GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void EndConditionalRender(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void EndQuery(GLenum target, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void EndQueryIndexed(GLenum target, GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void EndTransformFeedback(GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLsyncRes FenceSync(GLenum condition, GLbitfield flags, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Finish(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Flush(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FramebufferParameteri(GLenum target, GLenum pname, GLint param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void FrontFace(GLenum mode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenBuffers(GLsizei n, GLuintArr buffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenFramebuffers(GLsizei n, GLuintArr framebuffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenProgramPipelines(GLsizei n, GLuintArr pipelines, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenQueries(GLsizei n, GLuintArr ids, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenRenderbuffers(GLsizei n, GLuintArr renderbuffers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenSamplers(GLsizei count, GLuintArr samplers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenTextures(GLsizei n, GLuintArr textures, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenTransformFeedbacks(GLsizei n, GLuintArr ids, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenVertexArrays(GLsizei n, GLuintArr arrays, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenerateMipmap(GLenum target, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GenerateTextureMipmap(GLuint texture, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei length, GLint size, GLenum type, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei length, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei length, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLintArr values, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei length, GLint size, GLenum type, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei length, GLcharArr uniformBlockName, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei length, GLcharArr uniformName, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetActiveUniformsiv(GLuint program, GLsizei uniformCount, GLuintArr uniformIndices, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetAttachedShaders(GLuint program, GLsizei maxCount, GLsizeiArr count, GLuintArr shaders, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLintRes GetAttribLocation(GLuint program, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetBooleani_v(GLenum target, GLuint index, GLbooleanArr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetBooleanv(GLenum pname, GLbooleanArr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetBufferParameteri64v(GLenum target, GLenum pname, GLint64Arr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetBufferParameteriv(GLenum target, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetBufferPointerv(GLenum target, GLenum pname, GLdataPtr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetCompressedTexImage(GLenum target, GLint level, GLdata img, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLuintRes GetDebugMessageLog(GLuint count, GLsizei bufSize, GLenumArr sources, GLenumArr types, GLuintArr ids, GLenumArr severities, GLsizei lengths, GLcharArr messageLog, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetDoublei_v(GLenum target, GLuint index, GLdoubleArr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetDoublev(GLenum pname, GLdoubleArr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLenumRes GetError(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetFloati_v(GLenum target, GLuint index, GLfloatArr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetFloatv(GLenum pname, GLfloatArr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLintRes GetFragDataIndex(GLuint program, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLintRes GetFragDataLocation(GLuint program, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetFramebufferParameteriv(GLenum target, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLenumRes GetGraphicsResetStatus(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetInteger64i_v(GLenum target, GLuint index, GLint64Arr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetInteger64v(GLenum pname, GLint64Arr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetIntegeri_v(GLenum target, GLuint index, GLintArr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetIntegerv(GLenum pname, GLintArr data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64Arr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetMultisamplefv(GLenum pname, GLuint index, GLfloatArr val, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64Arr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetNamedBufferPointerv(GLuint buffer, GLenum pname, GLdataPtr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei length, GLcharArr label, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetObjectPtrLabel(GLdata ptr, GLsizei bufSize, GLsizei length, GLcharArr label, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetPointerv(GLenum pname, GLdataPtr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramBinary(GLuint program, GLsizei bufSize, GLsizei length, GLenumArr binaryFormat, GLdata binary, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei length, GLcharArr infoLog, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei length, GLcharArr infoLog, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramPipelineiv(GLuint pipeline, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLuintRes GetProgramResourceIndex(GLuint program, GLenum programInterface, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLintRes GetProgramResourceLocation(GLuint program, GLenum programInterface, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLintRes GetProgramResourceLocationIndex(GLuint program, GLenum programInterface, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei length, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, GLenumArr props, GLsizei count, GLsizei length, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLintArr values, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetProgramiv(GLuint program, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryObjecti64v(GLuint id, GLenum pname, GLint64Arr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryObjectiv(GLuint id, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryObjectui64v(GLuint id, GLenum pname, GLuint64Arr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryObjectuiv(GLuint id, GLenum pname, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetQueryiv(GLenum target, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetRenderbufferParameteriv(GLenum target, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetSamplerParameterIiv(GLuint sampler, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetSamplerParameteriv(GLuint sampler, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei length, GLcharArr infoLog, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLintArr range, GLintArr precision, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetShaderSource(GLuint shader, GLsizei bufSize, GLsizei length, GLcharArr source, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetShaderiv(GLuint shader, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLubyteArrRes GetString(GLenum name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLubyteArrRes GetStringi(GLenum name, GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLuintRes GetSubroutineIndex(GLuint program, GLenum shadertype, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLintRes GetSubroutineUniformLocation(GLuint program, GLenum shadertype, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetSynciv(GLsync sync, GLenum pname, GLsizei count, GLsizei length, GLintArr values, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTexParameterIiv(GLenum target, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTexParameterIuiv(GLenum target, GLenum pname, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTexParameterfv(GLenum target, GLenum pname, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTexParameteriv(GLenum target, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTextureParameterIiv(GLuint texture, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTextureParameterIuiv(GLuint texture, GLenum pname, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTextureParameterfv(GLuint texture, GLenum pname, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTextureParameteriv(GLuint texture, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei length, GLsizeiArr size, GLenumArr type, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64Arr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetTransformFeedbackiv(GLuint xfb, GLenum pname, GLintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLuintRes GetUniformBlockIndex(GLuint program, GLcharArr uniformBlockName, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLintRes GetUniformLocation(GLuint program, GLcharArr name, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetUniformdv(GLuint program, GLint location, GLdoubleArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetUniformfv(GLuint program, GLint location, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetUniformiv(GLuint program, GLint location, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetUniformuiv(GLuint program, GLint location, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64Arr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexArrayiv(GLuint vaobj, GLenum pname, GLintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexAttribIiv(GLuint index, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexAttribIuiv(GLuint index, GLenum pname, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexAttribLdv(GLuint index, GLenum pname, GLdoubleArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexAttribPointerv(GLuint index, GLenum pname, GLdataPtr pointer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexAttribdv(GLuint index, GLenum pname, GLdoubleArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexAttribfv(GLuint index, GLenum pname, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetVertexAttribiv(GLuint index, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdoubleArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void GetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Hint(GLenum target, GLenum mode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void InvalidateBufferData(GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void InvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void InvalidateFramebuffer(GLenum target, GLsizei numAttachments, GLenumArr attachments, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void InvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, GLenumArr attachments, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void InvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, GLenumArr attachments, GLint x, GLint y, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void InvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, GLenumArr attachments, GLint x, GLint y, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void InvalidateTexImage(GLuint texture, GLint level, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void InvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsBuffer(GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsEnabled(GLenum cap, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsEnabledi(GLenum target, GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsFramebuffer(GLuint framebuffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsProgram(GLuint program, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsProgramPipeline(GLuint pipeline, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsQuery(GLuint id, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsRenderbuffer(GLuint renderbuffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsSampler(GLuint sampler, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsShader(GLuint shader, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsSync(GLsync sync, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsTexture(GLuint texture, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsTransformFeedback(GLuint id, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes IsVertexArray(GLuint array, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void LineWidth(GLfloat width, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void LinkProgram(GLuint program, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void LogicOp(GLenum opcode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MemoryBarrier(GLbitfield barriers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MemoryBarrierByRegion(GLbitfield barriers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MinSampleShading(GLfloat value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MultiDrawArrays(GLenum mode, GLintArr first, GLsizeiArr count, GLsizei drawcount, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MultiDrawArraysIndirect(GLenum mode, GLdata indirect, GLsizei drawcount, GLsizei stride, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MultiDrawArraysIndirectCount(GLenum mode, GLdata indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MultiDrawElements(GLenum mode, GLsizeiArr count, GLenum type, GLdataPtr indices, GLsizei drawcount, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MultiDrawElementsBaseVertex(GLenum mode, GLsizeiArr count, GLenum type, GLdataPtr indices, GLsizei drawcount, GLintArr basevertex, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MultiDrawElementsIndirect(GLenum mode, GLenum type, GLdata indirect, GLsizei drawcount, GLsizei stride, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void MultiDrawElementsIndirectCount(GLenum mode, GLenum type, GLdata indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedBufferData(GLuint buffer, GLsizeiptr size, GLdata data, GLenum usage, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedBufferStorage(GLuint buffer, GLsizeiptr size, GLdata data, GLbitfield flags, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, GLenumArr bufs, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedFramebufferReadBuffer(GLuint framebuffer, GLenum src, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void NamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ObjectLabel(GLenum identifier, GLuint name, GLsizei length, GLcharArr label, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ObjectPtrLabel(GLdata ptr, GLsizei length, GLcharArr label, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PatchParameterfv(GLenum pname, GLfloatArr values, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PatchParameteri(GLenum pname, GLint value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PauseTransformFeedback(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PixelStoref(GLenum pname, GLfloat param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PixelStorei(GLenum pname, GLint param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PointParameterf(GLenum pname, GLfloat param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PointParameterfv(GLenum pname, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PointParameteri(GLenum pname, GLint param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PointParameteriv(GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PointSize(GLfloat size, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PolygonMode(GLenum face, GLenum mode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PolygonOffset(GLfloat factor, GLfloat units, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PolygonOffsetClamp(GLfloat factor, GLfloat units, GLfloat clamp, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PopDebugGroup(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PrimitiveRestartIndex(GLuint index, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramBinary(GLuint program, GLenum binaryFormat, GLdata binary, GLsizei length, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramParameteri(GLuint program, GLenum pname, GLint value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform1d(GLuint program, GLint location, GLdouble v0, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform1dv(GLuint program, GLint location, GLsizei count, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform1f(GLuint program, GLint location, GLfloat v0, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform1fv(GLuint program, GLint location, GLsizei count, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform1i(GLuint program, GLint location, GLint v0, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform1iv(GLuint program, GLint location, GLsizei count, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform1ui(GLuint program, GLint location, GLuint v0, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform1uiv(GLuint program, GLint location, GLsizei count, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform2dv(GLuint program, GLint location, GLsizei count, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform2fv(GLuint program, GLint location, GLsizei count, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform2iv(GLuint program, GLint location, GLsizei count, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform2uiv(GLuint program, GLint location, GLsizei count, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform3dv(GLuint program, GLint location, GLsizei count, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform3fv(GLuint program, GLint location, GLsizei count, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform3iv(GLuint program, GLint location, GLsizei count, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform3uiv(GLuint program, GLint location, GLsizei count, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform4dv(GLuint program, GLint location, GLsizei count, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform4fv(GLuint program, GLint location, GLsizei count, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform4iv(GLuint program, GLint location, GLsizei count, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniform4uiv(GLuint program, GLint location, GLsizei count, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ProvokingVertex(GLenum mode, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void PushDebugGroup(GLenum source, GLuint id, GLsizei length, GLcharArr message, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void QueryCounter(GLuint id, GLenum target, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ReadBuffer(GLenum src, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLdata data, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ReleaseShaderCompiler(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void RenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void RenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ResumeTransformFeedback(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SampleCoverage(GLfloat value, GLboolean invert, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SampleMaski(GLuint maskNumber, GLbitfield mask, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SamplerParameterIiv(GLuint sampler, GLenum pname, GLintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SamplerParameterIuiv(GLuint sampler, GLenum pname, GLuintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SamplerParameterf(GLuint sampler, GLenum pname, GLfloat param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SamplerParameterfv(GLuint sampler, GLenum pname, GLfloatArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SamplerParameteri(GLuint sampler, GLenum pname, GLint param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SamplerParameteriv(GLuint sampler, GLenum pname, GLintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Scissor(GLint x, GLint y, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ScissorArrayv(GLuint first, GLsizei count, GLintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ScissorIndexedv(GLuint index, GLintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ShaderBinary(GLsizei count, GLuintArr shaders, GLenum binaryFormat, GLdata binary, GLsizei length, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void SpecializeShader(GLuint shader, GLcharArr pEntryPoint, GLuint numSpecializationConstants, GLuintArr pConstantIndex, GLuintArr pConstantValue, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void StencilFunc(GLenum func, GLint ref, GLuint mask, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void StencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void StencilMask(GLuint mask, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void StencilMaskSeparate(GLenum face, GLuint mask, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void StencilOp(GLenum fail, GLenum zfail, GLenum zpass, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void StencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexBuffer(GLenum target, GLenum internalformat, GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexParameterIiv(GLenum target, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexParameterIuiv(GLenum target, GLenum pname, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexParameterf(GLenum target, GLenum pname, GLfloat param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexParameterfv(GLenum target, GLenum pname, GLfloatArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexParameteri(GLenum target, GLenum pname, GLint param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexParameteriv(GLenum target, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureBarrier(GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureParameterIiv(GLuint texture, GLenum pname, GLintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureParameterIuiv(GLuint texture, GLenum pname, GLuintArr params, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureParameterf(GLuint texture, GLenum pname, GLfloat param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureParameterfv(GLuint texture, GLenum pname, GLfloatArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureParameteri(GLuint texture, GLenum pname, GLint param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureParameteriv(GLuint texture, GLenum pname, GLintArr param, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLdata pixels, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void TransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform1d(GLint location, GLdouble x, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform1dv(GLint location, GLsizei count, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform1f(GLint location, GLfloat v0, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform1fv(GLint location, GLsizei count, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform1i(GLint location, GLint v0, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform1iv(GLint location, GLsizei count, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform1ui(GLint location, GLuint v0, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform1uiv(GLint location, GLsizei count, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform2d(GLint location, GLdouble x, GLdouble y, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform2dv(GLint location, GLsizei count, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform2f(GLint location, GLfloat v0, GLfloat v1, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform2fv(GLint location, GLsizei count, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform2i(GLint location, GLint v0, GLint v1, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform2iv(GLint location, GLsizei count, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform2ui(GLint location, GLuint v0, GLuint v1, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform2uiv(GLint location, GLsizei count, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform3dv(GLint location, GLsizei count, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform3fv(GLint location, GLsizei count, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform3i(GLint location, GLint v0, GLint v1, GLint v2, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform3iv(GLint location, GLsizei count, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform3uiv(GLint location, GLsizei count, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform4dv(GLint location, GLsizei count, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform4fv(GLint location, GLsizei count, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform4iv(GLint location, GLsizei count, GLintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Uniform4uiv(GLint location, GLsizei count, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, GLdoubleArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, GLfloatArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UniformSubroutinesuiv(GLenum shadertype, GLsizei count, GLuintArr indices, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes UnmapBuffer(GLenum target, GLsrc src_loc = SrcLoc{}) = 0;
    virtual GLbooleanRes UnmapNamedBuffer(GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UseProgram(GLuint program, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void UseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ValidateProgram(GLuint program, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ValidateProgramPipeline(GLuint pipeline, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexArrayElementBuffer(GLuint vaobj, GLuint buffer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, GLuintArr buffers, GLintptrArr offsets, GLsizeiArr strides, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib1d(GLuint index, GLdouble x, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib1dv(GLuint index, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib1f(GLuint index, GLfloat x, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib1fv(GLuint index, GLfloatArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib1s(GLuint index, GLshort x, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib1sv(GLuint index, GLshort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib2d(GLuint index, GLdouble x, GLdouble y, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib2dv(GLuint index, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib2f(GLuint index, GLfloat x, GLfloat y, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib2fv(GLuint index, GLfloatArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib2s(GLuint index, GLshort x, GLshort y, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib2sv(GLuint index, GLshort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib3dv(GLuint index, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib3fv(GLuint index, GLfloatArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib3sv(GLuint index, GLshort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4Nbv(GLuint index, GLbyte v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4Niv(GLuint index, GLintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4Nsv(GLuint index, GLshort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4Nubv(GLuint index, GLubyte v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4Nuiv(GLuint index, GLuintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4Nusv(GLuint index, GLushort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4bv(GLuint index, GLbyte v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4dv(GLuint index, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4fv(GLuint index, GLfloatArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4iv(GLuint index, GLintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4sv(GLuint index, GLshort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4ubv(GLuint index, GLubyte v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4uiv(GLuint index, GLuintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttrib4usv(GLuint index, GLushort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribBinding(GLuint attribindex, GLuint bindingindex, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribDivisor(GLuint index, GLuint divisor, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI1i(GLuint index, GLint x, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI1iv(GLuint index, GLintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI1ui(GLuint index, GLuint x, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI1uiv(GLuint index, GLuintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI2i(GLuint index, GLint x, GLint y, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI2iv(GLuint index, GLintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI2ui(GLuint index, GLuint x, GLuint y, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI2uiv(GLuint index, GLuintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI3i(GLuint index, GLint x, GLint y, GLint z, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI3iv(GLuint index, GLintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI3uiv(GLuint index, GLuintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI4bv(GLuint index, GLbyte v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI4iv(GLuint index, GLintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI4sv(GLuint index, GLshort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI4ubv(GLuint index, GLubyte v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI4uiv(GLuint index, GLuintArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribI4usv(GLuint index, GLushort v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, GLdata pointer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribL1d(GLuint index, GLdouble x, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribL1dv(GLuint index, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribL2d(GLuint index, GLdouble x, GLdouble y, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribL2dv(GLuint index, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribL3dv(GLuint index, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribL4dv(GLuint index, GLdoubleArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, GLdata pointer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, GLuintArr value, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLdata pointer, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void VertexBindingDivisor(GLuint bindingindex, GLuint divisor, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void Viewport(GLint x, GLint y, GLsizei width, GLsizei height, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ViewportArrayv(GLuint first, GLsizei count, GLfloatArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void ViewportIndexedfv(GLuint index, GLfloatArr v, GLsrc src_loc = SrcLoc{}) = 0;
    virtual void WaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout, GLsrc src_loc = SrcLoc{}) = 0;


    // virtual GLuintRes CreateShaderProgramv(GLenum type, GLsizei count, GLchar *const* strings, GLsrc src_loc = SrcLoc{}) = 0;
    // virtual void DebugMessageCallback(GLDEBUGPROC callback, GLdata userParam, GLsrc src_loc = SrcLoc{}) = 0;
    // virtual void GetUniformIndices(GLuint program, GLsizei uniformCount, GLchar *const* uniformNames, GLuintArr uniformIndices, GLsrc src_loc = SrcLoc{}) = 0;
    // virtual void ShaderSource(GLuint shader, GLsizei count, GLchar *const* string, GLintArr length, GLsrc src_loc = SrcLoc{}) = 0;
    // virtual void TransformFeedbackVaryings(GLuint program, GLsizei count, GLchar *const* varyings, GLenum bufferMode, GLsrc src_loc = SrcLoc{}) = 0;
    // virtual void* MapBuffer(GLenum target, GLenum access, GLsrc src_loc = SrcLoc{}) = 0;
    // virtual void* MapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access, GLsrc src_loc = SrcLoc{}) = 0;
    // virtual void* MapNamedBuffer(GLuint buffer, GLenum access, GLsrc src_loc = SrcLoc{}) = 0;
    // virtual void* MapNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access, GLsrc src_loc = SrcLoc{}) = 0;


protected:
    Context* _ctx;
    const std::function<void(const SrcLoc&)> _debug;
};

} // namespace glwpp