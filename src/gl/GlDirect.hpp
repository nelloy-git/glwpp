#pragma once

#include "gl/GlBase.hpp"

struct __Sync;

namespace glwpp {

class Context;

namespace GL {

class GlDirect : public Gl {
public:
    GlDirect(const std::function<void(const SrcLoc&)>& debug);
    GlDirect(const GlDirect&) = delete;
    GlDirect(const GlDirect&&) = delete;
    ~GlDirect();

    EXPORT void debug(const SrcLoc& src_loc);
    EXPORT void callSimple(const std::function<void(Gl&)>& func);
    
    EXPORT void ActiveShaderProgram(const Uint& pipeline, const Uint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ActiveTexture(const Enum& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void AttachShader(const Uint& program, const Uint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BeginConditionalRender(const Uint& id, const Enum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BeginQuery(const Enum& target, const Uint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BeginQueryIndexed(const Enum& target, const Uint& index, const Uint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BeginTransformFeedback(const Enum& primitiveMode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindAttribLocation(const Uint& program, const Uint& index, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBuffer(const Enum& target, const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBufferBase(const Enum& target, const Uint& index, const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBufferRange(const Enum& target, const Uint& index, const Uint& buffer, const Intptr& offset, const Sizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBuffersBase(const Enum& target, const Uint& first, const Sizei& count, const UintArr& buffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBuffersRange(const Enum& target, const Uint& first, const Sizei& count, const UintArr& buffers, const IntptrArr& offsets, const SizeiptrArr& sizes, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindFragDataLocation(const Uint& program, const Uint& color, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindFragDataLocationIndexed(const Uint& program, const Uint& colorNumber, const Uint& index, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindFramebuffer(const Enum& target, const Uint& framebuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindImageTexture(const Uint& unit, const Uint& texture, const Int& level, const Boolean& layered, const Int& layer, const Enum& access, const Enum& format, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindImageTextures(const Uint& first, const Sizei& count, const UintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindProgramPipeline(const Uint& pipeline, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindRenderbuffer(const Enum& target, const Uint& renderbuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindSampler(const Uint& unit, const Uint& sampler, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindSamplers(const Uint& first, const Sizei& count, const UintArr& samplers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindTexture(const Enum& target, const Uint& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindTextureUnit(const Uint& unit, const Uint& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindTextures(const Uint& first, const Sizei& count, const UintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindTransformFeedback(const Enum& target, const Uint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindVertexArray(const Uint& array, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindVertexBuffer(const Uint& bindingindex, const Uint& buffer, const Intptr& offset, const Sizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindVertexBuffers(const Uint& first, const Sizei& count, const UintArr& buffers, const IntptrArr& offsets, const SizeiArr& strides, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendColor(const Float& red, const Float& green, const Float& blue, const Float& alpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendEquation(const Enum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendEquationSeparate(const Enum& modeRGB, const Enum& modeAlpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendEquationSeparatei(const Uint& buf, const Enum& modeRGB, const Enum& modeAlpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendEquationi(const Uint& buf, const Enum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendFunc(const Enum& sfactor, const Enum& dfactor, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendFuncSeparate(const Enum& sfactorRGB, const Enum& dfactorRGB, const Enum& sfactorAlpha, const Enum& dfactorAlpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendFuncSeparatei(const Uint& buf, const Enum& srcRGB, const Enum& dstRGB, const Enum& srcAlpha, const Enum& dstAlpha, const Enum& modeAlpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendFunci(const Uint& buf, const Enum& src, const Enum& dst, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlitFramebuffer(const Int& srcX0, const Int& srcY0, const Int& srcX1, const Int& srcY1, const Int& dstX0, const Int& dstY0, const Int& dstX1, const Int& dstY1, const Bitfield& mask, const Enum& filter, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlitNamedFramebuffer(const Uint& readFramebuffer, const Uint& drawFramebuffer, const Int& srcX0, const Int& srcY0, const Int& srcX1, const Int& srcY1, const Int& dstX0, const Int& dstY0, const Int& dstX1, const Int& dstY1, const Bitfield& mask, const Enum& filter, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BufferData(const Enum& target, const Sizeiptr& size, const Data& data, const Enum& usage, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BufferStorage(const Enum& target, const Sizeiptr& size, const Data& data, const Bitfield& flags, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BufferSubData(const Enum& target, const Intptr& offset, const Sizeiptr& size, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Enum CheckFramebufferStatus(const Enum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Enum CheckNamedFramebufferStatus(const Uint& framebuffer, const Enum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClampColor(const Enum& target, const Enum& clamp, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Clear(const Bitfield& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferData(const Enum& target, const Enum& internalformat, const Enum& format, const Enum& type, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferSubData(const Enum& target, const Enum& internalformat, const Intptr& offset, const Sizeiptr& size, const Enum& format, const Enum& type, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferfi(const Enum& buffer, const Int& drawbuffer, const Float& depth, const Int& stencil, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferfv(const Enum& buffer, const Int& drawbuffer, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferiv(const Enum& buffer, const Int& drawbuffer, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferuiv(const Enum& buffer, const Int& drawbuffer, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearColor(const Float& red, const Float& green, const Float& blue, const Float& alpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearDepth(const Double& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearDepthf(const Float& d, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedBufferData(const Uint& buffer, const Enum& internalformat, const Enum& format, const Enum& type, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedBufferSubData(const Uint& buffer, const Enum& internalformat, const Intptr& offset, const Sizeiptr& size, const Enum& format, const Enum& type, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedFramebufferfi(const Uint& framebuffer, const Enum& buffer, const Int& drawbuffer, const Float& depth, const Int& stencil, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedFramebufferfv(const Uint& framebuffer, const Enum& buffer, const Int& drawbuffer, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedFramebufferiv(const Uint& framebuffer, const Enum& buffer, const Int& drawbuffer, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedFramebufferuiv(const Uint& framebuffer, const Enum& buffer, const Int& drawbuffer, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearStencil(const Int& s, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearTexImage(const Uint& texture, const Int& level, const Enum& format, const Enum& type, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearTexSubImage(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Sizei& width, const Sizei& height, const Sizei& depth, const Enum& format, const Enum& type, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Enum ClientWaitSync(const Sync& sync, const Bitfield& flags, const Uint64& timeout, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClipControl(const Enum& origin, const Enum& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ColorMask(const Boolean& red, const Boolean& green, const Boolean& blue, const Boolean& alpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ColorMaski(const Uint& index, const Boolean& r, const Boolean& g, const Boolean& b, const Boolean& a, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompileShader(const Uint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexImage1D(const Enum& target, const Int& level, const Enum& internalformat, const Sizei& width, const Int& border, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexImage2D(const Enum& target, const Int& level, const Enum& internalformat, const Sizei& width, const Sizei& height, const Int& border, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexImage3D(const Enum& target, const Int& level, const Enum& internalformat, const Sizei& width, const Sizei& height, const Sizei& depth, const Int& border, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexSubImage1D(const Enum& target, const Int& level, const Int& xoffset, const Sizei& width, const Enum& format, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexSubImage2D(const Enum& target, const Int& level, const Int& xoffset, const Int& yoffset, const Sizei& width, const Sizei& height, const Enum& format, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexSubImage3D(const Enum& target, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Sizei& width, const Sizei& height, const Sizei& depth, const Enum& format, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTextureSubImage1D(const Uint& texture, const Int& level, const Int& xoffset, const Sizei& width, const Enum& format, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTextureSubImage2D(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Sizei& width, const Sizei& height, const Enum& format, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTextureSubImage3D(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Sizei& width, const Sizei& height, const Sizei& depth, const Enum& format, const Sizei& imageSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyBufferSubData(const Enum& readTarget, const Enum& writeTarget, const Intptr& readOffset, const Intptr& writeOffset, const Sizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyImageSubData(const Uint& srcName, const Enum& srcTarget, const Int& srcLevel, const Int& srcX, const Int& srcY, const Int& srcZ, const Uint& dstName, const Enum& dstTarget, const Int& dstLevel, const Int& dstX, const Int& dstY, const Int& dstZ, const Sizei& srcWidth, const Sizei& srcHeight, const Sizei& srcDepth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyNamedBufferSubData(const Uint& readBuffer, const Uint& writeBuffer, const Intptr& readOffset, const Intptr& writeOffset, const Sizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexImage1D(const Enum& target, const Int& level, const Enum& internalformat, const Int& x, const Int& y, const Sizei& width, const Int& border, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexImage2D(const Enum& target, const Int& level, const Enum& internalformat, const Int& x, const Int& y, const Sizei& width, const Sizei& height, const Int& border, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexSubImage1D(const Enum& target, const Int& level, const Int& xoffset, const Int& x, const Int& y, const Sizei& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexSubImage2D(const Enum& target, const Int& level, const Int& xoffset, const Int& yoffset, const Int& x, const Int& y, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexSubImage3D(const Enum& target, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Int& x, const Int& y, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTextureSubImage1D(const Uint& texture, const Int& level, const Int& xoffset, const Int& x, const Int& y, const Sizei& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTextureSubImage2D(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Int& x, const Int& y, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTextureSubImage3D(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Int& x, const Int& y, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateBuffers(const Sizei& n, const UintArr& dst, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateFramebuffers(const Sizei& n, const UintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Uint CreateProgram(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateProgramPipelines(const Sizei& n, const UintArr& pipelines, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateQueries(const Enum& target, const Sizei& n, const UintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateRenderbuffers(const Sizei& n, const UintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateSamplers(const Sizei& n, const UintArr& samplers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Uint CreateShader(const Enum& type, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Uint CreateShaderProgramv(const Enum& type, const Sizei& count, const StringArr& strings, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateTextures(const Enum& target, const Sizei& n, const UintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateTransformFeedbacks(const Sizei& n, const UintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateVertexArrays(const Sizei& n, const UintArr& arrays, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CullFace(const Enum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DebugMessageControl(const Enum& source, const Enum& type, const Enum& severity, const Sizei& count, const UintArr& ids, const Boolean& enabled, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DebugMessageInsert(const Enum& source, const Enum& type, const Uint& id, const Enum& severity, const Sizei& length, const String& buf, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteBuffers(const Sizei& n, const UintArr& buffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteFramebuffers(const Sizei& n, const UintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteProgram(const Uint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteProgramPipelines(const Sizei& n, const UintArr& pipelines, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteQueries(const Sizei& n, const UintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteRenderbuffers(const Sizei& n, const UintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteSamplers(const Sizei& count, const UintArr& samplers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteShader(const Uint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteSync(const Sync& sync, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteTextures(const Sizei& n, const UintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteTransformFeedbacks(const Sizei& n, const UintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteVertexArrays(const Sizei& n, const UintArr& arrays, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthFunc(const Enum& func, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthMask(const Boolean& flag, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthRange(const Double& n, const Double& f, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthRangeArrayv(const Uint& first, const Sizei& count, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthRangeIndexed(const Uint& index, const Double& n, const Double& f, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthRangef(const Float& n, const Float& f, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DetachShader(const Uint& program, const Uint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Disable(const Enum& cap, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DisableVertexArrayAttrib(const Uint& vaobj, const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DisableVertexAttribArray(const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Disablei(const Enum& target, const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DispatchCompute(const Uint& num_groups_x, const Uint& num_groups_y, const Uint& num_groups_z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DispatchComputeIndirect(const Intptr& indirect, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawArrays(const Enum& mode, const Int& first, const Sizei& count, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawArraysIndirect(const Enum& mode, const Data& indirect, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawArraysInstanced(const Enum& mode, const Int& first, const Sizei& count, const Sizei& instancecount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawArraysInstancedBaseInstance(const Enum& mode, const Int& first, const Sizei& count, const Sizei& instancecount, const Uint& baseinstance, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawBuffer(const Enum& buf, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawBuffers(const Sizei& n, const EnumArr& bufs, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElements(const Enum& mode, const Sizei& count, const Enum& type, const Data& indices, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsBaseVertex(const Enum& mode, const Sizei& count, const Enum& type, const Data& indices, const Int& basevertex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsIndirect(const Enum& mode, const Enum& type, const Data& indirect, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsInstanced(const Enum& mode, const Sizei& count, const Enum& type, const Data& indices, const Sizei& instancecount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsInstancedBaseInstance(const Enum& mode, const Sizei& count, const Enum& type, const Data& indices, const Sizei& instancecount, const Uint& baseinstance, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsInstancedBaseVertex(const Enum& mode, const Sizei& count, const Enum& type, const Data& indices, const Sizei& instancecount, const Int& basevertex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsInstancedBaseVertexBaseInstance(const Enum& mode, const Sizei& count, const Enum& type, const Data& indices, const Sizei& instancecount, const Int& basevertex, const Uint& baseinstance, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawRangeElements(const Enum& mode, const Uint& start, const Uint& end, const Sizei& count, const Enum& type, const Data& indices, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawRangeElementsBaseVertex(const Enum& mode, const Uint& start, const Uint& end, const Sizei& count, const Enum& type, const Data& indices, const Int& basevertex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawTransformFeedback(const Enum& mode, const Uint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawTransformFeedbackInstanced(const Enum& mode, const Uint& id, const Sizei& instancecount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawTransformFeedbackStream(const Enum& mode, const Uint& id, const Uint& stream, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawTransformFeedbackStreamInstanced(const Enum& mode, const Uint& id, const Uint& stream, const Sizei& instancecount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Enable(const Enum& cap, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EnableVertexArrayAttrib(const Uint& vaobj, const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EnableVertexAttribArray(const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Enablei(const Enum& target, const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EndConditionalRender(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EndQuery(const Enum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EndQueryIndexed(const Enum& target, const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EndTransformFeedback(const SrcLoc& src_loc = SrcLoc{});
    EXPORT Sync FenceSync(const Enum& condition, const Bitfield& flags, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Finish(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Flush(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FlushMappedBufferRange(const Enum& target, const Intptr& offset, const Sizeiptr& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FlushMappedNamedBufferRange(const Uint& buffer, const Intptr& offset, const Sizeiptr& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferParameteri(const Enum& target, const Enum& pname, const Int& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferRenderbuffer(const Enum& target, const Enum& attachment, const Enum& renderbuffertarget, const Uint& renderbuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTexture(const Enum& target, const Enum& attachment, const Uint& texture, const Int& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTexture1D(const Enum& target, const Enum& attachment, const Enum& textarget, const Uint& texture, const Int& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTexture2D(const Enum& target, const Enum& attachment, const Enum& textarget, const Uint& texture, const Int& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTexture3D(const Enum& target, const Enum& attachment, const Enum& textarget, const Uint& texture, const Int& level, const Int& zoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTextureLayer(const Enum& target, const Enum& attachment, const Uint& texture, const Int& level, const Int& layer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FrontFace(const Enum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenBuffers(const Sizei& n, const UintArr& buffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenFramebuffers(const Sizei& n, const UintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenProgramPipelines(const Sizei& n, const UintArr& pipelines, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenQueries(const Sizei& n, const UintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenRenderbuffers(const Sizei& n, const UintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenSamplers(const Sizei& count, const UintArr& samplers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenTextures(const Sizei& n, const UintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenTransformFeedbacks(const Sizei& n, const UintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenVertexArrays(const Sizei& n, const UintArr& arrays, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenerateMipmap(const Enum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenerateTextureMipmap(const Uint& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveAtomicCounterBufferiv(const Uint& program, const Uint& bufferIndex, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveAttrib(const Uint& program, const Uint& index, const Sizei& bufSize, const Sizei& length, const Int& size, const Enum& type, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveSubroutineName(const Uint& program, const Enum& shadertype, const Uint& index, const Sizei& bufSize, const Sizei& length, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveSubroutineUniformName(const Uint& program, const Enum& shadertype, const Uint& index, const Sizei& bufSize, const Sizei& length, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveSubroutineUniformiv(const Uint& program, const Enum& shadertype, const Uint& index, const Enum& pname, const IntArr& values, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniform(const Uint& program, const Uint& index, const Sizei& bufSize, const Sizei& length, const Int& size, const Enum& type, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniformBlockName(const Uint& program, const Uint& uniformBlockIndex, const Sizei& bufSize, const Sizei& length, const String& uniformBlockName, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniformBlockiv(const Uint& program, const Uint& uniformBlockIndex, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniformName(const Uint& program, const Uint& uniformIndex, const Sizei& bufSize, const Sizei& length, const String& uniformName, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniformsiv(const Uint& program, const Sizei& uniformCount, const UintArr& uniformIndices, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetAttachedShaders(const Uint& program, const Sizei& maxCount, const SizeiArr& count, const UintArr& shaders, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Int GetAttribLocation(const Uint& program, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBooleani_v(const Enum& target, const Uint& index, const BooleanArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBooleanv(const Enum& pname, const BooleanArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBufferParameteri64v(const Enum& target, const Enum& pname, const Int64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBufferParameteriv(const Enum& target, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBufferPointerv(const Enum& target, const Enum& pname, const DataPtr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBufferSubData(const Enum& target, const Intptr& offset, const Sizeiptr& size, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetCompressedTexImage(const Enum& target, const Int& level, const Data& img, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetCompressedTextureImage(const Uint& texture, const Int& level, const Sizei& bufSize, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetCompressedTextureSubImage(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Sizei& width, const Sizei& height, const Sizei& depth, const Sizei& bufSize, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Uint GetDebugMessageLog(const Uint& count, const Sizei& bufSize, const EnumArr& sources, const EnumArr& types, const UintArr& ids, const EnumArr& severities, const Sizei& lengths, const String& messageLog, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetDoublei_v(const Enum& target, const Uint& index, const DoubleArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetDoublev(const Enum& pname, const DoubleArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Enum GetError(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetFloati_v(const Enum& target, const Uint& index, const FloatArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetFloatv(const Enum& pname, const FloatArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Int GetFragDataIndex(const Uint& program, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Int GetFragDataLocation(const Uint& program, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetFramebufferAttachmentParameteriv(const Enum& target, const Enum& attachment, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetFramebufferParameteriv(const Enum& target, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Enum GetGraphicsResetStatus(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetInteger64i_v(const Enum& target, const Uint& index, const Int64Arr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetInteger64v(const Enum& pname, const Int64Arr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetIntegeri_v(const Enum& target, const Uint& index, const IntArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetIntegerv(const Enum& pname, const IntArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetInternalformati64v(const Enum& target, const Enum& internalformat, const Enum& pname, const Sizei& count, const Int64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetInternalformativ(const Enum& target, const Enum& internalformat, const Enum& pname, const Sizei& count, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetMultisamplefv(const Enum& pname, const Uint& index, const FloatArr& val, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedBufferParameteri64v(const Uint& buffer, const Enum& pname, const Int64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedBufferParameteriv(const Uint& buffer, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedBufferPointerv(const Uint& buffer, const Enum& pname, const DataPtr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedBufferSubData(const Uint& buffer, const Intptr& offset, const Sizeiptr& size, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedFramebufferAttachmentParameteriv(const Uint& framebuffer, const Enum& attachment, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedFramebufferParameteriv(const Uint& framebuffer, const Enum& pname, const IntArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedRenderbufferParameteriv(const Uint& renderbuffer, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetObjectLabel(const Enum& identifier, const Uint& name, const Sizei& bufSize, const Sizei& length, const String& label, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetObjectPtrLabel(const Data& ptr, const Sizei& bufSize, const Sizei& length, const String& label, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetPointerv(const Enum& pname, const DataPtr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramBinary(const Uint& program, const Sizei& bufSize, const Sizei& length, const EnumArr& binaryFormat, const Data& binary, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramInfoLog(const Uint& program, const Sizei& bufSize, const Sizei& length, const String& infoLog, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramInterfaceiv(const Uint& program, const Enum& programInterface, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramPipelineInfoLog(const Uint& pipeline, const Sizei& bufSize, const Sizei& length, const String& infoLog, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramPipelineiv(const Uint& pipeline, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Uint GetProgramResourceIndex(const Uint& program, const Enum& programInterface, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Int GetProgramResourceLocation(const Uint& program, const Enum& programInterface, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Int GetProgramResourceLocationIndex(const Uint& program, const Enum& programInterface, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramResourceName(const Uint& program, const Enum& programInterface, const Uint& index, const Sizei& bufSize, const Sizei& length, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramResourceiv(const Uint& program, const Enum& programInterface, const Uint& index, const Sizei& propCount, const EnumArr& props, const Sizei& count, const Sizei& length, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramStageiv(const Uint& program, const Enum& shadertype, const Enum& pname, const IntArr& values, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramiv(const Uint& program, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryBufferObjecti64v(const Uint& id, const Uint& buffer, const Enum& pname, const Intptr& offset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryBufferObjectiv(const Uint& id, const Uint& buffer, const Enum& pname, const Intptr& offset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryBufferObjectui64v(const Uint& id, const Uint& buffer, const Enum& pname, const Intptr& offset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryBufferObjectuiv(const Uint& id, const Uint& buffer, const Enum& pname, const Intptr& offset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryIndexediv(const Enum& target, const Uint& index, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryObjecti64v(const Uint& id, const Enum& pname, const Int64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryObjectiv(const Uint& id, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryObjectui64v(const Uint& id, const Enum& pname, const Uint64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryObjectuiv(const Uint& id, const Enum& pname, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryiv(const Enum& target, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetRenderbufferParameteriv(const Enum& target, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSamplerParameterIiv(const Uint& sampler, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSamplerParameterIuiv(const Uint& sampler, const Enum& pname, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSamplerParameterfv(const Uint& sampler, const Enum& pname, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSamplerParameteriv(const Uint& sampler, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetShaderInfoLog(const Uint& shader, const Sizei& bufSize, const Sizei& length, const String& infoLog, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetShaderPrecisionFormat(const Enum& shadertype, const Enum& precisiontype, const IntArr& range, const IntArr& precision, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetShaderSource(const Uint& shader, const Sizei& bufSize, const Sizei& length, const String& source, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetShaderiv(const Uint& shader, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT String GetString(const Enum& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT String GetStringi(const Enum& name, const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Uint GetSubroutineIndex(const Uint& program, const Enum& shadertype, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Int GetSubroutineUniformLocation(const Uint& program, const Enum& shadertype, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSynciv(const Sync& sync, const Enum& pname, const Sizei& count, const Sizei& length, const IntArr& values, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexImage(const Enum& target, const Int& level, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexLevelParameterfv(const Enum& target, const Int& level, const Enum& pname, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexLevelParameteriv(const Enum& target, const Int& level, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexParameterIiv(const Enum& target, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexParameterIuiv(const Enum& target, const Enum& pname, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexParameterfv(const Enum& target, const Enum& pname, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexParameteriv(const Enum& target, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureImage(const Uint& texture, const Int& level, const Enum& format, const Enum& type, const Sizei& bufSize, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureLevelParameterfv(const Uint& texture, const Int& level, const Enum& pname, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureLevelParameteriv(const Uint& texture, const Int& level, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureParameterIiv(const Uint& texture, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureParameterIuiv(const Uint& texture, const Enum& pname, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureParameterfv(const Uint& texture, const Enum& pname, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureParameteriv(const Uint& texture, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureSubImage(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Sizei& width, const Sizei& height, const Sizei& depth, const Enum& format, const Enum& type, const Sizei& bufSize, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTransformFeedbackVarying(const Uint& program, const Uint& index, const Sizei& bufSize, const Sizei& length, const SizeiArr& size, const EnumArr& type, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTransformFeedbacki64_v(const Uint& xfb, const Enum& pname, const Uint& index, const Int64Arr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTransformFeedbacki_v(const Uint& xfb, const Enum& pname, const Uint& index, const IntArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTransformFeedbackiv(const Uint& xfb, const Enum& pname, const IntArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Uint GetUniformBlockIndex(const Uint& program, const String& uniformBlockName, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Int GetUniformLocation(const Uint& program, const String& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformSubroutineuiv(const Enum& shadertype, const Int& location, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformdv(const Uint& program, const Int& location, const DoubleArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformfv(const Uint& program, const Int& location, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformiv(const Uint& program, const Int& location, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformuiv(const Uint& program, const Int& location, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexArrayIndexed64iv(const Uint& vaobj, const Uint& index, const Enum& pname, const Int64Arr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexArrayIndexediv(const Uint& vaobj, const Uint& index, const Enum& pname, const IntArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexArrayiv(const Uint& vaobj, const Enum& pname, const IntArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribIiv(const Uint& index, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribIuiv(const Uint& index, const Enum& pname, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribLdv(const Uint& index, const Enum& pname, const DoubleArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribPointerv(const Uint& index, const Enum& pname, const DataPtr& pointer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribdv(const Uint& index, const Enum& pname, const DoubleArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribfv(const Uint& index, const Enum& pname, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribiv(const Uint& index, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnCompressedTexImage(const Enum& target, const Int& lod, const Sizei& bufSize, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnTexImage(const Enum& target, const Int& level, const Enum& format, const Enum& type, const Sizei& bufSize, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnUniformdv(const Uint& program, const Int& location, const Sizei& bufSize, const DoubleArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnUniformfv(const Uint& program, const Int& location, const Sizei& bufSize, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnUniformiv(const Uint& program, const Int& location, const Sizei& bufSize, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnUniformuiv(const Uint& program, const Int& location, const Sizei& bufSize, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Hint(const Enum& target, const Enum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateBufferData(const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateBufferSubData(const Uint& buffer, const Intptr& offset, const Sizeiptr& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateFramebuffer(const Enum& target, const Sizei& numAttachments, const EnumArr& attachments, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateNamedFramebufferData(const Uint& framebuffer, const Sizei& numAttachments, const EnumArr& attachments, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateNamedFramebufferSubData(const Uint& framebuffer, const Sizei& numAttachments, const EnumArr& attachments, const Int& x, const Int& y, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateSubFramebuffer(const Enum& target, const Sizei& numAttachments, const EnumArr& attachments, const Int& x, const Int& y, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateTexImage(const Uint& texture, const Int& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateTexSubImage(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Sizei& width, const Sizei& height, const Sizei& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsBuffer(const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsEnabled(const Enum& cap, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsEnabledi(const Enum& target, const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsFramebuffer(const Uint& framebuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsProgram(const Uint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsProgramPipeline(const Uint& pipeline, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsQuery(const Uint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsRenderbuffer(const Uint& renderbuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsSampler(const Uint& sampler, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsShader(const Uint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsSync(const Sync& sync, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsTexture(const Uint& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsTransformFeedback(const Uint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean IsVertexArray(const Uint& array, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void LineWidth(const Float& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void LinkProgram(const Uint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void LogicOp(const Enum& opcode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT DataPtr MapBuffer(const Enum& target, const Enum& access, const SrcLoc& src_loc = SrcLoc{});
    EXPORT DataPtr MapBufferRange(const Enum& target, const Intptr& offset, const Sizeiptr& length, const Bitfield& access, const SrcLoc& src_loc = SrcLoc{});
    EXPORT DataPtr MapNamedBuffer(const Uint& buffer, const Enum& access, const SrcLoc& src_loc = SrcLoc{});
    EXPORT DataPtr MapNamedBufferRange(const Uint& buffer, const Intptr& offset, const Sizeiptr& length, const Bitfield& access, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MemoryBarrier(const Bitfield& barriers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MemoryBarrierByRegion(const Bitfield& barriers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MinSampleShading(const Float& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawArrays(const Enum& mode, const IntArr& first, const SizeiArr& count, const Sizei& drawcount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawArraysIndirect(const Enum& mode, const Data& indirect, const Sizei& drawcount, const Sizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawArraysIndirectCount(const Enum& mode, const Data& indirect, const Intptr& drawcount, const Sizei& maxdrawcount, const Sizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawElements(const Enum& mode, const SizeiArr& count, const Enum& type, const DataPtr& indices, const Sizei& drawcount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawElementsBaseVertex(const Enum& mode, const SizeiArr& count, const Enum& type, const DataPtr& indices, const Sizei& drawcount, const IntArr& basevertex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawElementsIndirect(const Enum& mode, const Enum& type, const Data& indirect, const Sizei& drawcount, const Sizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawElementsIndirectCount(const Enum& mode, const Enum& type, const Data& indirect, const Intptr& drawcount, const Sizei& maxdrawcount, const Sizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedBufferData(const Uint& buffer, const Sizeiptr& size, const Data& data, const Enum& usage, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedBufferStorage(const Uint& buffer, const Sizeiptr& size, const Data& data, const Bitfield& flags, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedBufferSubData(const Uint& buffer, const Intptr& offset, const Sizeiptr& size, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferDrawBuffer(const Uint& framebuffer, const Enum& buf, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferDrawBuffers(const Uint& framebuffer, const Sizei& n, const EnumArr& bufs, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferParameteri(const Uint& framebuffer, const Enum& pname, const Int& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferReadBuffer(const Uint& framebuffer, const Enum& src, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferRenderbuffer(const Uint& framebuffer, const Enum& attachment, const Enum& renderbuffertarget, const Uint& renderbuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferTexture(const Uint& framebuffer, const Enum& attachment, const Uint& texture, const Int& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferTextureLayer(const Uint& framebuffer, const Enum& attachment, const Uint& texture, const Int& level, const Int& layer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedRenderbufferStorage(const Uint& renderbuffer, const Enum& internalformat, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedRenderbufferStorageMultisample(const Uint& renderbuffer, const Sizei& samples, const Enum& internalformat, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ObjectLabel(const Enum& identifier, const Uint& name, const Sizei& length, const String& label, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ObjectPtrLabel(const Data& ptr, const Sizei& length, const String& label, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PatchParameterfv(const Enum& pname, const FloatArr& values, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PatchParameteri(const Enum& pname, const Int& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PauseTransformFeedback(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PixelStoref(const Enum& pname, const Float& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PixelStorei(const Enum& pname, const Int& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointParameterf(const Enum& pname, const Float& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointParameterfv(const Enum& pname, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointParameteri(const Enum& pname, const Int& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointParameteriv(const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointSize(const Float& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PolygonMode(const Enum& face, const Enum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PolygonOffset(const Float& factor, const Float& units, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PolygonOffsetClamp(const Float& factor, const Float& units, const Float& clamp, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PopDebugGroup(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PrimitiveRestartIndex(const Uint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramBinary(const Uint& program, const Enum& binaryFormat, const Data& binary, const Sizei& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramParameteri(const Uint& program, const Enum& pname, const Int& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1d(const Uint& program, const Int& location, const Double& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1dv(const Uint& program, const Int& location, const Sizei& count, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1f(const Uint& program, const Int& location, const Float& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1fv(const Uint& program, const Int& location, const Sizei& count, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1i(const Uint& program, const Int& location, const Int& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1iv(const Uint& program, const Int& location, const Sizei& count, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1ui(const Uint& program, const Int& location, const Uint& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1uiv(const Uint& program, const Int& location, const Sizei& count, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2d(const Uint& program, const Int& location, const Double& v0, const Double& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2dv(const Uint& program, const Int& location, const Sizei& count, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2f(const Uint& program, const Int& location, const Float& v0, const Float& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2fv(const Uint& program, const Int& location, const Sizei& count, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2i(const Uint& program, const Int& location, const Int& v0, const Int& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2iv(const Uint& program, const Int& location, const Sizei& count, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2ui(const Uint& program, const Int& location, const Uint& v0, const Uint& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2uiv(const Uint& program, const Int& location, const Sizei& count, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3d(const Uint& program, const Int& location, const Double& v0, const Double& v1, const Double& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3dv(const Uint& program, const Int& location, const Sizei& count, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3f(const Uint& program, const Int& location, const Float& v0, const Float& v1, const Float& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3fv(const Uint& program, const Int& location, const Sizei& count, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3i(const Uint& program, const Int& location, const Int& v0, const Int& v1, const Int& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3iv(const Uint& program, const Int& location, const Sizei& count, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3ui(const Uint& program, const Int& location, const Uint& v0, const Uint& v1, const Uint& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3uiv(const Uint& program, const Int& location, const Sizei& count, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4d(const Uint& program, const Int& location, const Double& v0, const Double& v1, const Double& v2, const Double& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4dv(const Uint& program, const Int& location, const Sizei& count, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4f(const Uint& program, const Int& location, const Float& v0, const Float& v1, const Float& v2, const Float& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4fv(const Uint& program, const Int& location, const Sizei& count, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4i(const Uint& program, const Int& location, const Int& v0, const Int& v1, const Int& v2, const Int& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4iv(const Uint& program, const Int& location, const Sizei& count, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4ui(const Uint& program, const Int& location, const Uint& v0, const Uint& v1, const Uint& v2, const Uint& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4uiv(const Uint& program, const Int& location, const Sizei& count, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2x3dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2x3fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2x4dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2x4fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3x2dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3x2fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3x4dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3x4fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4x2dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4x2fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4x3dv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4x3fv(const Uint& program, const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProvokingVertex(const Enum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PushDebugGroup(const Enum& source, const Uint& id, const Sizei& length, const String& message, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void QueryCounter(const Uint& id, const Enum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ReadBuffer(const Enum& src, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ReadPixels(const Int& x, const Int& y, const Sizei& width, const Sizei& height, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ReadnPixels(const Int& x, const Int& y, const Sizei& width, const Sizei& height, const Enum& format, const Enum& type, const Sizei& bufSize, const Data& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ReleaseShaderCompiler(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void RenderbufferStorage(const Enum& target, const Enum& internalformat, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void RenderbufferStorageMultisample(const Enum& target, const Sizei& samples, const Enum& internalformat, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ResumeTransformFeedback(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SampleCoverage(const Float& value, const Boolean& invert, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SampleMaski(const Uint& maskNumber, const Bitfield& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameterIiv(const Uint& sampler, const Enum& pname, const IntArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameterIuiv(const Uint& sampler, const Enum& pname, const UintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameterf(const Uint& sampler, const Enum& pname, const Float& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameterfv(const Uint& sampler, const Enum& pname, const FloatArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameteri(const Uint& sampler, const Enum& pname, const Int& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameteriv(const Uint& sampler, const Enum& pname, const IntArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Scissor(const Int& x, const Int& y, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ScissorArrayv(const Uint& first, const Sizei& count, const IntArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ScissorIndexed(const Uint& index, const Int& left, const Int& bottom, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ScissorIndexedv(const Uint& index, const IntArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ShaderBinary(const Sizei& count, const UintArr& shaders, const Enum& binaryFormat, const Data& binary, const Sizei& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ShaderSource(const Uint& shader, const Sizei& count, const StringArr& strings, const IntArr& lengths, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ShaderStorageBlockBinding(const Uint& program, const Uint& storageBlockIndex, const Uint& storageBlockBinding, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SpecializeShader(const Uint& shader, const String& pEntryPoint, const Uint& numSpecializationConstants, const UintArr& pConstantIndex, const UintArr& pConstantValue, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilFunc(const Enum& func, const Int& ref, const Uint& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilFuncSeparate(const Enum& face, const Enum& func, const Int& ref, const Uint& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilMask(const Uint& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilMaskSeparate(const Enum& face, const Uint& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilOp(const Enum& fail, const Enum& zfail, const Enum& zpass, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilOpSeparate(const Enum& face, const Enum& sfail, const Enum& dpfail, const Enum& dppass, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexBuffer(const Enum& target, const Enum& internalformat, const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexBufferRange(const Enum& target, const Enum& internalformat, const Uint& buffer, const Intptr& offset, const Sizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage1D(const Enum& target, const Int& level, const Int& internalformat, const Sizei& width, const Int& border, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage2D(const Enum& target, const Int& level, const Int& internalformat, const Sizei& width, const Sizei& height, const Int& border, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage2DMultisample(const Enum& target, const Sizei& samples, const Enum& internalformat, const Sizei& width, const Sizei& height, const Boolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage3D(const Enum& target, const Int& level, const Int& internalformat, const Sizei& width, const Sizei& height, const Sizei& depth, const Int& border, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage3DMultisample(const Enum& target, const Sizei& samples, const Enum& internalformat, const Sizei& width, const Sizei& height, const Sizei& depth, const Boolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameterIiv(const Enum& target, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameterIuiv(const Enum& target, const Enum& pname, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameterf(const Enum& target, const Enum& pname, const Float& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameterfv(const Enum& target, const Enum& pname, const FloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameteri(const Enum& target, const Enum& pname, const Int& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameteriv(const Enum& target, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage1D(const Enum& target, const Sizei& levels, const Enum& internalformat, const Sizei& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage2D(const Enum& target, const Sizei& levels, const Enum& internalformat, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage2DMultisample(const Enum& target, const Sizei& samples, const Enum& internalformat, const Sizei& width, const Sizei& height, const Boolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage3D(const Enum& target, const Sizei& levels, const Enum& internalformat, const Sizei& width, const Sizei& height, const Sizei& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage3DMultisample(const Enum& target, const Sizei& samples, const Enum& internalformat, const Sizei& width, const Sizei& height, const Sizei& depth, const Boolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexSubImage1D(const Enum& target, const Int& level, const Int& xoffset, const Sizei& width, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexSubImage2D(const Enum& target, const Int& level, const Int& xoffset, const Int& yoffset, const Sizei& width, const Sizei& height, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexSubImage3D(const Enum& target, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Sizei& width, const Sizei& height, const Sizei& depth, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureBarrier(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureBuffer(const Uint& texture, const Enum& internalformat, const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureBufferRange(const Uint& texture, const Enum& internalformat, const Uint& buffer, const Intptr& offset, const Sizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameterIiv(const Uint& texture, const Enum& pname, const IntArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameterIuiv(const Uint& texture, const Enum& pname, const UintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameterf(const Uint& texture, const Enum& pname, const Float& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameterfv(const Uint& texture, const Enum& pname, const FloatArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameteri(const Uint& texture, const Enum& pname, const Int& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameteriv(const Uint& texture, const Enum& pname, const IntArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage1D(const Uint& texture, const Sizei& levels, const Enum& internalformat, const Sizei& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage2D(const Uint& texture, const Sizei& levels, const Enum& internalformat, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage2DMultisample(const Uint& texture, const Sizei& samples, const Enum& internalformat, const Sizei& width, const Sizei& height, const Boolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage3D(const Uint& texture, const Sizei& levels, const Enum& internalformat, const Sizei& width, const Sizei& height, const Sizei& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage3DMultisample(const Uint& texture, const Sizei& samples, const Enum& internalformat, const Sizei& width, const Sizei& height, const Sizei& depth, const Boolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureSubImage1D(const Uint& texture, const Int& level, const Int& xoffset, const Sizei& width, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureSubImage2D(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Sizei& width, const Sizei& height, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureSubImage3D(const Uint& texture, const Int& level, const Int& xoffset, const Int& yoffset, const Int& zoffset, const Sizei& width, const Sizei& height, const Sizei& depth, const Enum& format, const Enum& type, const Data& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureView(const Uint& texture, const Enum& target, const Uint& origtexture, const Enum& internalformat, const Uint& minlevel, const Uint& numlevels, const Uint& minlayer, const Uint& numlayers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TransformFeedbackBufferBase(const Uint& xfb, const Uint& index, const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TransformFeedbackBufferRange(const Uint& xfb, const Uint& index, const Uint& buffer, const Intptr& offset, const Sizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1d(const Int& location, const Double& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1dv(const Int& location, const Sizei& count, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1f(const Int& location, const Float& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1fv(const Int& location, const Sizei& count, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1i(const Int& location, const Int& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1iv(const Int& location, const Sizei& count, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1ui(const Int& location, const Uint& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1uiv(const Int& location, const Sizei& count, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2d(const Int& location, const Double& x, const Double& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2dv(const Int& location, const Sizei& count, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2f(const Int& location, const Float& v0, const Float& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2fv(const Int& location, const Sizei& count, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2i(const Int& location, const Int& v0, const Int& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2iv(const Int& location, const Sizei& count, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2ui(const Int& location, const Uint& v0, const Uint& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2uiv(const Int& location, const Sizei& count, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3d(const Int& location, const Double& x, const Double& y, const Double& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3dv(const Int& location, const Sizei& count, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3f(const Int& location, const Float& v0, const Float& v1, const Float& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3fv(const Int& location, const Sizei& count, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3i(const Int& location, const Int& v0, const Int& v1, const Int& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3iv(const Int& location, const Sizei& count, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3ui(const Int& location, const Uint& v0, const Uint& v1, const Uint& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3uiv(const Int& location, const Sizei& count, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4d(const Int& location, const Double& x, const Double& y, const Double& z, const Double& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4dv(const Int& location, const Sizei& count, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4f(const Int& location, const Float& v0, const Float& v1, const Float& v2, const Float& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4fv(const Int& location, const Sizei& count, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4i(const Int& location, const Int& v0, const Int& v1, const Int& v2, const Int& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4iv(const Int& location, const Sizei& count, const IntArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4ui(const Int& location, const Uint& v0, const Uint& v1, const Uint& v2, const Uint& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4uiv(const Int& location, const Sizei& count, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformBlockBinding(const Uint& program, const Uint& uniformBlockIndex, const Uint& uniformBlockBinding, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2x3dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2x3fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2x4dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2x4fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3x2dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3x2fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3x4dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3x4fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4x2dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4x2fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4x3dv(const Int& location, const Sizei& count, const Boolean& transpose, const DoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4x3fv(const Int& location, const Sizei& count, const Boolean& transpose, const FloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformSubroutinesuiv(const Enum& shadertype, const Sizei& count, const UintArr& indices, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean UnmapBuffer(const Enum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT Boolean UnmapNamedBuffer(const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UseProgram(const Uint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UseProgramStages(const Uint& pipeline, const Bitfield& stages, const Uint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ValidateProgram(const Uint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ValidateProgramPipeline(const Uint& pipeline, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayAttribBinding(const Uint& vaobj, const Uint& attribindex, const Uint& bindingindex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayAttribFormat(const Uint& vaobj, const Uint& attribindex, const Int& size, const Enum& type, const Boolean& normalized, const Uint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayAttribIFormat(const Uint& vaobj, const Uint& attribindex, const Int& size, const Enum& type, const Uint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayAttribLFormat(const Uint& vaobj, const Uint& attribindex, const Int& size, const Enum& type, const Uint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayBindingDivisor(const Uint& vaobj, const Uint& bindingindex, const Uint& divisor, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayElementBuffer(const Uint& vaobj, const Uint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayVertexBuffer(const Uint& vaobj, const Uint& bindingindex, const Uint& buffer, const Intptr& offset, const Sizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayVertexBuffers(const Uint& vaobj, const Uint& first, const Sizei& count, const UintArr& buffers, const IntptrArr& offsets, const SizeiArr& strides, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1d(const Uint& index, const Double& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1dv(const Uint& index, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1f(const Uint& index, const Float& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1fv(const Uint& index, const FloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1s(const Uint& index, const Short& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1sv(const Uint& index, const Short& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2d(const Uint& index, const Double& x, const Double& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2dv(const Uint& index, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2f(const Uint& index, const Float& x, const Float& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2fv(const Uint& index, const FloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2s(const Uint& index, const Short& x, const Short& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2sv(const Uint& index, const Short& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3d(const Uint& index, const Double& x, const Double& y, const Double& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3dv(const Uint& index, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3f(const Uint& index, const Float& x, const Float& y, const Float& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3fv(const Uint& index, const FloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3s(const Uint& index, const Short& x, const Short& y, const Short& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3sv(const Uint& index, const Short& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nbv(const Uint& index, const Byte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Niv(const Uint& index, const IntArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nsv(const Uint& index, const Short& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nub(const Uint& index, const Ubyte& x, const Ubyte& y, const Ubyte& z, const Ubyte& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nubv(const Uint& index, const Ubyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nuiv(const Uint& index, const UintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nusv(const Uint& index, const Ushort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4bv(const Uint& index, const Byte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4d(const Uint& index, const Double& x, const Double& y, const Double& z, const Double& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4dv(const Uint& index, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4f(const Uint& index, const Float& x, const Float& y, const Float& z, const Float& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4fv(const Uint& index, const FloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4iv(const Uint& index, const IntArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4s(const Uint& index, const Short& x, const Short& y, const Short& z, const Short& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4sv(const Uint& index, const Short& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4ubv(const Uint& index, const Ubyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4uiv(const Uint& index, const UintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4usv(const Uint& index, const Ushort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribBinding(const Uint& attribindex, const Uint& bindingindex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribDivisor(const Uint& index, const Uint& divisor, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribFormat(const Uint& attribindex, const Int& size, const Enum& type, const Boolean& normalized, const Uint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI1i(const Uint& index, const Int& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI1iv(const Uint& index, const IntArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI1ui(const Uint& index, const Uint& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI1uiv(const Uint& index, const UintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI2i(const Uint& index, const Int& x, const Int& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI2iv(const Uint& index, const IntArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI2ui(const Uint& index, const Uint& x, const Uint& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI2uiv(const Uint& index, const UintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI3i(const Uint& index, const Int& x, const Int& y, const Int& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI3iv(const Uint& index, const IntArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI3ui(const Uint& index, const Uint& x, const Uint& y, const Uint& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI3uiv(const Uint& index, const UintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4bv(const Uint& index, const Byte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4i(const Uint& index, const Int& x, const Int& y, const Int& z, const Int& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4iv(const Uint& index, const IntArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4sv(const Uint& index, const Short& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4ubv(const Uint& index, const Ubyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4ui(const Uint& index, const Uint& x, const Uint& y, const Uint& z, const Uint& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4uiv(const Uint& index, const UintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4usv(const Uint& index, const Ushort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribIFormat(const Uint& attribindex, const Int& size, const Enum& type, const Uint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribIPointer(const Uint& index, const Int& size, const Enum& type, const Sizei& stride, const Data& pointer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL1d(const Uint& index, const Double& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL1dv(const Uint& index, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL2d(const Uint& index, const Double& x, const Double& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL2dv(const Uint& index, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL3d(const Uint& index, const Double& x, const Double& y, const Double& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL3dv(const Uint& index, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL4d(const Uint& index, const Double& x, const Double& y, const Double& z, const Double& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL4dv(const Uint& index, const DoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribLFormat(const Uint& attribindex, const Int& size, const Enum& type, const Uint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribLPointer(const Uint& index, const Int& size, const Enum& type, const Sizei& stride, const Data& pointer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP1ui(const Uint& index, const Enum& type, const Boolean& normalized, const Uint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP1uiv(const Uint& index, const Enum& type, const Boolean& normalized, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP2ui(const Uint& index, const Enum& type, const Boolean& normalized, const Uint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP2uiv(const Uint& index, const Enum& type, const Boolean& normalized, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP3ui(const Uint& index, const Enum& type, const Boolean& normalized, const Uint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP3uiv(const Uint& index, const Enum& type, const Boolean& normalized, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP4ui(const Uint& index, const Enum& type, const Boolean& normalized, const Uint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP4uiv(const Uint& index, const Enum& type, const Boolean& normalized, const UintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribPointer(const Uint& index, const Int& size, const Enum& type, const Boolean& normalized, const Sizei& stride, const Data& pointer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexBindingDivisor(const Uint& bindingindex, const Uint& divisor, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Viewport(const Int& x, const Int& y, const Sizei& width, const Sizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ViewportArrayv(const Uint& first, const Sizei& count, const FloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ViewportIndexedf(const Uint& index, const Float& x, const Float& y, const Float& w, const Float& h, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ViewportIndexedfv(const Uint& index, const FloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void WaitSync(const Sync& sync, const Bitfield& flags, const Uint64& timeout, const SrcLoc& src_loc = SrcLoc{});

    // EXPORT void DebugMessageCallback(const GLDEBUGPROC& callback, const Data& userParam, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void GetUniformIndices(const Uint& program, const Sizei& uniformCount, const GLchar& *const* uniformNames, const UintArr& uniformIndices, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void ShaderSource(const Uint& shader, const Sizei& count, const GLchar& *const* string, const IntArr& length, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void TransformFeedbackVaryings(const Uint& program, const Sizei& count, const GLchar& *const* varyings, const Enum& bufferMode, const SrcLoc& src_loc = SrcLoc{});

private:
    template<auto F, typename ... Args>
    inline auto _callGL(const SrcLoc& src_loc, Args... args);
};

}; // namespace GL 

} // namespace glwpp