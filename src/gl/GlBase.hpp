#pragma once

#include <functional>
#include <memory>

#include "KHR/khrplatform.h"

#include "gl/Value.hpp"
#include "utils/Export.hpp"
#include "utils/SrcLoc.hpp"

struct __GLsync;

namespace glwpp {

class Context;

namespace GL {

using GLstring = Value<std::string>;
using GLstringArr = Value<std::string[]>;

using GLbyte = Value<khronos_int8_t>;
using GLbyteArr = Value<khronos_int8_t[]>;

using GLshort = Value<khronos_int16_t>;
using GLshortArr = Value<khronos_int16_t[]>;

using GLsizei = Value<int>;
using GLsizeiArr = Value<int[]>;

using GLint = Value<int>;
using GLintArr = Value<int[]>;

using GLint64 = Value<khronos_int64_t>;
using GLint64Arr = Value<khronos_int64_t[]>;

using GLsizeiptr = Value<khronos_ssize_t>;
using GLsizeiptrArr = Value<khronos_ssize_t[]>;

using GLboolean = Value<unsigned char>;
using GLbooleanArr = Value<unsigned char[]>;

using GLubyte = Value<khronos_uint8_t>;
using GLubyteArr = Value<khronos_uint8_t[]>;

using GLushort = Value<khronos_uint16_t>;
using GLushortArr = Value<khronos_uint16_t[]>;

using GLuint = Value<unsigned int>;
using GLuintArr = Value<unsigned int[]>;

using GLbitfield = Value<unsigned int>;
using GLbitfieldArr = Value<unsigned int[]>;

using GLenum = Value<unsigned int>;
using GLenumArr = Value<unsigned int[]>;

using GLuint64 = Value<khronos_uint64_t>;
using GLuint64Arr = Value<khronos_uint64_t[]>;

using GLintptr = Value<khronos_intptr_t>;
using GLintptrArr = Value<khronos_intptr_t[]>;

using GLfloat = Value<khronos_float_t>;
using GLfloatArr = Value<khronos_float_t[]>;

using GLdouble = Value<double>;
using GLdoubleArr = Value<double[]>;

using GLsync = Value<__GLsync*>;
using GLdata = Value<void>;
using GLdataPtr = Value<void*>;
using SrcLoc = SrcLoc;

class Gl {
public:
    Gl(const std::function<void(const SrcLoc&)>& debug) :
        _debug(debug){};
    Gl(const Gl&) = delete;
    Gl(const Gl&&) = delete;
    virtual ~Gl(){};
    
    EXPORT virtual void debug(const SrcLoc& src_loc) = 0;
    EXPORT virtual void callSimple(const std::function<void(Gl&)>& func) = 0;
    EXPORT auto call(auto func, auto&&... args){
        using R = std::invoke_result_t<decltype(func), Gl&, decltype(args)...>;

        if constexpr (std::is_same_v<R, void>){
            callSimple([func, args...](Gl& gl){
                func(gl, args...);
            });
        } else {
            R result;
            callSimple([result, func, args...](Gl& gl){
                *result = *func(gl, args...);
            });
            return result;
        }
    }

    EXPORT virtual void ActiveShaderProgram(const GLuint& pipeline, const GLuint& program, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ActiveTexture(const GLenum& texture, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void AttachShader(const GLuint& program, const GLuint& shader, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BeginConditionalRender(const GLuint& id, const GLenum& mode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BeginQuery(const GLenum& target, const GLuint& id, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BeginQueryIndexed(const GLenum& target, const GLuint& index, const GLuint& id, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BeginTransformFeedback(const GLenum& primitiveMode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindAttribLocation(const GLuint& program, const GLuint& index, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindBuffer(const GLenum& target, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindBufferBase(const GLenum& target, const GLuint& index, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindBufferRange(const GLenum& target, const GLuint& index, const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindBuffersBase(const GLenum& target, const GLuint& first, const GLsizei& count, const GLuintArr& buffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindBuffersRange(const GLenum& target, const GLuint& first, const GLsizei& count, const GLuintArr& buffers, const GLintptrArr& offsets, const GLsizeiptrArr& sizes, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindFragDataLocation(const GLuint& program, const GLuint& color, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindFragDataLocationIndexed(const GLuint& program, const GLuint& colorNumber, const GLuint& index, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindFramebuffer(const GLenum& target, const GLuint& framebuffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindImageTexture(const GLuint& unit, const GLuint& texture, const GLint& level, const GLboolean& layered, const GLint& layer, const GLenum& access, const GLenum& format, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindImageTextures(const GLuint& first, const GLsizei& count, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindProgramPipeline(const GLuint& pipeline, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindRenderbuffer(const GLenum& target, const GLuint& renderbuffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindSampler(const GLuint& unit, const GLuint& sampler, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindSamplers(const GLuint& first, const GLsizei& count, const GLuintArr& samplers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindTexture(const GLenum& target, const GLuint& texture, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindTextureUnit(const GLuint& unit, const GLuint& texture, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindTextures(const GLuint& first, const GLsizei& count, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindTransformFeedback(const GLenum& target, const GLuint& id, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindVertexArray(const GLuint& array, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindVertexBuffer(const GLuint& bindingindex, const GLuint& buffer, const GLintptr& offset, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BindVertexBuffers(const GLuint& first, const GLsizei& count, const GLuintArr& buffers, const GLintptrArr& offsets, const GLsizeiArr& strides, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendColor(const GLfloat& red, const GLfloat& green, const GLfloat& blue, const GLfloat& alpha, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendEquation(const GLenum& mode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendEquationSeparate(const GLenum& modeRGB, const GLenum& modeAlpha, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendEquationSeparatei(const GLuint& buf, const GLenum& modeRGB, const GLenum& modeAlpha, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendEquationi(const GLuint& buf, const GLenum& mode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendFunc(const GLenum& sfactor, const GLenum& dfactor, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendFuncSeparate(const GLenum& sfactorRGB, const GLenum& dfactorRGB, const GLenum& sfactorAlpha, const GLenum& dfactorAlpha, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendFuncSeparatei(const GLuint& buf, const GLenum& srcRGB, const GLenum& dstRGB, const GLenum& srcAlpha, const GLenum& dstAlpha, const GLenum& modeAlpha, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlendFunci(const GLuint& buf, const GLenum& src, const GLenum& dst, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlitFramebuffer(const GLint& srcX0, const GLint& srcY0, const GLint& srcX1, const GLint& srcY1, const GLint& dstX0, const GLint& dstY0, const GLint& dstX1, const GLint& dstY1, const GLbitfield& mask, const GLenum& filter, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BlitNamedFramebuffer(const GLuint& readFramebuffer, const GLuint& drawFramebuffer, const GLint& srcX0, const GLint& srcY0, const GLint& srcX1, const GLint& srcY1, const GLint& dstX0, const GLint& dstY0, const GLint& dstX1, const GLint& dstY1, const GLbitfield& mask, const GLenum& filter, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BufferData(const GLenum& target, const GLsizeiptr& size, const GLdata& data, const GLenum& usage, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BufferStorage(const GLenum& target, const GLsizeiptr& size, const GLdata& data, const GLbitfield& flags, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void BufferSubData(const GLenum& target, const GLintptr& offset, const GLsizeiptr& size, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLenum CheckFramebufferStatus(const GLenum& target, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLenum CheckNamedFramebufferStatus(const GLuint& framebuffer, const GLenum& target, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClampColor(const GLenum& target, const GLenum& clamp, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Clear(const GLbitfield& mask, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearBufferData(const GLenum& target, const GLenum& internalformat, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearBufferSubData(const GLenum& target, const GLenum& internalformat, const GLintptr& offset, const GLsizeiptr& size, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearBufferfi(const GLenum& buffer, const GLint& drawbuffer, const GLfloat& depth, const GLint& stencil, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearBufferfv(const GLenum& buffer, const GLint& drawbuffer, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearBufferiv(const GLenum& buffer, const GLint& drawbuffer, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearBufferuiv(const GLenum& buffer, const GLint& drawbuffer, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearColor(const GLfloat& red, const GLfloat& green, const GLfloat& blue, const GLfloat& alpha, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearDepth(const GLdouble& depth, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearDepthf(const GLfloat& d, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearNamedBufferData(const GLuint& buffer, const GLenum& internalformat, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearNamedBufferSubData(const GLuint& buffer, const GLenum& internalformat, const GLintptr& offset, const GLsizeiptr& size, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearNamedFramebufferfi(const GLuint& framebuffer, const GLenum& buffer, const GLint& drawbuffer, const GLfloat& depth, const GLint& stencil, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearNamedFramebufferfv(const GLuint& framebuffer, const GLenum& buffer, const GLint& drawbuffer, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearNamedFramebufferiv(const GLuint& framebuffer, const GLenum& buffer, const GLint& drawbuffer, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearNamedFramebufferuiv(const GLuint& framebuffer, const GLenum& buffer, const GLint& drawbuffer, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearStencil(const GLint& s, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearTexImage(const GLuint& texture, const GLint& level, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClearTexSubImage(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLenum ClientWaitSync(const GLsync& sync, const GLbitfield& flags, const GLuint64& timeout, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ClipControl(const GLenum& origin, const GLenum& depth, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ColorMask(const GLboolean& red, const GLboolean& green, const GLboolean& blue, const GLboolean& alpha, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ColorMaski(const GLuint& index, const GLboolean& r, const GLboolean& g, const GLboolean& b, const GLboolean& a, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompileShader(const GLuint& shader, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTexImage1D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLsizei& width, const GLint& border, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTexImage2D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLint& border, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTexImage3D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLint& border, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTexSubImage1D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLsizei& width, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTexSubImage2D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTexSubImage3D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTextureSubImage1D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLsizei& width, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTextureSubImage2D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CompressedTextureSubImage3D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyBufferSubData(const GLenum& readTarget, const GLenum& writeTarget, const GLintptr& readOffset, const GLintptr& writeOffset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyImageSubData(const GLuint& srcName, const GLenum& srcTarget, const GLint& srcLevel, const GLint& srcX, const GLint& srcY, const GLint& srcZ, const GLuint& dstName, const GLenum& dstTarget, const GLint& dstLevel, const GLint& dstX, const GLint& dstY, const GLint& dstZ, const GLsizei& srcWidth, const GLsizei& srcHeight, const GLsizei& srcDepth, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyNamedBufferSubData(const GLuint& readBuffer, const GLuint& writeBuffer, const GLintptr& readOffset, const GLintptr& writeOffset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyTexImage1D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLint& x, const GLint& y, const GLsizei& width, const GLint& border, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyTexImage2D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const GLint& border, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyTexSubImage1D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& x, const GLint& y, const GLsizei& width, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyTexSubImage2D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyTexSubImage3D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyTextureSubImage1D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& x, const GLint& y, const GLsizei& width, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyTextureSubImage2D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CopyTextureSubImage3D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateBuffers(const GLsizei& n, const GLuintArr& dst, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateFramebuffers(const GLsizei& n, const GLuintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLuint CreateProgram(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateProgramPipelines(const GLsizei& n, const GLuintArr& pipelines, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateQueries(const GLenum& target, const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateRenderbuffers(const GLsizei& n, const GLuintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateSamplers(const GLsizei& n, const GLuintArr& samplers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLuint CreateShader(const GLenum& type, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLuint CreateShaderProgramv(const GLenum& type, const GLsizei& count, const GLstringArr& strings, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateTextures(const GLenum& target, const GLsizei& n, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateTransformFeedbacks(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CreateVertexArrays(const GLsizei& n, const GLuintArr& arrays, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void CullFace(const GLenum& mode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DebugMessageControl(const GLenum& source, const GLenum& type, const GLenum& severity, const GLsizei& count, const GLuintArr& ids, const GLboolean& enabled, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DebugMessageInsert(const GLenum& source, const GLenum& type, const GLuint& id, const GLenum& severity, const GLsizei& length, const GLstring& buf, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteBuffers(const GLsizei& n, const GLuintArr& buffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteFramebuffers(const GLsizei& n, const GLuintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteProgramPipelines(const GLsizei& n, const GLuintArr& pipelines, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteQueries(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteRenderbuffers(const GLsizei& n, const GLuintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteSamplers(const GLsizei& count, const GLuintArr& samplers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteShader(const GLuint& shader, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteSync(const GLsync& sync, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteTextures(const GLsizei& n, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteTransformFeedbacks(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DeleteVertexArrays(const GLsizei& n, const GLuintArr& arrays, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DepthFunc(const GLenum& func, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DepthMask(const GLboolean& flag, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DepthRange(const GLdouble& n, const GLdouble& f, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DepthRangeArrayv(const GLuint& first, const GLsizei& count, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DepthRangeIndexed(const GLuint& index, const GLdouble& n, const GLdouble& f, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DepthRangef(const GLfloat& n, const GLfloat& f, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DetachShader(const GLuint& program, const GLuint& shader, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Disable(const GLenum& cap, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DisableVertexArrayAttrib(const GLuint& vaobj, const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DisableVertexAttribArray(const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Disablei(const GLenum& target, const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DispatchCompute(const GLuint& num_groups_x, const GLuint& num_groups_y, const GLuint& num_groups_z, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DispatchComputeIndirect(const GLintptr& indirect, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawArrays(const GLenum& mode, const GLint& first, const GLsizei& count, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawArraysIndirect(const GLenum& mode, const GLdata& indirect, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawArraysInstanced(const GLenum& mode, const GLint& first, const GLsizei& count, const GLsizei& instancecount, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawArraysInstancedBaseInstance(const GLenum& mode, const GLint& first, const GLsizei& count, const GLsizei& instancecount, const GLuint& baseinstance, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawBuffer(const GLenum& buf, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawBuffers(const GLsizei& n, const GLenumArr& bufs, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawElements(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawElementsBaseVertex(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLint& basevertex, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawElementsIndirect(const GLenum& mode, const GLenum& type, const GLdata& indirect, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawElementsInstanced(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLsizei& instancecount, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawElementsInstancedBaseInstance(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLsizei& instancecount, const GLuint& baseinstance, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawElementsInstancedBaseVertex(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLsizei& instancecount, const GLint& basevertex, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawElementsInstancedBaseVertexBaseInstance(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLsizei& instancecount, const GLint& basevertex, const GLuint& baseinstance, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawRangeElements(const GLenum& mode, const GLuint& start, const GLuint& end, const GLsizei& count, const GLenum& type, const GLdata& indices, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawRangeElementsBaseVertex(const GLenum& mode, const GLuint& start, const GLuint& end, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLint& basevertex, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawTransformFeedback(const GLenum& mode, const GLuint& id, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawTransformFeedbackInstanced(const GLenum& mode, const GLuint& id, const GLsizei& instancecount, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawTransformFeedbackStream(const GLenum& mode, const GLuint& id, const GLuint& stream, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void DrawTransformFeedbackStreamInstanced(const GLenum& mode, const GLuint& id, const GLuint& stream, const GLsizei& instancecount, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Enable(const GLenum& cap, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void EnableVertexArrayAttrib(const GLuint& vaobj, const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void EnableVertexAttribArray(const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Enablei(const GLenum& target, const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void EndConditionalRender(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void EndQuery(const GLenum& target, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void EndQueryIndexed(const GLenum& target, const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void EndTransformFeedback(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLsync FenceSync(const GLenum& condition, const GLbitfield& flags, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Finish(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Flush(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FlushMappedBufferRange(const GLenum& target, const GLintptr& offset, const GLsizeiptr& length, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FlushMappedNamedBufferRange(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& length, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FramebufferParameteri(const GLenum& target, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FramebufferRenderbuffer(const GLenum& target, const GLenum& attachment, const GLenum& renderbuffertarget, const GLuint& renderbuffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FramebufferTexture(const GLenum& target, const GLenum& attachment, const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FramebufferTexture1D(const GLenum& target, const GLenum& attachment, const GLenum& textarget, const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FramebufferTexture2D(const GLenum& target, const GLenum& attachment, const GLenum& textarget, const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FramebufferTexture3D(const GLenum& target, const GLenum& attachment, const GLenum& textarget, const GLuint& texture, const GLint& level, const GLint& zoffset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FramebufferTextureLayer(const GLenum& target, const GLenum& attachment, const GLuint& texture, const GLint& level, const GLint& layer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void FrontFace(const GLenum& mode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenBuffers(const GLsizei& n, const GLuintArr& buffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenFramebuffers(const GLsizei& n, const GLuintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenProgramPipelines(const GLsizei& n, const GLuintArr& pipelines, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenQueries(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenRenderbuffers(const GLsizei& n, const GLuintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenSamplers(const GLsizei& count, const GLuintArr& samplers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenTextures(const GLsizei& n, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenTransformFeedbacks(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenVertexArrays(const GLsizei& n, const GLuintArr& arrays, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenerateMipmap(const GLenum& target, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GenerateTextureMipmap(const GLuint& texture, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveAtomicCounterBufferiv(const GLuint& program, const GLuint& bufferIndex, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveAttrib(const GLuint& program, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLint& size, const GLenum& type, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveSubroutineName(const GLuint& program, const GLenum& shadertype, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveSubroutineUniformName(const GLuint& program, const GLenum& shadertype, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveSubroutineUniformiv(const GLuint& program, const GLenum& shadertype, const GLuint& index, const GLenum& pname, const GLintArr& values, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveUniform(const GLuint& program, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLint& size, const GLenum& type, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveUniformBlockName(const GLuint& program, const GLuint& uniformBlockIndex, const GLsizei& bufSize, const GLsizei& length, const GLstring& uniformBlockName, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveUniformBlockiv(const GLuint& program, const GLuint& uniformBlockIndex, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveUniformName(const GLuint& program, const GLuint& uniformIndex, const GLsizei& bufSize, const GLsizei& length, const GLstring& uniformName, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetActiveUniformsiv(const GLuint& program, const GLsizei& uniformCount, const GLuintArr& uniformIndices, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetAttachedShaders(const GLuint& program, const GLsizei& maxCount, const GLsizeiArr& count, const GLuintArr& shaders, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLint GetAttribLocation(const GLuint& program, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetBooleani_v(const GLenum& target, const GLuint& index, const GLbooleanArr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetBooleanv(const GLenum& pname, const GLbooleanArr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetBufferParameteri64v(const GLenum& target, const GLenum& pname, const GLint64Arr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetBufferParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetBufferPointerv(const GLenum& target, const GLenum& pname, const GLdataPtr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetBufferSubData(const GLenum& target, const GLintptr& offset, const GLsizeiptr& size, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetCompressedTexImage(const GLenum& target, const GLint& level, const GLdata& img, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetCompressedTextureImage(const GLuint& texture, const GLint& level, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetCompressedTextureSubImage(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLuint GetDebugMessageLog(const GLuint& count, const GLsizei& bufSize, const GLenumArr& sources, const GLenumArr& types, const GLuintArr& ids, const GLenumArr& severities, const GLsizei& lengths, const GLstring& messageLog, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetDoublei_v(const GLenum& target, const GLuint& index, const GLdoubleArr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetDoublev(const GLenum& pname, const GLdoubleArr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLenum GetError(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetFloati_v(const GLenum& target, const GLuint& index, const GLfloatArr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetFloatv(const GLenum& pname, const GLfloatArr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLint GetFragDataIndex(const GLuint& program, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLint GetFragDataLocation(const GLuint& program, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetFramebufferAttachmentParameteriv(const GLenum& target, const GLenum& attachment, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetFramebufferParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLenum GetGraphicsResetStatus(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetInteger64i_v(const GLenum& target, const GLuint& index, const GLint64Arr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetInteger64v(const GLenum& pname, const GLint64Arr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetIntegeri_v(const GLenum& target, const GLuint& index, const GLintArr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetIntegerv(const GLenum& pname, const GLintArr& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetInternalformati64v(const GLenum& target, const GLenum& internalformat, const GLenum& pname, const GLsizei& count, const GLint64Arr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetInternalformativ(const GLenum& target, const GLenum& internalformat, const GLenum& pname, const GLsizei& count, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetMultisamplefv(const GLenum& pname, const GLuint& index, const GLfloatArr& val, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetNamedBufferParameteri64v(const GLuint& buffer, const GLenum& pname, const GLint64Arr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetNamedBufferParameteriv(const GLuint& buffer, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetNamedBufferPointerv(const GLuint& buffer, const GLenum& pname, const GLdataPtr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetNamedBufferSubData(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetNamedFramebufferAttachmentParameteriv(const GLuint& framebuffer, const GLenum& attachment, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetNamedFramebufferParameteriv(const GLuint& framebuffer, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetNamedRenderbufferParameteriv(const GLuint& renderbuffer, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetObjectLabel(const GLenum& identifier, const GLuint& name, const GLsizei& bufSize, const GLsizei& length, const GLstring& label, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetObjectPtrLabel(const GLdata& ptr, const GLsizei& bufSize, const GLsizei& length, const GLstring& label, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetPointerv(const GLenum& pname, const GLdataPtr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramBinary(const GLuint& program, const GLsizei& bufSize, const GLsizei& length, const GLenumArr& binaryFormat, const GLdata& binary, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramInfoLog(const GLuint& program, const GLsizei& bufSize, const GLsizei& length, const GLstring& infoLog, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramInterfaceiv(const GLuint& program, const GLenum& programGlBase, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramPipelineInfoLog(const GLuint& pipeline, const GLsizei& bufSize, const GLsizei& length, const GLstring& infoLog, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramPipelineiv(const GLuint& pipeline, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLuint GetProgramResourceIndex(const GLuint& program, const GLenum& programGlBase, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLint GetProgramResourceLocation(const GLuint& program, const GLenum& programGlBase, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLint GetProgramResourceLocationIndex(const GLuint& program, const GLenum& programGlBase, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramResourceName(const GLuint& program, const GLenum& programGlBase, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramResourceiv(const GLuint& program, const GLenum& programGlBase, const GLuint& index, const GLsizei& propCount, const GLenumArr& props, const GLsizei& count, const GLsizei& length, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramStageiv(const GLuint& program, const GLenum& shadertype, const GLenum& pname, const GLintArr& values, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetProgramiv(const GLuint& program, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryBufferObjecti64v(const GLuint& id, const GLuint& buffer, const GLenum& pname, const GLintptr& offset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryBufferObjectiv(const GLuint& id, const GLuint& buffer, const GLenum& pname, const GLintptr& offset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryBufferObjectui64v(const GLuint& id, const GLuint& buffer, const GLenum& pname, const GLintptr& offset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryBufferObjectuiv(const GLuint& id, const GLuint& buffer, const GLenum& pname, const GLintptr& offset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryIndexediv(const GLenum& target, const GLuint& index, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryObjecti64v(const GLuint& id, const GLenum& pname, const GLint64Arr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryObjectiv(const GLuint& id, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryObjectui64v(const GLuint& id, const GLenum& pname, const GLuint64Arr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryObjectuiv(const GLuint& id, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetQueryiv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetRenderbufferParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetSamplerParameterIiv(const GLuint& sampler, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetSamplerParameterIuiv(const GLuint& sampler, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetSamplerParameterfv(const GLuint& sampler, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetSamplerParameteriv(const GLuint& sampler, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetShaderInfoLog(const GLuint& shader, const GLsizei& bufSize, const GLsizei& length, const GLstring& infoLog, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetShaderPrecisionFormat(const GLenum& shadertype, const GLenum& precisiontype, const GLintArr& range, const GLintArr& precision, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetShaderSource(const GLuint& shader, const GLsizei& bufSize, const GLsizei& length, const GLstring& source, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetShaderiv(const GLuint& shader, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLstring GetString(const GLenum& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLstring GetStringi(const GLenum& name, const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLuint GetSubroutineIndex(const GLuint& program, const GLenum& shadertype, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLint GetSubroutineUniformLocation(const GLuint& program, const GLenum& shadertype, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetSynciv(const GLsync& sync, const GLenum& pname, const GLsizei& count, const GLsizei& length, const GLintArr& values, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTexImage(const GLenum& target, const GLint& level, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTexLevelParameterfv(const GLenum& target, const GLint& level, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTexLevelParameteriv(const GLenum& target, const GLint& level, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTexParameterIiv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTexParameterIuiv(const GLenum& target, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTexParameterfv(const GLenum& target, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTexParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTextureImage(const GLuint& texture, const GLint& level, const GLenum& format, const GLenum& type, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTextureLevelParameterfv(const GLuint& texture, const GLint& level, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTextureLevelParameteriv(const GLuint& texture, const GLint& level, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTextureParameterIiv(const GLuint& texture, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTextureParameterIuiv(const GLuint& texture, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTextureParameterfv(const GLuint& texture, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTextureParameteriv(const GLuint& texture, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTextureSubImage(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLenum& type, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTransformFeedbackVarying(const GLuint& program, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLsizeiArr& size, const GLenumArr& type, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTransformFeedbacki64_v(const GLuint& xfb, const GLenum& pname, const GLuint& index, const GLint64Arr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTransformFeedbacki_v(const GLuint& xfb, const GLenum& pname, const GLuint& index, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetTransformFeedbackiv(const GLuint& xfb, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLuint GetUniformBlockIndex(const GLuint& program, const GLstring& uniformBlockName, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLint GetUniformLocation(const GLuint& program, const GLstring& name, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetUniformSubroutineuiv(const GLenum& shadertype, const GLint& location, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetUniformdv(const GLuint& program, const GLint& location, const GLdoubleArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetUniformfv(const GLuint& program, const GLint& location, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetUniformiv(const GLuint& program, const GLint& location, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetUniformuiv(const GLuint& program, const GLint& location, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexArrayIndexed64iv(const GLuint& vaobj, const GLuint& index, const GLenum& pname, const GLint64Arr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexArrayIndexediv(const GLuint& vaobj, const GLuint& index, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexArrayiv(const GLuint& vaobj, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexAttribIiv(const GLuint& index, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexAttribIuiv(const GLuint& index, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexAttribLdv(const GLuint& index, const GLenum& pname, const GLdoubleArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexAttribPointerv(const GLuint& index, const GLenum& pname, const GLdataPtr& pointer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexAttribdv(const GLuint& index, const GLenum& pname, const GLdoubleArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexAttribfv(const GLuint& index, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetVertexAttribiv(const GLuint& index, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetnCompressedTexImage(const GLenum& target, const GLint& lod, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetnTexImage(const GLenum& target, const GLint& level, const GLenum& format, const GLenum& type, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetnUniformdv(const GLuint& program, const GLint& location, const GLsizei& bufSize, const GLdoubleArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetnUniformfv(const GLuint& program, const GLint& location, const GLsizei& bufSize, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetnUniformiv(const GLuint& program, const GLint& location, const GLsizei& bufSize, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void GetnUniformuiv(const GLuint& program, const GLint& location, const GLsizei& bufSize, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Hint(const GLenum& target, const GLenum& mode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void InvalidateBufferData(const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void InvalidateBufferSubData(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& length, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void InvalidateFramebuffer(const GLenum& target, const GLsizei& numAttachments, const GLenumArr& attachments, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void InvalidateNamedFramebufferData(const GLuint& framebuffer, const GLsizei& numAttachments, const GLenumArr& attachments, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void InvalidateNamedFramebufferSubData(const GLuint& framebuffer, const GLsizei& numAttachments, const GLenumArr& attachments, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void InvalidateSubFramebuffer(const GLenum& target, const GLsizei& numAttachments, const GLenumArr& attachments, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void InvalidateTexImage(const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void InvalidateTexSubImage(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsBuffer(const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsEnabled(const GLenum& cap, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsEnabledi(const GLenum& target, const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsFramebuffer(const GLuint& framebuffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsProgramPipeline(const GLuint& pipeline, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsQuery(const GLuint& id, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsRenderbuffer(const GLuint& renderbuffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsSampler(const GLuint& sampler, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsShader(const GLuint& shader, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsSync(const GLsync& sync, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsTexture(const GLuint& texture, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsTransformFeedback(const GLuint& id, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean IsVertexArray(const GLuint& array, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void LineWidth(const GLfloat& width, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void LinkProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void LogicOp(const GLenum& opcode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLdataPtr MapBuffer(const GLenum& target, const GLenum& access, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLdataPtr MapBufferRange(const GLenum& target, const GLintptr& offset, const GLsizeiptr& length, const GLbitfield& access, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLdataPtr MapNamedBuffer(const GLuint& buffer, const GLenum& access, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLdataPtr MapNamedBufferRange(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& length, const GLbitfield& access, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MemoryBarrier(const GLbitfield& barriers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MemoryBarrierByRegion(const GLbitfield& barriers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MinSampleShading(const GLfloat& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MultiDrawArrays(const GLenum& mode, const GLintArr& first, const GLsizeiArr& count, const GLsizei& drawcount, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MultiDrawArraysIndirect(const GLenum& mode, const GLdata& indirect, const GLsizei& drawcount, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MultiDrawArraysIndirectCount(const GLenum& mode, const GLdata& indirect, const GLintptr& drawcount, const GLsizei& maxdrawcount, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MultiDrawElements(const GLenum& mode, const GLsizeiArr& count, const GLenum& type, const GLdataPtr& indices, const GLsizei& drawcount, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MultiDrawElementsBaseVertex(const GLenum& mode, const GLsizeiArr& count, const GLenum& type, const GLdataPtr& indices, const GLsizei& drawcount, const GLintArr& basevertex, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MultiDrawElementsIndirect(const GLenum& mode, const GLenum& type, const GLdata& indirect, const GLsizei& drawcount, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void MultiDrawElementsIndirectCount(const GLenum& mode, const GLenum& type, const GLdata& indirect, const GLintptr& drawcount, const GLsizei& maxdrawcount, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedBufferData(const GLuint& buffer, const GLsizeiptr& size, const GLdata& data, const GLenum& usage, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedBufferStorage(const GLuint& buffer, const GLsizeiptr& size, const GLdata& data, const GLbitfield& flags, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedBufferSubData(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedFramebufferDrawBuffer(const GLuint& framebuffer, const GLenum& buf, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedFramebufferDrawBuffers(const GLuint& framebuffer, const GLsizei& n, const GLenumArr& bufs, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedFramebufferParameteri(const GLuint& framebuffer, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedFramebufferReadBuffer(const GLuint& framebuffer, const GLenum& src, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedFramebufferRenderbuffer(const GLuint& framebuffer, const GLenum& attachment, const GLenum& renderbuffertarget, const GLuint& renderbuffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedFramebufferTexture(const GLuint& framebuffer, const GLenum& attachment, const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedFramebufferTextureLayer(const GLuint& framebuffer, const GLenum& attachment, const GLuint& texture, const GLint& level, const GLint& layer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedRenderbufferStorage(const GLuint& renderbuffer, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void NamedRenderbufferStorageMultisample(const GLuint& renderbuffer, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ObjectLabel(const GLenum& identifier, const GLuint& name, const GLsizei& length, const GLstring& label, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ObjectPtrLabel(const GLdata& ptr, const GLsizei& length, const GLstring& label, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PatchParameterfv(const GLenum& pname, const GLfloatArr& values, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PatchParameteri(const GLenum& pname, const GLint& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PauseTransformFeedback(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PixelStoref(const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PixelStorei(const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PointParameterf(const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PointParameterfv(const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PointParameteri(const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PointParameteriv(const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PointSize(const GLfloat& size, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PolygonMode(const GLenum& face, const GLenum& mode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PolygonOffset(const GLfloat& factor, const GLfloat& units, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PolygonOffsetClamp(const GLfloat& factor, const GLfloat& units, const GLfloat& clamp, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PopDebugGroup(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PrimitiveRestartIndex(const GLuint& index, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramBinary(const GLuint& program, const GLenum& binaryFormat, const GLdata& binary, const GLsizei& length, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramParameteri(const GLuint& program, const GLenum& pname, const GLint& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform1d(const GLuint& program, const GLint& location, const GLdouble& v0, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform1dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform1f(const GLuint& program, const GLint& location, const GLfloat& v0, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform1fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform1i(const GLuint& program, const GLint& location, const GLint& v0, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform1iv(const GLuint& program, const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform1ui(const GLuint& program, const GLint& location, const GLuint& v0, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform1uiv(const GLuint& program, const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform2d(const GLuint& program, const GLint& location, const GLdouble& v0, const GLdouble& v1, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform2dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform2f(const GLuint& program, const GLint& location, const GLfloat& v0, const GLfloat& v1, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform2fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform2i(const GLuint& program, const GLint& location, const GLint& v0, const GLint& v1, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform2iv(const GLuint& program, const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform2ui(const GLuint& program, const GLint& location, const GLuint& v0, const GLuint& v1, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform2uiv(const GLuint& program, const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform3d(const GLuint& program, const GLint& location, const GLdouble& v0, const GLdouble& v1, const GLdouble& v2, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform3dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform3f(const GLuint& program, const GLint& location, const GLfloat& v0, const GLfloat& v1, const GLfloat& v2, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform3fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform3i(const GLuint& program, const GLint& location, const GLint& v0, const GLint& v1, const GLint& v2, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform3iv(const GLuint& program, const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform3ui(const GLuint& program, const GLint& location, const GLuint& v0, const GLuint& v1, const GLuint& v2, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform3uiv(const GLuint& program, const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform4d(const GLuint& program, const GLint& location, const GLdouble& v0, const GLdouble& v1, const GLdouble& v2, const GLdouble& v3, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform4dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform4f(const GLuint& program, const GLint& location, const GLfloat& v0, const GLfloat& v1, const GLfloat& v2, const GLfloat& v3, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform4fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform4i(const GLuint& program, const GLint& location, const GLint& v0, const GLint& v1, const GLint& v2, const GLint& v3, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform4iv(const GLuint& program, const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform4ui(const GLuint& program, const GLint& location, const GLuint& v0, const GLuint& v1, const GLuint& v2, const GLuint& v3, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniform4uiv(const GLuint& program, const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix2dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix2fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix2x3dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix2x3fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix2x4dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix2x4fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix3dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix3fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix3x2dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix3x2fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix3x4dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix3x4fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix4dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix4fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix4x2dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix4x2fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix4x3dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProgramUniformMatrix4x3fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ProvokingVertex(const GLenum& mode, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void PushDebugGroup(const GLenum& source, const GLuint& id, const GLsizei& length, const GLstring& message, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void QueryCounter(const GLuint& id, const GLenum& target, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ReadBuffer(const GLenum& src, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ReadPixels(const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ReadnPixels(const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLenum& type, const GLsizei& bufSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ReleaseShaderCompiler(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void RenderbufferStorage(const GLenum& target, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void RenderbufferStorageMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ResumeTransformFeedback(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SampleCoverage(const GLfloat& value, const GLboolean& invert, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SampleMaski(const GLuint& maskNumber, const GLbitfield& mask, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SamplerParameterIiv(const GLuint& sampler, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SamplerParameterIuiv(const GLuint& sampler, const GLenum& pname, const GLuintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SamplerParameterf(const GLuint& sampler, const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SamplerParameterfv(const GLuint& sampler, const GLenum& pname, const GLfloatArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SamplerParameteri(const GLuint& sampler, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SamplerParameteriv(const GLuint& sampler, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Scissor(const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ScissorArrayv(const GLuint& first, const GLsizei& count, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ScissorIndexed(const GLuint& index, const GLint& left, const GLint& bottom, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ScissorIndexedv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ShaderBinary(const GLsizei& count, const GLuintArr& shaders, const GLenum& binaryFormat, const GLdata& binary, const GLsizei& length, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ShaderSource(const GLuint& shader, const GLsizei& count, const GLstringArr& strings, const GLintArr& lengths, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ShaderStorageBlockBinding(const GLuint& program, const GLuint& storageBlockIndex, const GLuint& storageBlockBinding, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void SpecializeShader(const GLuint& shader, const GLstring& pEntryPoint, const GLuint& numSpecializationConstants, const GLuintArr& pConstantIndex, const GLuintArr& pConstantValue, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void StencilFunc(const GLenum& func, const GLint& ref, const GLuint& mask, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void StencilFuncSeparate(const GLenum& face, const GLenum& func, const GLint& ref, const GLuint& mask, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void StencilMask(const GLuint& mask, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void StencilMaskSeparate(const GLenum& face, const GLuint& mask, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void StencilOp(const GLenum& fail, const GLenum& zfail, const GLenum& zpass, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void StencilOpSeparate(const GLenum& face, const GLenum& sfail, const GLenum& dpfail, const GLenum& dppass, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexBuffer(const GLenum& target, const GLenum& internalformat, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexBufferRange(const GLenum& target, const GLenum& internalformat, const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexImage1D(const GLenum& target, const GLint& level, const GLint& internalformat, const GLsizei& width, const GLint& border, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexImage2D(const GLenum& target, const GLint& level, const GLint& internalformat, const GLsizei& width, const GLsizei& height, const GLint& border, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexImage2DMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexImage3D(const GLenum& target, const GLint& level, const GLint& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLint& border, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexImage3DMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexParameterIiv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexParameterIuiv(const GLenum& target, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexParameterf(const GLenum& target, const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexParameterfv(const GLenum& target, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexParameteri(const GLenum& target, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexStorage1D(const GLenum& target, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexStorage2D(const GLenum& target, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexStorage2DMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexStorage3D(const GLenum& target, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexStorage3DMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexSubImage1D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLsizei& width, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexSubImage2D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TexSubImage3D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureBarrier(const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureBuffer(const GLuint& texture, const GLenum& internalformat, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureBufferRange(const GLuint& texture, const GLenum& internalformat, const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureParameterIiv(const GLuint& texture, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureParameterIuiv(const GLuint& texture, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureParameterf(const GLuint& texture, const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureParameterfv(const GLuint& texture, const GLenum& pname, const GLfloatArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureParameteri(const GLuint& texture, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureParameteriv(const GLuint& texture, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureStorage1D(const GLuint& texture, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureStorage2D(const GLuint& texture, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureStorage2DMultisample(const GLuint& texture, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureStorage3D(const GLuint& texture, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureStorage3DMultisample(const GLuint& texture, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureSubImage1D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLsizei& width, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureSubImage2D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureSubImage3D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TextureView(const GLuint& texture, const GLenum& target, const GLuint& origtexture, const GLenum& internalformat, const GLuint& minlevel, const GLuint& numlevels, const GLuint& minlayer, const GLuint& numlayers, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TransformFeedbackBufferBase(const GLuint& xfb, const GLuint& index, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void TransformFeedbackBufferRange(const GLuint& xfb, const GLuint& index, const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform1d(const GLint& location, const GLdouble& x, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform1dv(const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform1f(const GLint& location, const GLfloat& v0, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform1fv(const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform1i(const GLint& location, const GLint& v0, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform1iv(const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform1ui(const GLint& location, const GLuint& v0, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform1uiv(const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform2d(const GLint& location, const GLdouble& x, const GLdouble& y, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform2dv(const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform2f(const GLint& location, const GLfloat& v0, const GLfloat& v1, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform2fv(const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform2i(const GLint& location, const GLint& v0, const GLint& v1, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform2iv(const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform2ui(const GLint& location, const GLuint& v0, const GLuint& v1, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform2uiv(const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform3d(const GLint& location, const GLdouble& x, const GLdouble& y, const GLdouble& z, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform3dv(const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform3f(const GLint& location, const GLfloat& v0, const GLfloat& v1, const GLfloat& v2, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform3fv(const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform3i(const GLint& location, const GLint& v0, const GLint& v1, const GLint& v2, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform3iv(const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform3ui(const GLint& location, const GLuint& v0, const GLuint& v1, const GLuint& v2, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform3uiv(const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform4d(const GLint& location, const GLdouble& x, const GLdouble& y, const GLdouble& z, const GLdouble& w, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform4dv(const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform4f(const GLint& location, const GLfloat& v0, const GLfloat& v1, const GLfloat& v2, const GLfloat& v3, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform4fv(const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform4i(const GLint& location, const GLint& v0, const GLint& v1, const GLint& v2, const GLint& v3, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform4iv(const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform4ui(const GLint& location, const GLuint& v0, const GLuint& v1, const GLuint& v2, const GLuint& v3, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Uniform4uiv(const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformBlockBinding(const GLuint& program, const GLuint& uniformBlockIndex, const GLuint& uniformBlockBinding, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix2dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix2fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix2x3dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix2x3fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix2x4dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix2x4fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix3dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix3fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix3x2dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix3x2fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix3x4dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix3x4fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix4dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix4fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix4x2dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix4x2fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix4x3dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformMatrix4x3fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UniformSubroutinesuiv(const GLenum& shadertype, const GLsizei& count, const GLuintArr& indices, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean UnmapBuffer(const GLenum& target, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual GLboolean UnmapNamedBuffer(const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UseProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void UseProgramStages(const GLuint& pipeline, const GLbitfield& stages, const GLuint& program, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ValidateProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ValidateProgramPipeline(const GLuint& pipeline, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexArrayAttribBinding(const GLuint& vaobj, const GLuint& attribindex, const GLuint& bindingindex, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexArrayAttribFormat(const GLuint& vaobj, const GLuint& attribindex, const GLint& size, const GLenum& type, const GLboolean& normalized, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexArrayAttribIFormat(const GLuint& vaobj, const GLuint& attribindex, const GLint& size, const GLenum& type, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexArrayAttribLFormat(const GLuint& vaobj, const GLuint& attribindex, const GLint& size, const GLenum& type, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexArrayBindingDivisor(const GLuint& vaobj, const GLuint& bindingindex, const GLuint& divisor, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexArrayElementBuffer(const GLuint& vaobj, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexArrayVertexBuffer(const GLuint& vaobj, const GLuint& bindingindex, const GLuint& buffer, const GLintptr& offset, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexArrayVertexBuffers(const GLuint& vaobj, const GLuint& first, const GLsizei& count, const GLuintArr& buffers, const GLintptrArr& offsets, const GLsizeiArr& strides, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib1d(const GLuint& index, const GLdouble& x, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib1dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib1f(const GLuint& index, const GLfloat& x, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib1fv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib1s(const GLuint& index, const GLshort& x, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib1sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib2d(const GLuint& index, const GLdouble& x, const GLdouble& y, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib2dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib2f(const GLuint& index, const GLfloat& x, const GLfloat& y, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib2fv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib2s(const GLuint& index, const GLshort& x, const GLshort& y, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib2sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib3d(const GLuint& index, const GLdouble& x, const GLdouble& y, const GLdouble& z, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib3dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib3f(const GLuint& index, const GLfloat& x, const GLfloat& y, const GLfloat& z, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib3fv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib3s(const GLuint& index, const GLshort& x, const GLshort& y, const GLshort& z, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib3sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4Nbv(const GLuint& index, const GLbyte& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4Niv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4Nsv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4Nub(const GLuint& index, const GLubyte& x, const GLubyte& y, const GLubyte& z, const GLubyte& w, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4Nubv(const GLuint& index, const GLubyte& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4Nuiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4Nusv(const GLuint& index, const GLushort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4bv(const GLuint& index, const GLbyte& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4d(const GLuint& index, const GLdouble& x, const GLdouble& y, const GLdouble& z, const GLdouble& w, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4f(const GLuint& index, const GLfloat& x, const GLfloat& y, const GLfloat& z, const GLfloat& w, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4fv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4s(const GLuint& index, const GLshort& x, const GLshort& y, const GLshort& z, const GLshort& w, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4ubv(const GLuint& index, const GLubyte& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttrib4usv(const GLuint& index, const GLushort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribBinding(const GLuint& attribindex, const GLuint& bindingindex, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribDivisor(const GLuint& index, const GLuint& divisor, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribFormat(const GLuint& attribindex, const GLint& size, const GLenum& type, const GLboolean& normalized, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI1i(const GLuint& index, const GLint& x, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI1iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI1ui(const GLuint& index, const GLuint& x, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI1uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI2i(const GLuint& index, const GLint& x, const GLint& y, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI2iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI2ui(const GLuint& index, const GLuint& x, const GLuint& y, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI2uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI3i(const GLuint& index, const GLint& x, const GLint& y, const GLint& z, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI3iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI3ui(const GLuint& index, const GLuint& x, const GLuint& y, const GLuint& z, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI3uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI4bv(const GLuint& index, const GLbyte& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI4i(const GLuint& index, const GLint& x, const GLint& y, const GLint& z, const GLint& w, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI4iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI4sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI4ubv(const GLuint& index, const GLubyte& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI4ui(const GLuint& index, const GLuint& x, const GLuint& y, const GLuint& z, const GLuint& w, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI4uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribI4usv(const GLuint& index, const GLushort& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribIFormat(const GLuint& attribindex, const GLint& size, const GLenum& type, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribIPointer(const GLuint& index, const GLint& size, const GLenum& type, const GLsizei& stride, const GLdata& pointer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribL1d(const GLuint& index, const GLdouble& x, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribL1dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribL2d(const GLuint& index, const GLdouble& x, const GLdouble& y, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribL2dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribL3d(const GLuint& index, const GLdouble& x, const GLdouble& y, const GLdouble& z, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribL3dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribL4d(const GLuint& index, const GLdouble& x, const GLdouble& y, const GLdouble& z, const GLdouble& w, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribL4dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribLFormat(const GLuint& attribindex, const GLint& size, const GLenum& type, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribLPointer(const GLuint& index, const GLint& size, const GLenum& type, const GLsizei& stride, const GLdata& pointer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribP1ui(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuint& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribP1uiv(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribP2ui(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuint& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribP2uiv(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribP3ui(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuint& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribP3uiv(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribP4ui(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuint& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribP4uiv(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexAttribPointer(const GLuint& index, const GLint& size, const GLenum& type, const GLboolean& normalized, const GLsizei& stride, const GLdata& pointer, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void VertexBindingDivisor(const GLuint& bindingindex, const GLuint& divisor, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void Viewport(const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ViewportArrayv(const GLuint& first, const GLsizei& count, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ViewportIndexedf(const GLuint& index, const GLfloat& x, const GLfloat& y, const GLfloat& w, const GLfloat& h, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void ViewportIndexedfv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{}) = 0;
    EXPORT virtual void WaitSync(const GLsync& sync, const GLbitfield& flags, const GLuint64& timeout, const SrcLoc& src_loc = SrcLoc{}) = 0;

    EXPORT virtual GLenum ACTIVE_ATOMIC_COUNTER_BUFFERS();
    EXPORT virtual GLenum ACTIVE_ATTRIBUTES();
    EXPORT virtual GLenum ACTIVE_ATTRIBUTE_MAX_LENGTH();
    EXPORT virtual GLenum ACTIVE_PROGRAM();
    EXPORT virtual GLenum ACTIVE_RESOURCES();
    EXPORT virtual GLenum ACTIVE_SUBROUTINES();
    EXPORT virtual GLenum ACTIVE_SUBROUTINE_MAX_LENGTH();
    EXPORT virtual GLenum ACTIVE_SUBROUTINE_UNIFORMS();
    EXPORT virtual GLenum ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS();
    EXPORT virtual GLenum ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH();
    EXPORT virtual GLenum ACTIVE_TEXTURE();
    EXPORT virtual GLenum ACTIVE_UNIFORMS();
    EXPORT virtual GLenum ACTIVE_UNIFORM_BLOCKS();
    EXPORT virtual GLenum ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH();
    EXPORT virtual GLenum ACTIVE_UNIFORM_MAX_LENGTH();
    EXPORT virtual GLenum ACTIVE_VARIABLES();
    EXPORT virtual GLenum ALIASED_LINE_WIDTH_RANGE();
    EXPORT virtual GLenum ALL_BARRIER_BITS();
    EXPORT virtual GLenum ALL_SHADER_BITS();
    EXPORT virtual GLenum ALPHA();
    EXPORT virtual GLenum ALREADY_SIGNALED();
    EXPORT virtual GLenum ALWAYS();
    EXPORT virtual GLenum AND();
    EXPORT virtual GLenum AND_INVERTED();
    EXPORT virtual GLenum AND_REVERSE();
    EXPORT virtual GLenum ANY_SAMPLES_PASSED();
    EXPORT virtual GLenum ANY_SAMPLES_PASSED_CONSERVATIVE();
    EXPORT virtual GLenum ARRAY_BUFFER();
    EXPORT virtual GLenum ARRAY_BUFFER_BINDING();
    EXPORT virtual GLenum ARRAY_SIZE();
    EXPORT virtual GLenum ARRAY_STRIDE();
    EXPORT virtual GLenum ATOMIC_COUNTER_BARRIER_BIT();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_BINDING();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_DATA_SIZE();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_INDEX();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_SIZE();
    EXPORT virtual GLenum ATOMIC_COUNTER_BUFFER_START();
    EXPORT virtual GLenum ATTACHED_SHADERS();
    EXPORT virtual GLenum AUTO_GENERATE_MIPMAP();
    EXPORT virtual GLenum BACK();
    EXPORT virtual GLenum BACK_LEFT();
    EXPORT virtual GLenum BACK_RIGHT();
    EXPORT virtual GLenum BGR();
    EXPORT virtual GLenum BGRA();
    EXPORT virtual GLenum BGRA_INTEGER();
    EXPORT virtual GLenum BGR_INTEGER();
    EXPORT virtual GLenum BLEND();
    EXPORT virtual GLenum BLEND_COLOR();
    EXPORT virtual GLenum BLEND_DST();
    EXPORT virtual GLenum BLEND_DST_ALPHA();
    EXPORT virtual GLenum BLEND_DST_RGB();
    EXPORT virtual GLenum BLEND_EQUATION();
    EXPORT virtual GLenum BLEND_EQUATION_ALPHA();
    EXPORT virtual GLenum BLEND_EQUATION_RGB();
    EXPORT virtual GLenum BLEND_SRC();
    EXPORT virtual GLenum BLEND_SRC_ALPHA();
    EXPORT virtual GLenum BLEND_SRC_RGB();
    EXPORT virtual GLenum BLOCK_INDEX();
    EXPORT virtual GLenum BLUE();
    EXPORT virtual GLenum BLUE_INTEGER();
    EXPORT virtual GLenum BOOL();
    EXPORT virtual GLenum BOOL_VEC2();
    EXPORT virtual GLenum BOOL_VEC3();
    EXPORT virtual GLenum BOOL_VEC4();
    EXPORT virtual GLenum BUFFER();
    EXPORT virtual GLenum BUFFER_ACCESS();
    EXPORT virtual GLenum BUFFER_ACCESS_FLAGS();
    EXPORT virtual GLenum BUFFER_BINDING();
    EXPORT virtual GLenum BUFFER_DATA_SIZE();
    EXPORT virtual GLenum BUFFER_IMMUTABLE_STORAGE();
    EXPORT virtual GLenum BUFFER_MAPPED();
    EXPORT virtual GLenum BUFFER_MAP_LENGTH();
    EXPORT virtual GLenum BUFFER_MAP_OFFSET();
    EXPORT virtual GLenum BUFFER_MAP_POINTER();
    EXPORT virtual GLenum BUFFER_SIZE();
    EXPORT virtual GLenum BUFFER_STORAGE_FLAGS();
    EXPORT virtual GLenum BUFFER_UPDATE_BARRIER_BIT();
    EXPORT virtual GLenum BUFFER_USAGE();
    EXPORT virtual GLenum BUFFER_VARIABLE();
    EXPORT virtual GLenum BYTE();
    EXPORT virtual GLenum CAVEAT_SUPPORT();
    EXPORT virtual GLenum CCW();
    EXPORT virtual GLenum CLAMP_READ_COLOR();
    EXPORT virtual GLenum CLAMP_TO_BORDER();
    EXPORT virtual GLenum CLAMP_TO_EDGE();
    EXPORT virtual GLenum CLEAR();
    EXPORT virtual GLenum CLEAR_BUFFER();
    EXPORT virtual GLenum CLEAR_TEXTURE();
    EXPORT virtual GLenum CLIENT_MAPPED_BUFFER_BARRIER_BIT();
    EXPORT virtual GLenum CLIENT_STORAGE_BIT();
    EXPORT virtual GLenum CLIPPING_INPUT_PRIMITIVES();
    EXPORT virtual GLenum CLIPPING_OUTPUT_PRIMITIVES();
    EXPORT virtual GLenum CLIP_DEPTH_MODE();
    EXPORT virtual GLenum CLIP_DISTANCE0();
    EXPORT virtual GLenum CLIP_DISTANCE1();
    EXPORT virtual GLenum CLIP_DISTANCE2();
    EXPORT virtual GLenum CLIP_DISTANCE3();
    EXPORT virtual GLenum CLIP_DISTANCE4();
    EXPORT virtual GLenum CLIP_DISTANCE5();
    EXPORT virtual GLenum CLIP_DISTANCE6();
    EXPORT virtual GLenum CLIP_DISTANCE7();
    EXPORT virtual GLenum CLIP_ORIGIN();
    EXPORT virtual GLenum COLOR();
    EXPORT virtual GLenum COLOR_ATTACHMENT0();
    EXPORT virtual GLenum COLOR_ATTACHMENT1();
    EXPORT virtual GLenum COLOR_ATTACHMENT10();
    EXPORT virtual GLenum COLOR_ATTACHMENT11();
    EXPORT virtual GLenum COLOR_ATTACHMENT12();
    EXPORT virtual GLenum COLOR_ATTACHMENT13();
    EXPORT virtual GLenum COLOR_ATTACHMENT14();
    EXPORT virtual GLenum COLOR_ATTACHMENT15();
    EXPORT virtual GLenum COLOR_ATTACHMENT16();
    EXPORT virtual GLenum COLOR_ATTACHMENT17();
    EXPORT virtual GLenum COLOR_ATTACHMENT18();
    EXPORT virtual GLenum COLOR_ATTACHMENT19();
    EXPORT virtual GLenum COLOR_ATTACHMENT2();
    EXPORT virtual GLenum COLOR_ATTACHMENT20();
    EXPORT virtual GLenum COLOR_ATTACHMENT21();
    EXPORT virtual GLenum COLOR_ATTACHMENT22();
    EXPORT virtual GLenum COLOR_ATTACHMENT23();
    EXPORT virtual GLenum COLOR_ATTACHMENT24();
    EXPORT virtual GLenum COLOR_ATTACHMENT25();
    EXPORT virtual GLenum COLOR_ATTACHMENT26();
    EXPORT virtual GLenum COLOR_ATTACHMENT27();
    EXPORT virtual GLenum COLOR_ATTACHMENT28();
    EXPORT virtual GLenum COLOR_ATTACHMENT29();
    EXPORT virtual GLenum COLOR_ATTACHMENT3();
    EXPORT virtual GLenum COLOR_ATTACHMENT30();
    EXPORT virtual GLenum COLOR_ATTACHMENT31();
    EXPORT virtual GLenum COLOR_ATTACHMENT4();
    EXPORT virtual GLenum COLOR_ATTACHMENT5();
    EXPORT virtual GLenum COLOR_ATTACHMENT6();
    EXPORT virtual GLenum COLOR_ATTACHMENT7();
    EXPORT virtual GLenum COLOR_ATTACHMENT8();
    EXPORT virtual GLenum COLOR_ATTACHMENT9();
    EXPORT virtual GLenum COLOR_BUFFER_BIT();
    EXPORT virtual GLenum COLOR_CLEAR_VALUE();
    EXPORT virtual GLenum COLOR_COMPONENTS();
    EXPORT virtual GLenum COLOR_ENCODING();
    EXPORT virtual GLenum COLOR_LOGIC_OP();
    EXPORT virtual GLenum COLOR_RENDERABLE();
    EXPORT virtual GLenum COLOR_WRITEMASK();
    EXPORT virtual GLenum COMMAND_BARRIER_BIT();
    EXPORT virtual GLenum COMPARE_REF_TO_TEXTURE();
    EXPORT virtual GLenum COMPATIBLE_SUBROUTINES();
    EXPORT virtual GLenum COMPILE_STATUS();
    EXPORT virtual GLenum COMPRESSED_R11_EAC();
    EXPORT virtual GLenum COMPRESSED_RED();
    EXPORT virtual GLenum COMPRESSED_RED_RGTC1();
    EXPORT virtual GLenum COMPRESSED_RG();
    EXPORT virtual GLenum COMPRESSED_RG11_EAC();
    EXPORT virtual GLenum COMPRESSED_RGB();
    EXPORT virtual GLenum COMPRESSED_RGB8_ETC2();
    EXPORT virtual GLenum COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2();
    EXPORT virtual GLenum COMPRESSED_RGBA();
    EXPORT virtual GLenum COMPRESSED_RGBA8_ETC2_EAC();
    EXPORT virtual GLenum COMPRESSED_RGBA_BPTC_UNORM();
    EXPORT virtual GLenum COMPRESSED_RGB_BPTC_SIGNED_FLOAT();
    EXPORT virtual GLenum COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT();
    EXPORT virtual GLenum COMPRESSED_RG_RGTC2();
    EXPORT virtual GLenum COMPRESSED_SIGNED_R11_EAC();
    EXPORT virtual GLenum COMPRESSED_SIGNED_RED_RGTC1();
    EXPORT virtual GLenum COMPRESSED_SIGNED_RG11_EAC();
    EXPORT virtual GLenum COMPRESSED_SIGNED_RG_RGTC2();
    EXPORT virtual GLenum COMPRESSED_SRGB();
    EXPORT virtual GLenum COMPRESSED_SRGB8_ALPHA8_ETC2_EAC();
    EXPORT virtual GLenum COMPRESSED_SRGB8_ETC2();
    EXPORT virtual GLenum COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2();
    EXPORT virtual GLenum COMPRESSED_SRGB_ALPHA();
    EXPORT virtual GLenum COMPRESSED_SRGB_ALPHA_BPTC_UNORM();
    EXPORT virtual GLenum COMPRESSED_TEXTURE_FORMATS();
    EXPORT virtual GLenum COMPUTE_SHADER();
    EXPORT virtual GLenum COMPUTE_SHADER_BIT();
    EXPORT virtual GLenum COMPUTE_SHADER_INVOCATIONS();
    EXPORT virtual GLenum COMPUTE_SUBROUTINE();
    EXPORT virtual GLenum COMPUTE_SUBROUTINE_UNIFORM();
    EXPORT virtual GLenum COMPUTE_TEXTURE();
    EXPORT virtual GLenum COMPUTE_WORK_GROUP_SIZE();
    EXPORT virtual GLenum CONDITION_SATISFIED();
    EXPORT virtual GLenum CONSTANT_ALPHA();
    EXPORT virtual GLenum CONSTANT_COLOR();
    EXPORT virtual GLenum CONTEXT_COMPATIBILITY_PROFILE_BIT();
    EXPORT virtual GLenum CONTEXT_CORE_PROFILE_BIT();
    EXPORT virtual GLenum CONTEXT_FLAGS();
    EXPORT virtual GLenum CONTEXT_FLAG_DEBUG_BIT();
    EXPORT virtual GLenum CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT();
    EXPORT virtual GLenum CONTEXT_FLAG_NO_ERROR_BIT();
    EXPORT virtual GLenum CONTEXT_FLAG_ROBUST_ACCESS_BIT();
    EXPORT virtual GLenum CONTEXT_LOST();
    EXPORT virtual GLenum CONTEXT_PROFILE_MASK();
    EXPORT virtual GLenum CONTEXT_RELEASE_BEHAVIOR();
    EXPORT virtual GLenum CONTEXT_RELEASE_BEHAVIOR_FLUSH();
    EXPORT virtual GLenum COPY();
    EXPORT virtual GLenum COPY_INVERTED();
    EXPORT virtual GLenum COPY_READ_BUFFER();
    EXPORT virtual GLenum COPY_READ_BUFFER_BINDING();
    EXPORT virtual GLenum COPY_WRITE_BUFFER();
    EXPORT virtual GLenum COPY_WRITE_BUFFER_BINDING();
    EXPORT virtual GLenum CULL_FACE();
    EXPORT virtual GLenum CULL_FACE_MODE();
    EXPORT virtual GLenum CURRENT_PROGRAM();
    EXPORT virtual GLenum CURRENT_QUERY();
    EXPORT virtual GLenum CURRENT_VERTEX_ATTRIB();
    EXPORT virtual GLenum CW();
    EXPORT virtual GLenum DEBUG_CALLBACK_FUNCTION();
    EXPORT virtual GLenum DEBUG_CALLBACK_USER_PARAM();
    EXPORT virtual GLenum DEBUG_GROUP_STACK_DEPTH();
    EXPORT virtual GLenum DEBUG_LOGGED_MESSAGES();
    EXPORT virtual GLenum DEBUG_NEXT_LOGGED_MESSAGE_LENGTH();
    EXPORT virtual GLenum DEBUG_OUTPUT();
    EXPORT virtual GLenum DEBUG_OUTPUT_SYNCHRONOUS();
    EXPORT virtual GLenum DEBUG_SEVERITY_HIGH();
    EXPORT virtual GLenum DEBUG_SEVERITY_LOW();
    EXPORT virtual GLenum DEBUG_SEVERITY_MEDIUM();
    EXPORT virtual GLenum DEBUG_SEVERITY_NOTIFICATION();
    EXPORT virtual GLenum DEBUG_SOURCE_API();
    EXPORT virtual GLenum DEBUG_SOURCE_APPLICATION();
    EXPORT virtual GLenum DEBUG_SOURCE_OTHER();
    EXPORT virtual GLenum DEBUG_SOURCE_SHADER_COMPILER();
    EXPORT virtual GLenum DEBUG_SOURCE_THIRD_PARTY();
    EXPORT virtual GLenum DEBUG_SOURCE_WINDOW_SYSTEM();
    EXPORT virtual GLenum DEBUG_TYPE_DEPRECATED_BEHAVIOR();
    EXPORT virtual GLenum DEBUG_TYPE_ERROR();
    EXPORT virtual GLenum DEBUG_TYPE_MARKER();
    EXPORT virtual GLenum DEBUG_TYPE_OTHER();
    EXPORT virtual GLenum DEBUG_TYPE_PERFORMANCE();
    EXPORT virtual GLenum DEBUG_TYPE_POP_GROUP();
    EXPORT virtual GLenum DEBUG_TYPE_PORTABILITY();
    EXPORT virtual GLenum DEBUG_TYPE_PUSH_GROUP();
    EXPORT virtual GLenum DEBUG_TYPE_UNDEFINED_BEHAVIOR();
    EXPORT virtual GLenum DECR();
    EXPORT virtual GLenum DECR_WRAP();
    EXPORT virtual GLenum DELETE_STATUS();
    EXPORT virtual GLenum DEPTH();
    EXPORT virtual GLenum DEPTH24_STENCIL8();
    EXPORT virtual GLenum DEPTH32F_STENCIL8();
    EXPORT virtual GLenum DEPTH_ATTACHMENT();
    EXPORT virtual GLenum DEPTH_BUFFER_BIT();
    EXPORT virtual GLenum DEPTH_CLAMP();
    EXPORT virtual GLenum DEPTH_CLEAR_VALUE();
    EXPORT virtual GLenum DEPTH_COMPONENT();
    EXPORT virtual GLenum DEPTH_COMPONENT16();
    EXPORT virtual GLenum DEPTH_COMPONENT24();
    EXPORT virtual GLenum DEPTH_COMPONENT32();
    EXPORT virtual GLenum DEPTH_COMPONENT32F();
    EXPORT virtual GLenum DEPTH_COMPONENTS();
    EXPORT virtual GLenum DEPTH_FUNC();
    EXPORT virtual GLenum DEPTH_RANGE();
    EXPORT virtual GLenum DEPTH_RENDERABLE();
    EXPORT virtual GLenum DEPTH_STENCIL();
    EXPORT virtual GLenum DEPTH_STENCIL_ATTACHMENT();
    EXPORT virtual GLenum DEPTH_STENCIL_TEXTURE_MODE();
    EXPORT virtual GLenum DEPTH_TEST();
    EXPORT virtual GLenum DEPTH_WRITEMASK();
    EXPORT virtual GLenum DISPATCH_INDIRECT_BUFFER();
    EXPORT virtual GLenum DISPATCH_INDIRECT_BUFFER_BINDING();
    EXPORT virtual GLenum DITHER();
    EXPORT virtual GLenum DONT_CARE();
    EXPORT virtual GLenum DOUBLE();
    EXPORT virtual GLenum DOUBLEBUFFER();
    EXPORT virtual GLenum DOUBLE_MAT2();
    EXPORT virtual GLenum DOUBLE_MAT2x3();
    EXPORT virtual GLenum DOUBLE_MAT2x4();
    EXPORT virtual GLenum DOUBLE_MAT3();
    EXPORT virtual GLenum DOUBLE_MAT3x2();
    EXPORT virtual GLenum DOUBLE_MAT3x4();
    EXPORT virtual GLenum DOUBLE_MAT4();
    EXPORT virtual GLenum DOUBLE_MAT4x2();
    EXPORT virtual GLenum DOUBLE_MAT4x3();
    EXPORT virtual GLenum DOUBLE_VEC2();
    EXPORT virtual GLenum DOUBLE_VEC3();
    EXPORT virtual GLenum DOUBLE_VEC4();
    EXPORT virtual GLenum DRAW_BUFFER();
    EXPORT virtual GLenum DRAW_BUFFER0();
    EXPORT virtual GLenum DRAW_BUFFER1();
    EXPORT virtual GLenum DRAW_BUFFER10();
    EXPORT virtual GLenum DRAW_BUFFER11();
    EXPORT virtual GLenum DRAW_BUFFER12();
    EXPORT virtual GLenum DRAW_BUFFER13();
    EXPORT virtual GLenum DRAW_BUFFER14();
    EXPORT virtual GLenum DRAW_BUFFER15();
    EXPORT virtual GLenum DRAW_BUFFER2();
    EXPORT virtual GLenum DRAW_BUFFER3();
    EXPORT virtual GLenum DRAW_BUFFER4();
    EXPORT virtual GLenum DRAW_BUFFER5();
    EXPORT virtual GLenum DRAW_BUFFER6();
    EXPORT virtual GLenum DRAW_BUFFER7();
    EXPORT virtual GLenum DRAW_BUFFER8();
    EXPORT virtual GLenum DRAW_BUFFER9();
    EXPORT virtual GLenum DRAW_FRAMEBUFFER();
    EXPORT virtual GLenum DRAW_FRAMEBUFFER_BINDING();
    EXPORT virtual GLenum DRAW_INDIRECT_BUFFER();
    EXPORT virtual GLenum DRAW_INDIRECT_BUFFER_BINDING();
    EXPORT virtual GLenum DST_ALPHA();
    EXPORT virtual GLenum DST_COLOR();
    EXPORT virtual GLenum DYNAMIC_COPY();
    EXPORT virtual GLenum DYNAMIC_DRAW();
    EXPORT virtual GLenum DYNAMIC_READ();
    EXPORT virtual GLenum DYNAMIC_STORAGE_BIT();
    EXPORT virtual GLenum ELEMENT_ARRAY_BARRIER_BIT();
    EXPORT virtual GLenum ELEMENT_ARRAY_BUFFER();
    EXPORT virtual GLenum ELEMENT_ARRAY_BUFFER_BINDING();
    EXPORT virtual GLenum EQUAL();
    EXPORT virtual GLenum EQUIV();
    EXPORT virtual GLenum EXTENSIONS();
    EXPORT virtual GLenum FALSE();
    EXPORT virtual GLenum FASTEST();
    EXPORT virtual GLenum FILL();
    EXPORT virtual GLenum FILTER();
    EXPORT virtual GLenum FIRST_VERTEX_CONVENTION();
    EXPORT virtual GLenum FIXED();
    EXPORT virtual GLenum FIXED_ONLY();
    EXPORT virtual GLenum FLOAT();
    EXPORT virtual GLenum FLOAT_32_UNSIGNED_INT_24_8_REV();
    EXPORT virtual GLenum FLOAT_MAT2();
    EXPORT virtual GLenum FLOAT_MAT2x3();
    EXPORT virtual GLenum FLOAT_MAT2x4();
    EXPORT virtual GLenum FLOAT_MAT3();
    EXPORT virtual GLenum FLOAT_MAT3x2();
    EXPORT virtual GLenum FLOAT_MAT3x4();
    EXPORT virtual GLenum FLOAT_MAT4();
    EXPORT virtual GLenum FLOAT_MAT4x2();
    EXPORT virtual GLenum FLOAT_MAT4x3();
    EXPORT virtual GLenum FLOAT_VEC2();
    EXPORT virtual GLenum FLOAT_VEC3();
    EXPORT virtual GLenum FLOAT_VEC4();
    EXPORT virtual GLenum FRACTIONAL_EVEN();
    EXPORT virtual GLenum FRACTIONAL_ODD();
    EXPORT virtual GLenum FRAGMENT_INTERPOLATION_OFFSET_BITS();
    EXPORT virtual GLenum FRAGMENT_SHADER();
    EXPORT virtual GLenum FRAGMENT_SHADER_BIT();
    EXPORT virtual GLenum FRAGMENT_SHADER_DERIVATIVE_HINT();
    EXPORT virtual GLenum FRAGMENT_SHADER_INVOCATIONS();
    EXPORT virtual GLenum FRAGMENT_SUBROUTINE();
    EXPORT virtual GLenum FRAGMENT_SUBROUTINE_UNIFORM();
    EXPORT virtual GLenum FRAGMENT_TEXTURE();
    EXPORT virtual GLenum FRAMEBUFFER();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_BLUE_SIZE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_GREEN_SIZE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_LAYERED();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_OBJECT_NAME();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_RED_SIZE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER();
    EXPORT virtual GLenum FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL();
    EXPORT virtual GLenum FRAMEBUFFER_BARRIER_BIT();
    EXPORT virtual GLenum FRAMEBUFFER_BINDING();
    EXPORT virtual GLenum FRAMEBUFFER_BLEND();
    EXPORT virtual GLenum FRAMEBUFFER_COMPLETE();
    EXPORT virtual GLenum FRAMEBUFFER_DEFAULT();
    EXPORT virtual GLenum FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS();
    EXPORT virtual GLenum FRAMEBUFFER_DEFAULT_HEIGHT();
    EXPORT virtual GLenum FRAMEBUFFER_DEFAULT_LAYERS();
    EXPORT virtual GLenum FRAMEBUFFER_DEFAULT_SAMPLES();
    EXPORT virtual GLenum FRAMEBUFFER_DEFAULT_WIDTH();
    EXPORT virtual GLenum FRAMEBUFFER_INCOMPLETE_ATTACHMENT();
    EXPORT virtual GLenum FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER();
    EXPORT virtual GLenum FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS();
    EXPORT virtual GLenum FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT();
    EXPORT virtual GLenum FRAMEBUFFER_INCOMPLETE_MULTISAMPLE();
    EXPORT virtual GLenum FRAMEBUFFER_INCOMPLETE_READ_BUFFER();
    EXPORT virtual GLenum FRAMEBUFFER_RENDERABLE();
    EXPORT virtual GLenum FRAMEBUFFER_RENDERABLE_LAYERED();
    EXPORT virtual GLenum FRAMEBUFFER_SRGB();
    EXPORT virtual GLenum FRAMEBUFFER_UNDEFINED();
    EXPORT virtual GLenum FRAMEBUFFER_UNSUPPORTED();
    EXPORT virtual GLenum FRONT();
    EXPORT virtual GLenum FRONT_AND_BACK();
    EXPORT virtual GLenum FRONT_FACE();
    EXPORT virtual GLenum FRONT_LEFT();
    EXPORT virtual GLenum FRONT_RIGHT();
    EXPORT virtual GLenum FULL_SUPPORT();
    EXPORT virtual GLenum FUNC_ADD();
    EXPORT virtual GLenum FUNC_REVERSE_SUBTRACT();
    EXPORT virtual GLenum FUNC_SUBTRACT();
    EXPORT virtual GLenum GEOMETRY_INPUT_TYPE();
    EXPORT virtual GLenum GEOMETRY_OUTPUT_TYPE();
    EXPORT virtual GLenum GEOMETRY_SHADER();
    EXPORT virtual GLenum GEOMETRY_SHADER_BIT();
    EXPORT virtual GLenum GEOMETRY_SHADER_INVOCATIONS();
    EXPORT virtual GLenum GEOMETRY_SHADER_PRIMITIVES_EMITTED();
    EXPORT virtual GLenum GEOMETRY_SUBROUTINE();
    EXPORT virtual GLenum GEOMETRY_SUBROUTINE_UNIFORM();
    EXPORT virtual GLenum GEOMETRY_TEXTURE();
    EXPORT virtual GLenum GEOMETRY_VERTICES_OUT();
    EXPORT virtual GLenum GEQUAL();
    EXPORT virtual GLenum GET_TEXTURE_IMAGE_FORMAT();
    EXPORT virtual GLenum GET_TEXTURE_IMAGE_TYPE();
    EXPORT virtual GLenum GREATER();
    EXPORT virtual GLenum GREEN();
    EXPORT virtual GLenum GREEN_INTEGER();
    EXPORT virtual GLenum GUILTY_CONTEXT_RESET();
    EXPORT virtual GLenum HALF_FLOAT();
    EXPORT virtual GLenum HIGH_FLOAT();
    EXPORT virtual GLenum HIGH_INT();
    EXPORT virtual GLenum IMAGE_1D();
    EXPORT virtual GLenum IMAGE_1D_ARRAY();
    EXPORT virtual GLenum IMAGE_2D();
    EXPORT virtual GLenum IMAGE_2D_ARRAY();
    EXPORT virtual GLenum IMAGE_2D_MULTISAMPLE();
    EXPORT virtual GLenum IMAGE_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum IMAGE_2D_RECT();
    EXPORT virtual GLenum IMAGE_3D();
    EXPORT virtual GLenum IMAGE_BINDING_ACCESS();
    EXPORT virtual GLenum IMAGE_BINDING_FORMAT();
    EXPORT virtual GLenum IMAGE_BINDING_LAYER();
    EXPORT virtual GLenum IMAGE_BINDING_LAYERED();
    EXPORT virtual GLenum IMAGE_BINDING_LEVEL();
    EXPORT virtual GLenum IMAGE_BINDING_NAME();
    EXPORT virtual GLenum IMAGE_BUFFER();
    EXPORT virtual GLenum IMAGE_CLASS_10_10_10_2();
    EXPORT virtual GLenum IMAGE_CLASS_11_11_10();
    EXPORT virtual GLenum IMAGE_CLASS_1_X_16();
    EXPORT virtual GLenum IMAGE_CLASS_1_X_32();
    EXPORT virtual GLenum IMAGE_CLASS_1_X_8();
    EXPORT virtual GLenum IMAGE_CLASS_2_X_16();
    EXPORT virtual GLenum IMAGE_CLASS_2_X_32();
    EXPORT virtual GLenum IMAGE_CLASS_2_X_8();
    EXPORT virtual GLenum IMAGE_CLASS_4_X_16();
    EXPORT virtual GLenum IMAGE_CLASS_4_X_32();
    EXPORT virtual GLenum IMAGE_CLASS_4_X_8();
    EXPORT virtual GLenum IMAGE_COMPATIBILITY_CLASS();
    EXPORT virtual GLenum IMAGE_CUBE();
    EXPORT virtual GLenum IMAGE_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum IMAGE_FORMAT_COMPATIBILITY_BY_CLASS();
    EXPORT virtual GLenum IMAGE_FORMAT_COMPATIBILITY_BY_SIZE();
    EXPORT virtual GLenum IMAGE_FORMAT_COMPATIBILITY_TYPE();
    EXPORT virtual GLenum IMAGE_PIXEL_FORMAT();
    EXPORT virtual GLenum IMAGE_PIXEL_TYPE();
    EXPORT virtual GLenum IMAGE_TEXEL_SIZE();
    EXPORT virtual GLenum IMPLEMENTATION_COLOR_READ_FORMAT();
    EXPORT virtual GLenum IMPLEMENTATION_COLOR_READ_TYPE();
    EXPORT virtual GLenum INCR();
    EXPORT virtual GLenum INCR_WRAP();
    EXPORT virtual GLenum INFO_LOG_LENGTH();
    EXPORT virtual GLenum INNOCENT_CONTEXT_RESET();
    EXPORT virtual GLenum INT();
    EXPORT virtual GLenum INTERLEAVED_ATTRIBS();
    EXPORT virtual GLenum INTERNALFORMAT_ALPHA_SIZE();
    EXPORT virtual GLenum INTERNALFORMAT_ALPHA_TYPE();
    EXPORT virtual GLenum INTERNALFORMAT_BLUE_SIZE();
    EXPORT virtual GLenum INTERNALFORMAT_BLUE_TYPE();
    EXPORT virtual GLenum INTERNALFORMAT_DEPTH_SIZE();
    EXPORT virtual GLenum INTERNALFORMAT_DEPTH_TYPE();
    EXPORT virtual GLenum INTERNALFORMAT_GREEN_SIZE();
    EXPORT virtual GLenum INTERNALFORMAT_GREEN_TYPE();
    EXPORT virtual GLenum INTERNALFORMAT_PREFERRED();
    EXPORT virtual GLenum INTERNALFORMAT_RED_SIZE();
    EXPORT virtual GLenum INTERNALFORMAT_RED_TYPE();
    EXPORT virtual GLenum INTERNALFORMAT_SHARED_SIZE();
    EXPORT virtual GLenum INTERNALFORMAT_STENCIL_SIZE();
    EXPORT virtual GLenum INTERNALFORMAT_STENCIL_TYPE();
    EXPORT virtual GLenum INTERNALFORMAT_SUPPORTED();
    EXPORT virtual GLenum INT_2_10_10_10_REV();
    EXPORT virtual GLenum INT_IMAGE_1D();
    EXPORT virtual GLenum INT_IMAGE_1D_ARRAY();
    EXPORT virtual GLenum INT_IMAGE_2D();
    EXPORT virtual GLenum INT_IMAGE_2D_ARRAY();
    EXPORT virtual GLenum INT_IMAGE_2D_MULTISAMPLE();
    EXPORT virtual GLenum INT_IMAGE_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum INT_IMAGE_2D_RECT();
    EXPORT virtual GLenum INT_IMAGE_3D();
    EXPORT virtual GLenum INT_IMAGE_BUFFER();
    EXPORT virtual GLenum INT_IMAGE_CUBE();
    EXPORT virtual GLenum INT_IMAGE_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum INT_SAMPLER_1D();
    EXPORT virtual GLenum INT_SAMPLER_1D_ARRAY();
    EXPORT virtual GLenum INT_SAMPLER_2D();
    EXPORT virtual GLenum INT_SAMPLER_2D_ARRAY();
    EXPORT virtual GLenum INT_SAMPLER_2D_MULTISAMPLE();
    EXPORT virtual GLenum INT_SAMPLER_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum INT_SAMPLER_2D_RECT();
    EXPORT virtual GLenum INT_SAMPLER_3D();
    EXPORT virtual GLenum INT_SAMPLER_BUFFER();
    EXPORT virtual GLenum INT_SAMPLER_CUBE();
    EXPORT virtual GLenum INT_SAMPLER_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum INT_VEC2();
    EXPORT virtual GLenum INT_VEC3();
    EXPORT virtual GLenum INT_VEC4();
    EXPORT virtual GLenum INVALID_ENUM();
    EXPORT virtual GLenum INVALID_FRAMEBUFFER_OPERATION();
    EXPORT virtual GLenum INVALID_INDEX();
    EXPORT virtual GLenum INVALID_OPERATION();
    EXPORT virtual GLenum INVALID_VALUE();
    EXPORT virtual GLenum INVERT();
    EXPORT virtual GLenum ISOLINES();
    EXPORT virtual GLenum IS_PER_PATCH();
    EXPORT virtual GLenum IS_ROW_MAJOR();
    EXPORT virtual GLenum KEEP();
    EXPORT virtual GLenum LAST_VERTEX_CONVENTION();
    EXPORT virtual GLenum LAYER_PROVOKING_VERTEX();
    EXPORT virtual GLenum LEFT();
    EXPORT virtual GLenum LEQUAL();
    EXPORT virtual GLenum LESS();
    EXPORT virtual GLenum LINE();
    EXPORT virtual GLenum LINEAR();
    EXPORT virtual GLenum LINEAR_MIPMAP_LINEAR();
    EXPORT virtual GLenum LINEAR_MIPMAP_NEAREST();
    EXPORT virtual GLenum LINES();
    EXPORT virtual GLenum LINES_ADJACENCY();
    EXPORT virtual GLenum LINE_LOOP();
    EXPORT virtual GLenum LINE_SMOOTH();
    EXPORT virtual GLenum LINE_SMOOTH_HINT();
    EXPORT virtual GLenum LINE_STRIP();
    EXPORT virtual GLenum LINE_STRIP_ADJACENCY();
    EXPORT virtual GLenum LINE_WIDTH();
    EXPORT virtual GLenum LINE_WIDTH_GRANULARITY();
    EXPORT virtual GLenum LINE_WIDTH_RANGE();
    EXPORT virtual GLenum LINK_STATUS();
    EXPORT virtual GLenum LOCATION();
    EXPORT virtual GLenum LOCATION_COMPONENT();
    EXPORT virtual GLenum LOCATION_INDEX();
    EXPORT virtual GLenum LOGIC_OP_MODE();
    EXPORT virtual GLenum LOSE_CONTEXT_ON_RESET();
    EXPORT virtual GLenum LOWER_LEFT();
    EXPORT virtual GLenum LOW_FLOAT();
    EXPORT virtual GLenum LOW_INT();
    EXPORT virtual GLenum MAJOR_VERSION();
    EXPORT virtual GLenum MANUAL_GENERATE_MIPMAP();
    EXPORT virtual GLenum MAP_COHERENT_BIT();
    EXPORT virtual GLenum MAP_FLUSH_EXPLICIT_BIT();
    EXPORT virtual GLenum MAP_INVALIDATE_BUFFER_BIT();
    EXPORT virtual GLenum MAP_INVALIDATE_RANGE_BIT();
    EXPORT virtual GLenum MAP_PERSISTENT_BIT();
    EXPORT virtual GLenum MAP_READ_BIT();
    EXPORT virtual GLenum MAP_UNSYNCHRONIZED_BIT();
    EXPORT virtual GLenum MAP_WRITE_BIT();
    EXPORT virtual GLenum MATRIX_STRIDE();
    EXPORT virtual GLenum MAX();
    EXPORT virtual GLenum MAX_3D_TEXTURE_SIZE();
    EXPORT virtual GLenum MAX_ARRAY_TEXTURE_LAYERS();
    EXPORT virtual GLenum MAX_ATOMIC_COUNTER_BUFFER_BINDINGS();
    EXPORT virtual GLenum MAX_ATOMIC_COUNTER_BUFFER_SIZE();
    EXPORT virtual GLenum MAX_CLIP_DISTANCES();
    EXPORT virtual GLenum MAX_COLOR_ATTACHMENTS();
    EXPORT virtual GLenum MAX_COLOR_TEXTURE_SAMPLES();
    EXPORT virtual GLenum MAX_COMBINED_ATOMIC_COUNTERS();
    EXPORT virtual GLenum MAX_COMBINED_ATOMIC_COUNTER_BUFFERS();
    EXPORT virtual GLenum MAX_COMBINED_CLIP_AND_CULL_DISTANCES();
    EXPORT virtual GLenum MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_COMBINED_DIMENSIONS();
    EXPORT virtual GLenum MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_COMBINED_IMAGE_UNIFORMS();
    EXPORT virtual GLenum MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS();
    EXPORT virtual GLenum MAX_COMBINED_SHADER_OUTPUT_RESOURCES();
    EXPORT virtual GLenum MAX_COMBINED_SHADER_STORAGE_BLOCKS();
    EXPORT virtual GLenum MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_COMBINED_TEXTURE_IMAGE_UNITS();
    EXPORT virtual GLenum MAX_COMBINED_UNIFORM_BLOCKS();
    EXPORT virtual GLenum MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_COMPUTE_ATOMIC_COUNTERS();
    EXPORT virtual GLenum MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS();
    EXPORT virtual GLenum MAX_COMPUTE_IMAGE_UNIFORMS();
    EXPORT virtual GLenum MAX_COMPUTE_SHADER_STORAGE_BLOCKS();
    EXPORT virtual GLenum MAX_COMPUTE_SHARED_MEMORY_SIZE();
    EXPORT virtual GLenum MAX_COMPUTE_TEXTURE_IMAGE_UNITS();
    EXPORT virtual GLenum MAX_COMPUTE_UNIFORM_BLOCKS();
    EXPORT virtual GLenum MAX_COMPUTE_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_COMPUTE_WORK_GROUP_COUNT();
    EXPORT virtual GLenum MAX_COMPUTE_WORK_GROUP_INVOCATIONS();
    EXPORT virtual GLenum MAX_COMPUTE_WORK_GROUP_SIZE();
    EXPORT virtual GLenum MAX_CUBE_MAP_TEXTURE_SIZE();
    EXPORT virtual GLenum MAX_CULL_DISTANCES();
    EXPORT virtual GLenum MAX_DEBUG_GROUP_STACK_DEPTH();
    EXPORT virtual GLenum MAX_DEBUG_LOGGED_MESSAGES();
    EXPORT virtual GLenum MAX_DEBUG_MESSAGE_LENGTH();
    EXPORT virtual GLenum MAX_DEPTH();
    EXPORT virtual GLenum MAX_DEPTH_TEXTURE_SAMPLES();
    EXPORT virtual GLenum MAX_DRAW_BUFFERS();
    EXPORT virtual GLenum MAX_DUAL_SOURCE_DRAW_BUFFERS();
    EXPORT virtual GLenum MAX_ELEMENTS_INDICES();
    EXPORT virtual GLenum MAX_ELEMENTS_VERTICES();
    EXPORT virtual GLenum MAX_ELEMENT_INDEX();
    EXPORT virtual GLenum MAX_FRAGMENT_ATOMIC_COUNTERS();
    EXPORT virtual GLenum MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS();
    EXPORT virtual GLenum MAX_FRAGMENT_IMAGE_UNIFORMS();
    EXPORT virtual GLenum MAX_FRAGMENT_INPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_FRAGMENT_INTERPOLATION_OFFSET();
    EXPORT virtual GLenum MAX_FRAGMENT_SHADER_STORAGE_BLOCKS();
    EXPORT virtual GLenum MAX_FRAGMENT_UNIFORM_BLOCKS();
    EXPORT virtual GLenum MAX_FRAGMENT_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_FRAGMENT_UNIFORM_VECTORS();
    EXPORT virtual GLenum MAX_FRAMEBUFFER_HEIGHT();
    EXPORT virtual GLenum MAX_FRAMEBUFFER_LAYERS();
    EXPORT virtual GLenum MAX_FRAMEBUFFER_SAMPLES();
    EXPORT virtual GLenum MAX_FRAMEBUFFER_WIDTH();
    EXPORT virtual GLenum MAX_GEOMETRY_ATOMIC_COUNTERS();
    EXPORT virtual GLenum MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS();
    EXPORT virtual GLenum MAX_GEOMETRY_IMAGE_UNIFORMS();
    EXPORT virtual GLenum MAX_GEOMETRY_INPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_GEOMETRY_OUTPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_GEOMETRY_OUTPUT_VERTICES();
    EXPORT virtual GLenum MAX_GEOMETRY_SHADER_INVOCATIONS();
    EXPORT virtual GLenum MAX_GEOMETRY_SHADER_STORAGE_BLOCKS();
    EXPORT virtual GLenum MAX_GEOMETRY_TEXTURE_IMAGE_UNITS();
    EXPORT virtual GLenum MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_GEOMETRY_UNIFORM_BLOCKS();
    EXPORT virtual GLenum MAX_GEOMETRY_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_HEIGHT();
    EXPORT virtual GLenum MAX_IMAGE_SAMPLES();
    EXPORT virtual GLenum MAX_IMAGE_UNITS();
    EXPORT virtual GLenum MAX_INTEGER_SAMPLES();
    EXPORT virtual GLenum MAX_LABEL_LENGTH();
    EXPORT virtual GLenum MAX_LAYERS();
    EXPORT virtual GLenum MAX_NAME_LENGTH();
    EXPORT virtual GLenum MAX_NUM_ACTIVE_VARIABLES();
    EXPORT virtual GLenum MAX_NUM_COMPATIBLE_SUBROUTINES();
    EXPORT virtual GLenum MAX_PATCH_VERTICES();
    EXPORT virtual GLenum MAX_PROGRAM_TEXEL_OFFSET();
    EXPORT virtual GLenum MAX_PROGRAM_TEXTURE_GATHER_OFFSET();
    EXPORT virtual GLenum MAX_RECTANGLE_TEXTURE_SIZE();
    EXPORT virtual GLenum MAX_RENDERBUFFER_SIZE();
    EXPORT virtual GLenum MAX_SAMPLES();
    EXPORT virtual GLenum MAX_SAMPLE_MASK_WORDS();
    EXPORT virtual GLenum MAX_SERVER_WAIT_TIMEOUT();
    EXPORT virtual GLenum MAX_SHADER_STORAGE_BLOCK_SIZE();
    EXPORT virtual GLenum MAX_SHADER_STORAGE_BUFFER_BINDINGS();
    EXPORT virtual GLenum MAX_SUBROUTINES();
    EXPORT virtual GLenum MAX_SUBROUTINE_UNIFORM_LOCATIONS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_ATOMIC_COUNTERS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_IMAGE_UNIFORMS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_INPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_OUTPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_UNIFORM_BLOCKS();
    EXPORT virtual GLenum MAX_TESS_CONTROL_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_ATOMIC_COUNTERS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_IMAGE_UNIFORMS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_INPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_OUTPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_UNIFORM_BLOCKS();
    EXPORT virtual GLenum MAX_TESS_EVALUATION_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_TESS_GEN_LEVEL();
    EXPORT virtual GLenum MAX_TESS_PATCH_COMPONENTS();
    EXPORT virtual GLenum MAX_TEXTURE_BUFFER_SIZE();
    EXPORT virtual GLenum MAX_TEXTURE_IMAGE_UNITS();
    EXPORT virtual GLenum MAX_TEXTURE_LOD_BIAS();
    EXPORT virtual GLenum MAX_TEXTURE_MAX_ANISOTROPY();
    EXPORT virtual GLenum MAX_TEXTURE_SIZE();
    EXPORT virtual GLenum MAX_TRANSFORM_FEEDBACK_BUFFERS();
    EXPORT virtual GLenum MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS();
    EXPORT virtual GLenum MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS();
    EXPORT virtual GLenum MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS();
    EXPORT virtual GLenum MAX_UNIFORM_BLOCK_SIZE();
    EXPORT virtual GLenum MAX_UNIFORM_BUFFER_BINDINGS();
    EXPORT virtual GLenum MAX_UNIFORM_LOCATIONS();
    EXPORT virtual GLenum MAX_VARYING_COMPONENTS();
    EXPORT virtual GLenum MAX_VARYING_FLOATS();
    EXPORT virtual GLenum MAX_VARYING_VECTORS();
    EXPORT virtual GLenum MAX_VERTEX_ATOMIC_COUNTERS();
    EXPORT virtual GLenum MAX_VERTEX_ATOMIC_COUNTER_BUFFERS();
    EXPORT virtual GLenum MAX_VERTEX_ATTRIBS();
    EXPORT virtual GLenum MAX_VERTEX_ATTRIB_BINDINGS();
    EXPORT virtual GLenum MAX_VERTEX_ATTRIB_RELATIVE_OFFSET();
    EXPORT virtual GLenum MAX_VERTEX_ATTRIB_STRIDE();
    EXPORT virtual GLenum MAX_VERTEX_IMAGE_UNIFORMS();
    EXPORT virtual GLenum MAX_VERTEX_OUTPUT_COMPONENTS();
    EXPORT virtual GLenum MAX_VERTEX_SHADER_STORAGE_BLOCKS();
    EXPORT virtual GLenum MAX_VERTEX_STREAMS();
    EXPORT virtual GLenum MAX_VERTEX_TEXTURE_IMAGE_UNITS();
    EXPORT virtual GLenum MAX_VERTEX_UNIFORM_BLOCKS();
    EXPORT virtual GLenum MAX_VERTEX_UNIFORM_COMPONENTS();
    EXPORT virtual GLenum MAX_VERTEX_UNIFORM_VECTORS();
    EXPORT virtual GLenum MAX_VIEWPORTS();
    EXPORT virtual GLenum MAX_VIEWPORT_DIMS();
    EXPORT virtual GLenum MAX_WIDTH();
    EXPORT virtual GLenum MEDIUM_FLOAT();
    EXPORT virtual GLenum MEDIUM_INT();
    EXPORT virtual GLenum MIN();
    EXPORT virtual GLenum MINOR_VERSION();
    EXPORT virtual GLenum MIN_FRAGMENT_INTERPOLATION_OFFSET();
    EXPORT virtual GLenum MIN_MAP_BUFFER_ALIGNMENT();
    EXPORT virtual GLenum MIN_PROGRAM_TEXEL_OFFSET();
    EXPORT virtual GLenum MIN_PROGRAM_TEXTURE_GATHER_OFFSET();
    EXPORT virtual GLenum MIN_SAMPLE_SHADING_VALUE();
    EXPORT virtual GLenum MIPMAP();
    EXPORT virtual GLenum MIRRORED_REPEAT();
    EXPORT virtual GLenum MIRROR_CLAMP_TO_EDGE();
    EXPORT virtual GLenum MULTISAMPLE();
    EXPORT virtual GLenum NAME_LENGTH();
    EXPORT virtual GLenum NAND();
    EXPORT virtual GLenum NEAREST();
    EXPORT virtual GLenum NEAREST_MIPMAP_LINEAR();
    EXPORT virtual GLenum NEAREST_MIPMAP_NEAREST();
    EXPORT virtual GLenum NEGATIVE_ONE_TO_ONE();
    EXPORT virtual GLenum NEVER();
    EXPORT virtual GLenum NICEST();
    EXPORT virtual GLenum NONE();
    EXPORT virtual GLenum NOOP();
    EXPORT virtual GLenum NOR();
    EXPORT virtual GLenum NOTEQUAL();
    EXPORT virtual GLenum NO_ERROR();
    EXPORT virtual GLenum NO_RESET_NOTIFICATION();
    EXPORT virtual GLenum NUM_ACTIVE_VARIABLES();
    EXPORT virtual GLenum NUM_COMPATIBLE_SUBROUTINES();
    EXPORT virtual GLenum NUM_COMPRESSED_TEXTURE_FORMATS();
    EXPORT virtual GLenum NUM_EXTENSIONS();
    EXPORT virtual GLenum NUM_PROGRAM_BINARY_FORMATS();
    EXPORT virtual GLenum NUM_SAMPLE_COUNTS();
    EXPORT virtual GLenum NUM_SHADER_BINARY_FORMATS();
    EXPORT virtual GLenum NUM_SHADING_LANGUAGE_VERSIONS();
    EXPORT virtual GLenum NUM_SPIR_V_EXTENSIONS();
    EXPORT virtual GLenum OBJECT_TYPE();
    EXPORT virtual GLenum OFFSET();
    EXPORT virtual GLenum ONE();
    EXPORT virtual GLenum ONE_MINUS_CONSTANT_ALPHA();
    EXPORT virtual GLenum ONE_MINUS_CONSTANT_COLOR();
    EXPORT virtual GLenum ONE_MINUS_DST_ALPHA();
    EXPORT virtual GLenum ONE_MINUS_DST_COLOR();
    EXPORT virtual GLenum ONE_MINUS_SRC1_ALPHA();
    EXPORT virtual GLenum ONE_MINUS_SRC1_COLOR();
    EXPORT virtual GLenum ONE_MINUS_SRC_ALPHA();
    EXPORT virtual GLenum ONE_MINUS_SRC_COLOR();
    EXPORT virtual GLenum OR();
    EXPORT virtual GLenum OR_INVERTED();
    EXPORT virtual GLenum OR_REVERSE();
    EXPORT virtual GLenum OUT_OF_MEMORY();
    EXPORT virtual GLenum PACK_ALIGNMENT();
    EXPORT virtual GLenum PACK_COMPRESSED_BLOCK_DEPTH();
    EXPORT virtual GLenum PACK_COMPRESSED_BLOCK_HEIGHT();
    EXPORT virtual GLenum PACK_COMPRESSED_BLOCK_SIZE();
    EXPORT virtual GLenum PACK_COMPRESSED_BLOCK_WIDTH();
    EXPORT virtual GLenum PACK_IMAGE_HEIGHT();
    EXPORT virtual GLenum PACK_LSB_FIRST();
    EXPORT virtual GLenum PACK_ROW_LENGTH();
    EXPORT virtual GLenum PACK_SKIP_IMAGES();
    EXPORT virtual GLenum PACK_SKIP_PIXELS();
    EXPORT virtual GLenum PACK_SKIP_ROWS();
    EXPORT virtual GLenum PACK_SWAP_BYTES();
    EXPORT virtual GLenum PARAMETER_BUFFER();
    EXPORT virtual GLenum PARAMETER_BUFFER_BINDING();
    EXPORT virtual GLenum PATCHES();
    EXPORT virtual GLenum PATCH_DEFAULT_INNER_LEVEL();
    EXPORT virtual GLenum PATCH_DEFAULT_OUTER_LEVEL();
    EXPORT virtual GLenum PATCH_VERTICES();
    EXPORT virtual GLenum PIXEL_BUFFER_BARRIER_BIT();
    EXPORT virtual GLenum PIXEL_PACK_BUFFER();
    EXPORT virtual GLenum PIXEL_PACK_BUFFER_BINDING();
    EXPORT virtual GLenum PIXEL_UNPACK_BUFFER();
    EXPORT virtual GLenum PIXEL_UNPACK_BUFFER_BINDING();
    EXPORT virtual GLenum POINT();
    EXPORT virtual GLenum POINTS();
    EXPORT virtual GLenum POINT_FADE_THRESHOLD_SIZE();
    EXPORT virtual GLenum POINT_SIZE();
    EXPORT virtual GLenum POINT_SIZE_GRANULARITY();
    EXPORT virtual GLenum POINT_SIZE_RANGE();
    EXPORT virtual GLenum POINT_SPRITE_COORD_ORIGIN();
    EXPORT virtual GLenum POLYGON_MODE();
    EXPORT virtual GLenum POLYGON_OFFSET_CLAMP();
    EXPORT virtual GLenum POLYGON_OFFSET_FACTOR();
    EXPORT virtual GLenum POLYGON_OFFSET_FILL();
    EXPORT virtual GLenum POLYGON_OFFSET_LINE();
    EXPORT virtual GLenum POLYGON_OFFSET_POINT();
    EXPORT virtual GLenum POLYGON_OFFSET_UNITS();
    EXPORT virtual GLenum POLYGON_SMOOTH();
    EXPORT virtual GLenum POLYGON_SMOOTH_HINT();
    EXPORT virtual GLenum PRIMITIVES_GENERATED();
    EXPORT virtual GLenum PRIMITIVES_SUBMITTED();
    EXPORT virtual GLenum PRIMITIVE_RESTART();
    EXPORT virtual GLenum PRIMITIVE_RESTART_FIXED_INDEX();
    EXPORT virtual GLenum PRIMITIVE_RESTART_FOR_PATCHES_SUPPORTED();
    EXPORT virtual GLenum PRIMITIVE_RESTART_INDEX();
    EXPORT virtual GLenum PROGRAM();
    EXPORT virtual GLenum PROGRAM_BINARY_FORMATS();
    EXPORT virtual GLenum PROGRAM_BINARY_LENGTH();
    EXPORT virtual GLenum PROGRAM_BINARY_RETRIEVABLE_HINT();
    EXPORT virtual GLenum PROGRAM_INPUT();
    EXPORT virtual GLenum PROGRAM_OUTPUT();
    EXPORT virtual GLenum PROGRAM_PIPELINE();
    EXPORT virtual GLenum PROGRAM_PIPELINE_BINDING();
    EXPORT virtual GLenum PROGRAM_POINT_SIZE();
    EXPORT virtual GLenum PROGRAM_SEPARABLE();
    EXPORT virtual GLenum PROVOKING_VERTEX();
    EXPORT virtual GLenum PROXY_TEXTURE_1D();
    EXPORT virtual GLenum PROXY_TEXTURE_1D_ARRAY();
    EXPORT virtual GLenum PROXY_TEXTURE_2D();
    EXPORT virtual GLenum PROXY_TEXTURE_2D_ARRAY();
    EXPORT virtual GLenum PROXY_TEXTURE_2D_MULTISAMPLE();
    EXPORT virtual GLenum PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum PROXY_TEXTURE_3D();
    EXPORT virtual GLenum PROXY_TEXTURE_CUBE_MAP();
    EXPORT virtual GLenum PROXY_TEXTURE_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum PROXY_TEXTURE_RECTANGLE();
    EXPORT virtual GLenum QUADS();
    EXPORT virtual GLenum QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION();
    EXPORT virtual GLenum QUERY();
    EXPORT virtual GLenum QUERY_BUFFER();
    EXPORT virtual GLenum QUERY_BUFFER_BARRIER_BIT();
    EXPORT virtual GLenum QUERY_BUFFER_BINDING();
    EXPORT virtual GLenum QUERY_BY_REGION_NO_WAIT();
    EXPORT virtual GLenum QUERY_BY_REGION_NO_WAIT_INVERTED();
    EXPORT virtual GLenum QUERY_BY_REGION_WAIT();
    EXPORT virtual GLenum QUERY_BY_REGION_WAIT_INVERTED();
    EXPORT virtual GLenum QUERY_COUNTER_BITS();
    EXPORT virtual GLenum QUERY_NO_WAIT();
    EXPORT virtual GLenum QUERY_NO_WAIT_INVERTED();
    EXPORT virtual GLenum QUERY_RESULT();
    EXPORT virtual GLenum QUERY_RESULT_AVAILABLE();
    EXPORT virtual GLenum QUERY_RESULT_NO_WAIT();
    EXPORT virtual GLenum QUERY_TARGET();
    EXPORT virtual GLenum QUERY_WAIT();
    EXPORT virtual GLenum QUERY_WAIT_INVERTED();
    EXPORT virtual GLenum R11F_G11F_B10F();
    EXPORT virtual GLenum R16();
    EXPORT virtual GLenum R16F();
    EXPORT virtual GLenum R16I();
    EXPORT virtual GLenum R16UI();
    EXPORT virtual GLenum R16_SNORM();
    EXPORT virtual GLenum R32F();
    EXPORT virtual GLenum R32I();
    EXPORT virtual GLenum R32UI();
    EXPORT virtual GLenum R3_G3_B2();
    EXPORT virtual GLenum R8();
    EXPORT virtual GLenum R8I();
    EXPORT virtual GLenum R8UI();
    EXPORT virtual GLenum R8_SNORM();
    EXPORT virtual GLenum RASTERIZER_DISCARD();
    EXPORT virtual GLenum READ_BUFFER();
    EXPORT virtual GLenum READ_FRAMEBUFFER();
    EXPORT virtual GLenum READ_FRAMEBUFFER_BINDING();
    EXPORT virtual GLenum READ_ONLY();
    EXPORT virtual GLenum READ_PIXELS();
    EXPORT virtual GLenum READ_PIXELS_FORMAT();
    EXPORT virtual GLenum READ_PIXELS_TYPE();
    EXPORT virtual GLenum READ_WRITE();
    EXPORT virtual GLenum RED();
    EXPORT virtual GLenum RED_INTEGER();
    EXPORT virtual GLenum REFERENCED_BY_COMPUTE_SHADER();
    EXPORT virtual GLenum REFERENCED_BY_FRAGMENT_SHADER();
    EXPORT virtual GLenum REFERENCED_BY_GEOMETRY_SHADER();
    EXPORT virtual GLenum REFERENCED_BY_TESS_CONTROL_SHADER();
    EXPORT virtual GLenum REFERENCED_BY_TESS_EVALUATION_SHADER();
    EXPORT virtual GLenum REFERENCED_BY_VERTEX_SHADER();
    EXPORT virtual GLenum RENDERBUFFER();
    EXPORT virtual GLenum RENDERBUFFER_ALPHA_SIZE();
    EXPORT virtual GLenum RENDERBUFFER_BINDING();
    EXPORT virtual GLenum RENDERBUFFER_BLUE_SIZE();
    EXPORT virtual GLenum RENDERBUFFER_DEPTH_SIZE();
    EXPORT virtual GLenum RENDERBUFFER_GREEN_SIZE();
    EXPORT virtual GLenum RENDERBUFFER_HEIGHT();
    EXPORT virtual GLenum RENDERBUFFER_INTERNAL_FORMAT();
    EXPORT virtual GLenum RENDERBUFFER_RED_SIZE();
    EXPORT virtual GLenum RENDERBUFFER_SAMPLES();
    EXPORT virtual GLenum RENDERBUFFER_STENCIL_SIZE();
    EXPORT virtual GLenum RENDERBUFFER_WIDTH();
    EXPORT virtual GLenum RENDERER();
    EXPORT virtual GLenum REPEAT();
    EXPORT virtual GLenum REPLACE();
    EXPORT virtual GLenum RESET_NOTIFICATION_STRATEGY();
    EXPORT virtual GLenum RG();
    EXPORT virtual GLenum RG16();
    EXPORT virtual GLenum RG16F();
    EXPORT virtual GLenum RG16I();
    EXPORT virtual GLenum RG16UI();
    EXPORT virtual GLenum RG16_SNORM();
    EXPORT virtual GLenum RG32F();
    EXPORT virtual GLenum RG32I();
    EXPORT virtual GLenum RG32UI();
    EXPORT virtual GLenum RG8();
    EXPORT virtual GLenum RG8I();
    EXPORT virtual GLenum RG8UI();
    EXPORT virtual GLenum RG8_SNORM();
    EXPORT virtual GLenum RGB();
    EXPORT virtual GLenum RGB10();
    EXPORT virtual GLenum RGB10_A2();
    EXPORT virtual GLenum RGB10_A2UI();
    EXPORT virtual GLenum RGB12();
    EXPORT virtual GLenum RGB16();
    EXPORT virtual GLenum RGB16F();
    EXPORT virtual GLenum RGB16I();
    EXPORT virtual GLenum RGB16UI();
    EXPORT virtual GLenum RGB16_SNORM();
    EXPORT virtual GLenum RGB32F();
    EXPORT virtual GLenum RGB32I();
    EXPORT virtual GLenum RGB32UI();
    EXPORT virtual GLenum RGB4();
    EXPORT virtual GLenum RGB5();
    EXPORT virtual GLenum RGB565();
    EXPORT virtual GLenum RGB5_A1();
    EXPORT virtual GLenum RGB8();
    EXPORT virtual GLenum RGB8I();
    EXPORT virtual GLenum RGB8UI();
    EXPORT virtual GLenum RGB8_SNORM();
    EXPORT virtual GLenum RGB9_E5();
    EXPORT virtual GLenum RGBA();
    EXPORT virtual GLenum RGBA12();
    EXPORT virtual GLenum RGBA16();
    EXPORT virtual GLenum RGBA16F();
    EXPORT virtual GLenum RGBA16I();
    EXPORT virtual GLenum RGBA16UI();
    EXPORT virtual GLenum RGBA16_SNORM();
    EXPORT virtual GLenum RGBA2();
    EXPORT virtual GLenum RGBA32F();
    EXPORT virtual GLenum RGBA32I();
    EXPORT virtual GLenum RGBA32UI();
    EXPORT virtual GLenum RGBA4();
    EXPORT virtual GLenum RGBA8();
    EXPORT virtual GLenum RGBA8I();
    EXPORT virtual GLenum RGBA8UI();
    EXPORT virtual GLenum RGBA8_SNORM();
    EXPORT virtual GLenum RGBA_INTEGER();
    EXPORT virtual GLenum RGB_INTEGER();
    EXPORT virtual GLenum RG_INTEGER();
    EXPORT virtual GLenum RIGHT();
    EXPORT virtual GLenum SAMPLER();
    EXPORT virtual GLenum SAMPLER_1D();
    EXPORT virtual GLenum SAMPLER_1D_ARRAY();
    EXPORT virtual GLenum SAMPLER_1D_ARRAY_SHADOW();
    EXPORT virtual GLenum SAMPLER_1D_SHADOW();
    EXPORT virtual GLenum SAMPLER_2D();
    EXPORT virtual GLenum SAMPLER_2D_ARRAY();
    EXPORT virtual GLenum SAMPLER_2D_ARRAY_SHADOW();
    EXPORT virtual GLenum SAMPLER_2D_MULTISAMPLE();
    EXPORT virtual GLenum SAMPLER_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum SAMPLER_2D_RECT();
    EXPORT virtual GLenum SAMPLER_2D_RECT_SHADOW();
    EXPORT virtual GLenum SAMPLER_2D_SHADOW();
    EXPORT virtual GLenum SAMPLER_3D();
    EXPORT virtual GLenum SAMPLER_BINDING();
    EXPORT virtual GLenum SAMPLER_BUFFER();
    EXPORT virtual GLenum SAMPLER_CUBE();
    EXPORT virtual GLenum SAMPLER_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum SAMPLER_CUBE_MAP_ARRAY_SHADOW();
    EXPORT virtual GLenum SAMPLER_CUBE_SHADOW();
    EXPORT virtual GLenum SAMPLES();
    EXPORT virtual GLenum SAMPLES_PASSED();
    EXPORT virtual GLenum SAMPLE_ALPHA_TO_COVERAGE();
    EXPORT virtual GLenum SAMPLE_ALPHA_TO_ONE();
    EXPORT virtual GLenum SAMPLE_BUFFERS();
    EXPORT virtual GLenum SAMPLE_COVERAGE();
    EXPORT virtual GLenum SAMPLE_COVERAGE_INVERT();
    EXPORT virtual GLenum SAMPLE_COVERAGE_VALUE();
    EXPORT virtual GLenum SAMPLE_MASK();
    EXPORT virtual GLenum SAMPLE_MASK_VALUE();
    EXPORT virtual GLenum SAMPLE_POSITION();
    EXPORT virtual GLenum SAMPLE_SHADING();
    EXPORT virtual GLenum SCISSOR_BOX();
    EXPORT virtual GLenum SCISSOR_TEST();
    EXPORT virtual GLenum SEPARATE_ATTRIBS();
    EXPORT virtual GLenum SET();
    EXPORT virtual GLenum SHADER();
    EXPORT virtual GLenum SHADER_BINARY_FORMATS();
    EXPORT virtual GLenum SHADER_BINARY_FORMAT_SPIR_V();
    EXPORT virtual GLenum SHADER_COMPILER();
    EXPORT virtual GLenum SHADER_IMAGE_ACCESS_BARRIER_BIT();
    EXPORT virtual GLenum SHADER_IMAGE_ATOMIC();
    EXPORT virtual GLenum SHADER_IMAGE_LOAD();
    EXPORT virtual GLenum SHADER_IMAGE_STORE();
    EXPORT virtual GLenum SHADER_SOURCE_LENGTH();
    EXPORT virtual GLenum SHADER_STORAGE_BARRIER_BIT();
    EXPORT virtual GLenum SHADER_STORAGE_BLOCK();
    EXPORT virtual GLenum SHADER_STORAGE_BUFFER();
    EXPORT virtual GLenum SHADER_STORAGE_BUFFER_BINDING();
    EXPORT virtual GLenum SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT();
    EXPORT virtual GLenum SHADER_STORAGE_BUFFER_SIZE();
    EXPORT virtual GLenum SHADER_STORAGE_BUFFER_START();
    EXPORT virtual GLenum SHADER_TYPE();
    EXPORT virtual GLenum SHADING_LANGUAGE_VERSION();
    EXPORT virtual GLenum SHORT();
    EXPORT virtual GLenum SIGNALED();
    EXPORT virtual GLenum SIGNED_NORMALIZED();
    EXPORT virtual GLenum SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST();
    EXPORT virtual GLenum SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE();
    EXPORT virtual GLenum SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST();
    EXPORT virtual GLenum SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE();
    EXPORT virtual GLenum SMOOTH_LINE_WIDTH_GRANULARITY();
    EXPORT virtual GLenum SMOOTH_LINE_WIDTH_RANGE();
    EXPORT virtual GLenum SMOOTH_POINT_SIZE_GRANULARITY();
    EXPORT virtual GLenum SMOOTH_POINT_SIZE_RANGE();
    EXPORT virtual GLenum SPIR_V_BINARY();
    EXPORT virtual GLenum SPIR_V_EXTENSIONS();
    EXPORT virtual GLenum SRC1_ALPHA();
    EXPORT virtual GLenum SRC1_COLOR();
    EXPORT virtual GLenum SRC_ALPHA();
    EXPORT virtual GLenum SRC_ALPHA_SATURATE();
    EXPORT virtual GLenum SRC_COLOR();
    EXPORT virtual GLenum SRGB();
    EXPORT virtual GLenum SRGB8();
    EXPORT virtual GLenum SRGB8_ALPHA8();
    EXPORT virtual GLenum SRGB_ALPHA();
    EXPORT virtual GLenum SRGB_READ();
    EXPORT virtual GLenum SRGB_WRITE();
    EXPORT virtual GLenum STACK_OVERFLOW();
    EXPORT virtual GLenum STACK_UNDERFLOW();
    EXPORT virtual GLenum STATIC_COPY();
    EXPORT virtual GLenum STATIC_DRAW();
    EXPORT virtual GLenum STATIC_READ();
    EXPORT virtual GLenum STENCIL();
    EXPORT virtual GLenum STENCIL_ATTACHMENT();
    EXPORT virtual GLenum STENCIL_BACK_FAIL();
    EXPORT virtual GLenum STENCIL_BACK_FUNC();
    EXPORT virtual GLenum STENCIL_BACK_PASS_DEPTH_FAIL();
    EXPORT virtual GLenum STENCIL_BACK_PASS_DEPTH_PASS();
    EXPORT virtual GLenum STENCIL_BACK_REF();
    EXPORT virtual GLenum STENCIL_BACK_VALUE_MASK();
    EXPORT virtual GLenum STENCIL_BACK_WRITEMASK();
    EXPORT virtual GLenum STENCIL_BUFFER_BIT();
    EXPORT virtual GLenum STENCIL_CLEAR_VALUE();
    EXPORT virtual GLenum STENCIL_COMPONENTS();
    EXPORT virtual GLenum STENCIL_FAIL();
    EXPORT virtual GLenum STENCIL_FUNC();
    EXPORT virtual GLenum STENCIL_INDEX();
    EXPORT virtual GLenum STENCIL_INDEX1();
    EXPORT virtual GLenum STENCIL_INDEX16();
    EXPORT virtual GLenum STENCIL_INDEX4();
    EXPORT virtual GLenum STENCIL_INDEX8();
    EXPORT virtual GLenum STENCIL_PASS_DEPTH_FAIL();
    EXPORT virtual GLenum STENCIL_PASS_DEPTH_PASS();
    EXPORT virtual GLenum STENCIL_REF();
    EXPORT virtual GLenum STENCIL_RENDERABLE();
    EXPORT virtual GLenum STENCIL_TEST();
    EXPORT virtual GLenum STENCIL_VALUE_MASK();
    EXPORT virtual GLenum STENCIL_WRITEMASK();
    EXPORT virtual GLenum STEREO();
    EXPORT virtual GLenum STREAM_COPY();
    EXPORT virtual GLenum STREAM_DRAW();
    EXPORT virtual GLenum STREAM_READ();
    EXPORT virtual GLenum SUBPIXEL_BITS();
    EXPORT virtual GLenum SYNC_CONDITION();
    EXPORT virtual GLenum SYNC_FENCE();
    EXPORT virtual GLenum SYNC_FLAGS();
    EXPORT virtual GLenum SYNC_FLUSH_COMMANDS_BIT();
    EXPORT virtual GLenum SYNC_GPU_COMMANDS_COMPLETE();
    EXPORT virtual GLenum SYNC_STATUS();
    EXPORT virtual GLenum TESS_CONTROL_OUTPUT_VERTICES();
    EXPORT virtual GLenum TESS_CONTROL_SHADER();
    EXPORT virtual GLenum TESS_CONTROL_SHADER_BIT();
    EXPORT virtual GLenum TESS_CONTROL_SHADER_PATCHES();
    EXPORT virtual GLenum TESS_CONTROL_SUBROUTINE();
    EXPORT virtual GLenum TESS_CONTROL_SUBROUTINE_UNIFORM();
    EXPORT virtual GLenum TESS_CONTROL_TEXTURE();
    EXPORT virtual GLenum TESS_EVALUATION_SHADER();
    EXPORT virtual GLenum TESS_EVALUATION_SHADER_BIT();
    EXPORT virtual GLenum TESS_EVALUATION_SHADER_INVOCATIONS();
    EXPORT virtual GLenum TESS_EVALUATION_SUBROUTINE();
    EXPORT virtual GLenum TESS_EVALUATION_SUBROUTINE_UNIFORM();
    EXPORT virtual GLenum TESS_EVALUATION_TEXTURE();
    EXPORT virtual GLenum TESS_GEN_MODE();
    EXPORT virtual GLenum TESS_GEN_POINT_MODE();
    EXPORT virtual GLenum TESS_GEN_SPACING();
    EXPORT virtual GLenum TESS_GEN_VERTEX_ORDER();
    EXPORT virtual GLenum TEXTURE();
    EXPORT virtual GLenum TEXTURE0();
    EXPORT virtual GLenum TEXTURE1();
    EXPORT virtual GLenum TEXTURE10();
    EXPORT virtual GLenum TEXTURE11();
    EXPORT virtual GLenum TEXTURE12();
    EXPORT virtual GLenum TEXTURE13();
    EXPORT virtual GLenum TEXTURE14();
    EXPORT virtual GLenum TEXTURE15();
    EXPORT virtual GLenum TEXTURE16();
    EXPORT virtual GLenum TEXTURE17();
    EXPORT virtual GLenum TEXTURE18();
    EXPORT virtual GLenum TEXTURE19();
    EXPORT virtual GLenum TEXTURE2();
    EXPORT virtual GLenum TEXTURE20();
    EXPORT virtual GLenum TEXTURE21();
    EXPORT virtual GLenum TEXTURE22();
    EXPORT virtual GLenum TEXTURE23();
    EXPORT virtual GLenum TEXTURE24();
    EXPORT virtual GLenum TEXTURE25();
    EXPORT virtual GLenum TEXTURE26();
    EXPORT virtual GLenum TEXTURE27();
    EXPORT virtual GLenum TEXTURE28();
    EXPORT virtual GLenum TEXTURE29();
    EXPORT virtual GLenum TEXTURE3();
    EXPORT virtual GLenum TEXTURE30();
    EXPORT virtual GLenum TEXTURE31();
    EXPORT virtual GLenum TEXTURE4();
    EXPORT virtual GLenum TEXTURE5();
    EXPORT virtual GLenum TEXTURE6();
    EXPORT virtual GLenum TEXTURE7();
    EXPORT virtual GLenum TEXTURE8();
    EXPORT virtual GLenum TEXTURE9();
    EXPORT virtual GLenum TEXTURE_1D();
    EXPORT virtual GLenum TEXTURE_1D_ARRAY();
    EXPORT virtual GLenum TEXTURE_2D();
    EXPORT virtual GLenum TEXTURE_2D_ARRAY();
    EXPORT virtual GLenum TEXTURE_2D_MULTISAMPLE();
    EXPORT virtual GLenum TEXTURE_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum TEXTURE_3D();
    EXPORT virtual GLenum TEXTURE_ALPHA_SIZE();
    EXPORT virtual GLenum TEXTURE_ALPHA_TYPE();
    EXPORT virtual GLenum TEXTURE_BASE_LEVEL();
    EXPORT virtual GLenum TEXTURE_BINDING_1D();
    EXPORT virtual GLenum TEXTURE_BINDING_1D_ARRAY();
    EXPORT virtual GLenum TEXTURE_BINDING_2D();
    EXPORT virtual GLenum TEXTURE_BINDING_2D_ARRAY();
    EXPORT virtual GLenum TEXTURE_BINDING_2D_MULTISAMPLE();
    EXPORT virtual GLenum TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum TEXTURE_BINDING_3D();
    EXPORT virtual GLenum TEXTURE_BINDING_BUFFER();
    EXPORT virtual GLenum TEXTURE_BINDING_CUBE_MAP();
    EXPORT virtual GLenum TEXTURE_BINDING_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum TEXTURE_BINDING_RECTANGLE();
    EXPORT virtual GLenum TEXTURE_BLUE_SIZE();
    EXPORT virtual GLenum TEXTURE_BLUE_TYPE();
    EXPORT virtual GLenum TEXTURE_BORDER_COLOR();
    EXPORT virtual GLenum TEXTURE_BUFFER();
    EXPORT virtual GLenum TEXTURE_BUFFER_BINDING();
    EXPORT virtual GLenum TEXTURE_BUFFER_DATA_STORE_BINDING();
    EXPORT virtual GLenum TEXTURE_BUFFER_OFFSET();
    EXPORT virtual GLenum TEXTURE_BUFFER_OFFSET_ALIGNMENT();
    EXPORT virtual GLenum TEXTURE_BUFFER_SIZE();
    EXPORT virtual GLenum TEXTURE_COMPARE_FUNC();
    EXPORT virtual GLenum TEXTURE_COMPARE_MODE();
    EXPORT virtual GLenum TEXTURE_COMPRESSED();
    EXPORT virtual GLenum TEXTURE_COMPRESSED_BLOCK_HEIGHT();
    EXPORT virtual GLenum TEXTURE_COMPRESSED_BLOCK_SIZE();
    EXPORT virtual GLenum TEXTURE_COMPRESSED_BLOCK_WIDTH();
    EXPORT virtual GLenum TEXTURE_COMPRESSED_IMAGE_SIZE();
    EXPORT virtual GLenum TEXTURE_COMPRESSION_HINT();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP_NEGATIVE_X();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP_NEGATIVE_Y();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP_NEGATIVE_Z();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP_POSITIVE_X();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP_POSITIVE_Y();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP_POSITIVE_Z();
    EXPORT virtual GLenum TEXTURE_CUBE_MAP_SEAMLESS();
    EXPORT virtual GLenum TEXTURE_DEPTH();
    EXPORT virtual GLenum TEXTURE_DEPTH_SIZE();
    EXPORT virtual GLenum TEXTURE_DEPTH_TYPE();
    EXPORT virtual GLenum TEXTURE_FETCH_BARRIER_BIT();
    EXPORT virtual GLenum TEXTURE_FIXED_SAMPLE_LOCATIONS();
    EXPORT virtual GLenum TEXTURE_GATHER();
    EXPORT virtual GLenum TEXTURE_GATHER_SHADOW();
    EXPORT virtual GLenum TEXTURE_GREEN_SIZE();
    EXPORT virtual GLenum TEXTURE_GREEN_TYPE();
    EXPORT virtual GLenum TEXTURE_HEIGHT();
    EXPORT virtual GLenum TEXTURE_IMAGE_FORMAT();
    EXPORT virtual GLenum TEXTURE_IMAGE_TYPE();
    EXPORT virtual GLenum TEXTURE_IMMUTABLE_FORMAT();
    EXPORT virtual GLenum TEXTURE_IMMUTABLE_LEVELS();
    EXPORT virtual GLenum TEXTURE_INTERNAL_FORMAT();
    EXPORT virtual GLenum TEXTURE_LOD_BIAS();
    EXPORT virtual GLenum TEXTURE_MAG_FILTER();
    EXPORT virtual GLenum TEXTURE_MAX_ANISOTROPY();
    EXPORT virtual GLenum TEXTURE_MAX_LEVEL();
    EXPORT virtual GLenum TEXTURE_MAX_LOD();
    EXPORT virtual GLenum TEXTURE_MIN_FILTER();
    EXPORT virtual GLenum TEXTURE_MIN_LOD();
    EXPORT virtual GLenum TEXTURE_RECTANGLE();
    EXPORT virtual GLenum TEXTURE_RED_SIZE();
    EXPORT virtual GLenum TEXTURE_RED_TYPE();
    EXPORT virtual GLenum TEXTURE_SAMPLES();
    EXPORT virtual GLenum TEXTURE_SHADOW();
    EXPORT virtual GLenum TEXTURE_SHARED_SIZE();
    EXPORT virtual GLenum TEXTURE_STENCIL_SIZE();
    EXPORT virtual GLenum TEXTURE_SWIZZLE_A();
    EXPORT virtual GLenum TEXTURE_SWIZZLE_B();
    EXPORT virtual GLenum TEXTURE_SWIZZLE_G();
    EXPORT virtual GLenum TEXTURE_SWIZZLE_R();
    EXPORT virtual GLenum TEXTURE_SWIZZLE_RGBA();
    EXPORT virtual GLenum TEXTURE_TARGET();
    EXPORT virtual GLenum TEXTURE_UPDATE_BARRIER_BIT();
    EXPORT virtual GLenum TEXTURE_VIEW();
    EXPORT virtual GLenum TEXTURE_VIEW_MIN_LAYER();
    EXPORT virtual GLenum TEXTURE_VIEW_MIN_LEVEL();
    EXPORT virtual GLenum TEXTURE_VIEW_NUM_LAYERS();
    EXPORT virtual GLenum TEXTURE_VIEW_NUM_LEVELS();
    EXPORT virtual GLenum TEXTURE_WIDTH();
    EXPORT virtual GLenum TEXTURE_WRAP_R();
    EXPORT virtual GLenum TEXTURE_WRAP_S();
    EXPORT virtual GLenum TEXTURE_WRAP_T();
    EXPORT virtual GLenum TIMEOUT_EXPIRED();
    EXPORT virtual GLenum TIMEOUT_IGNORED();
    EXPORT virtual GLenum TIMESTAMP();
    EXPORT virtual GLenum TIME_ELAPSED();
    EXPORT virtual GLenum TOP_LEVEL_ARRAY_SIZE();
    EXPORT virtual GLenum TOP_LEVEL_ARRAY_STRIDE();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_ACTIVE();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BARRIER_BIT();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BINDING();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER_ACTIVE();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER_BINDING();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER_INDEX();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER_MODE();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER_PAUSED();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER_SIZE();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER_START();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_BUFFER_STRIDE();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_OVERFLOW();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_PAUSED();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_STREAM_OVERFLOW();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_VARYING();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_VARYINGS();
    EXPORT virtual GLenum TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH();
    EXPORT virtual GLenum TRIANGLES();
    EXPORT virtual GLenum TRIANGLES_ADJACENCY();
    EXPORT virtual GLenum TRIANGLE_FAN();
    EXPORT virtual GLenum TRIANGLE_STRIP();
    EXPORT virtual GLenum TRIANGLE_STRIP_ADJACENCY();
    EXPORT virtual GLenum TRUE();
    EXPORT virtual GLenum TYPE();
    EXPORT virtual GLenum UNDEFINED_VERTEX();
    EXPORT virtual GLenum UNIFORM();
    EXPORT virtual GLenum UNIFORM_ARRAY_STRIDE();
    EXPORT virtual GLenum UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX();
    EXPORT virtual GLenum UNIFORM_BARRIER_BIT();
    EXPORT virtual GLenum UNIFORM_BLOCK();
    EXPORT virtual GLenum UNIFORM_BLOCK_ACTIVE_UNIFORMS();
    EXPORT virtual GLenum UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES();
    EXPORT virtual GLenum UNIFORM_BLOCK_BINDING();
    EXPORT virtual GLenum UNIFORM_BLOCK_DATA_SIZE();
    EXPORT virtual GLenum UNIFORM_BLOCK_INDEX();
    EXPORT virtual GLenum UNIFORM_BLOCK_NAME_LENGTH();
    EXPORT virtual GLenum UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER();
    EXPORT virtual GLenum UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER();
    EXPORT virtual GLenum UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER();
    EXPORT virtual GLenum UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER();
    EXPORT virtual GLenum UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER();
    EXPORT virtual GLenum UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER();
    EXPORT virtual GLenum UNIFORM_BUFFER();
    EXPORT virtual GLenum UNIFORM_BUFFER_BINDING();
    EXPORT virtual GLenum UNIFORM_BUFFER_OFFSET_ALIGNMENT();
    EXPORT virtual GLenum UNIFORM_BUFFER_SIZE();
    EXPORT virtual GLenum UNIFORM_BUFFER_START();
    EXPORT virtual GLenum UNIFORM_IS_ROW_MAJOR();
    EXPORT virtual GLenum UNIFORM_MATRIX_STRIDE();
    EXPORT virtual GLenum UNIFORM_NAME_LENGTH();
    EXPORT virtual GLenum UNIFORM_OFFSET();
    EXPORT virtual GLenum UNIFORM_SIZE();
    EXPORT virtual GLenum UNIFORM_TYPE();
    EXPORT virtual GLenum UNKNOWN_CONTEXT_RESET();
    EXPORT virtual GLenum UNPACK_ALIGNMENT();
    EXPORT virtual GLenum UNPACK_COMPRESSED_BLOCK_DEPTH();
    EXPORT virtual GLenum UNPACK_COMPRESSED_BLOCK_HEIGHT();
    EXPORT virtual GLenum UNPACK_COMPRESSED_BLOCK_SIZE();
    EXPORT virtual GLenum UNPACK_COMPRESSED_BLOCK_WIDTH();
    EXPORT virtual GLenum UNPACK_IMAGE_HEIGHT();
    EXPORT virtual GLenum UNPACK_LSB_FIRST();
    EXPORT virtual GLenum UNPACK_ROW_LENGTH();
    EXPORT virtual GLenum UNPACK_SKIP_IMAGES();
    EXPORT virtual GLenum UNPACK_SKIP_PIXELS();
    EXPORT virtual GLenum UNPACK_SKIP_ROWS();
    EXPORT virtual GLenum UNPACK_SWAP_BYTES();
    EXPORT virtual GLenum UNSIGNALED();
    EXPORT virtual GLenum UNSIGNED_BYTE();
    EXPORT virtual GLenum UNSIGNED_BYTE_2_3_3_REV();
    EXPORT virtual GLenum UNSIGNED_BYTE_3_3_2();
    EXPORT virtual GLenum UNSIGNED_INT();
    EXPORT virtual GLenum UNSIGNED_INT_10F_11F_11F_REV();
    EXPORT virtual GLenum UNSIGNED_INT_10_10_10_2();
    EXPORT virtual GLenum UNSIGNED_INT_24_8();
    EXPORT virtual GLenum UNSIGNED_INT_2_10_10_10_REV();
    EXPORT virtual GLenum UNSIGNED_INT_5_9_9_9_REV();
    EXPORT virtual GLenum UNSIGNED_INT_8_8_8_8();
    EXPORT virtual GLenum UNSIGNED_INT_8_8_8_8_REV();
    EXPORT virtual GLenum UNSIGNED_INT_ATOMIC_COUNTER();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_1D();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_1D_ARRAY();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_2D();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_2D_ARRAY();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_2D_MULTISAMPLE();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_2D_RECT();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_3D();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_BUFFER();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_CUBE();
    EXPORT virtual GLenum UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_1D();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_1D_ARRAY();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_2D();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_2D_ARRAY();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_2D_RECT();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_3D();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_BUFFER();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_CUBE();
    EXPORT virtual GLenum UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY();
    EXPORT virtual GLenum UNSIGNED_INT_VEC2();
    EXPORT virtual GLenum UNSIGNED_INT_VEC3();
    EXPORT virtual GLenum UNSIGNED_INT_VEC4();
    EXPORT virtual GLenum UNSIGNED_NORMALIZED();
    EXPORT virtual GLenum UNSIGNED_SHORT();
    EXPORT virtual GLenum UNSIGNED_SHORT_1_5_5_5_REV();
    EXPORT virtual GLenum UNSIGNED_SHORT_4_4_4_4();
    EXPORT virtual GLenum UNSIGNED_SHORT_4_4_4_4_REV();
    EXPORT virtual GLenum UNSIGNED_SHORT_5_5_5_1();
    EXPORT virtual GLenum UNSIGNED_SHORT_5_6_5();
    EXPORT virtual GLenum UNSIGNED_SHORT_5_6_5_REV();
    EXPORT virtual GLenum UPPER_LEFT();
    EXPORT virtual GLenum VALIDATE_STATUS();
    EXPORT virtual GLenum VENDOR();
    EXPORT virtual GLenum VERSION();
    EXPORT virtual GLenum VERTEX_ARRAY();
    EXPORT virtual GLenum VERTEX_ARRAY_BINDING();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_BARRIER_BIT();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_BUFFER_BINDING();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_DIVISOR();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_ENABLED();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_INTEGER();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_LONG();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_NORMALIZED();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_POINTER();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_SIZE();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_STRIDE();
    EXPORT virtual GLenum VERTEX_ATTRIB_ARRAY_TYPE();
    EXPORT virtual GLenum VERTEX_ATTRIB_BINDING();
    EXPORT virtual GLenum VERTEX_ATTRIB_RELATIVE_OFFSET();
    EXPORT virtual GLenum VERTEX_BINDING_BUFFER();
    EXPORT virtual GLenum VERTEX_BINDING_DIVISOR();
    EXPORT virtual GLenum VERTEX_BINDING_OFFSET();
    EXPORT virtual GLenum VERTEX_BINDING_STRIDE();
    EXPORT virtual GLenum VERTEX_PROGRAM_POINT_SIZE();
    EXPORT virtual GLenum VERTEX_SHADER();
    EXPORT virtual GLenum VERTEX_SHADER_BIT();
    EXPORT virtual GLenum VERTEX_SHADER_INVOCATIONS();
    EXPORT virtual GLenum VERTEX_SUBROUTINE();
    EXPORT virtual GLenum VERTEX_SUBROUTINE_UNIFORM();
    EXPORT virtual GLenum VERTEX_TEXTURE();
    EXPORT virtual GLenum VERTICES_SUBMITTED();
    EXPORT virtual GLenum VIEWPORT();
    EXPORT virtual GLenum VIEWPORT_BOUNDS_RANGE();
    EXPORT virtual GLenum VIEWPORT_INDEX_PROVOKING_VERTEX();
    EXPORT virtual GLenum VIEWPORT_SUBPIXEL_BITS();
    EXPORT virtual GLenum VIEW_CLASS_128_BITS();
    EXPORT virtual GLenum VIEW_CLASS_16_BITS();
    EXPORT virtual GLenum VIEW_CLASS_24_BITS();
    EXPORT virtual GLenum VIEW_CLASS_32_BITS();
    EXPORT virtual GLenum VIEW_CLASS_48_BITS();
    EXPORT virtual GLenum VIEW_CLASS_64_BITS();
    EXPORT virtual GLenum VIEW_CLASS_8_BITS();
    EXPORT virtual GLenum VIEW_CLASS_96_BITS();
    EXPORT virtual GLenum VIEW_CLASS_BPTC_FLOAT();
    EXPORT virtual GLenum VIEW_CLASS_BPTC_UNORM();
    EXPORT virtual GLenum VIEW_CLASS_RGTC1_RED();
    EXPORT virtual GLenum VIEW_CLASS_RGTC2_RG();
    EXPORT virtual GLenum VIEW_CLASS_S3TC_DXT1_RGB();
    EXPORT virtual GLenum VIEW_CLASS_S3TC_DXT1_RGBA();
    EXPORT virtual GLenum VIEW_CLASS_S3TC_DXT3_RGBA();
    EXPORT virtual GLenum VIEW_CLASS_S3TC_DXT5_RGBA();
    EXPORT virtual GLenum VIEW_COMPATIBILITY_CLASS();
    EXPORT virtual GLenum WAIT_FAILED();
    EXPORT virtual GLenum WRITE_ONLY();
    EXPORT virtual GLenum XOR();
    EXPORT virtual GLenum ZERO();
    EXPORT virtual GLenum ZERO_TO_ONE();

    // EXPORT virtual void DebugMessageCallback(const GLDEBUGPROC& callback, const GLdata& userParam, const SrcLoc& src_loc = SrcLoc{}) = 0;
    // EXPORT virtual void GetUniformIndices(const GLuint& program, const GLsizei& uniformCount, const GLchar& *const* uniformNames, const GLuintArr& uniformIndices, const SrcLoc& src_loc = SrcLoc{}) = 0;
    // EXPORT virtual void TransformFeedbackVaryings(const GLuint& program, const GLsizei& count, const GLchar& *const* varyings, const GLenum& bufferMode, const SrcLoc& src_loc = SrcLoc{}) = 0;
 
protected:   
    const std::function<void(const SrcLoc&)> _debug;

};

}; // namespace GL 

} // namespace glwpp