#pragma once

#include "gl/Interface.hpp"
#include "utils/Export.hpp"

namespace glwpp {

namespace GL {

class InterfaceInner : public Interface {
public:
    InterfaceInner(Context& ctx, std::function<void(const SrcLoc&)> debug);
    ~InterfaceInner();

    EXPORT void ActiveShaderProgram(const GLuint& pipeline, const GLuint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ActiveTexture(const GLenum& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void AttachShader(const GLuint& program, const GLuint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BeginConditionalRender(const GLuint& id, const GLenum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BeginQuery(const GLenum& target, const GLuint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BeginQueryIndexed(const GLenum& target, const GLuint& index, const GLuint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BeginTransformFeedback(const GLenum& primitiveMode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindAttribLocation(const GLuint& program, const GLuint& index, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBuffer(const GLenum& target, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBufferBase(const GLenum& target, const GLuint& index, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBufferRange(const GLenum& target, const GLuint& index, const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBuffersBase(const GLenum& target, const GLuint& first, const GLsizei& count, const GLuintArr& buffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindBuffersRange(const GLenum& target, const GLuint& first, const GLsizei& count, const GLuintArr& buffers, const GLintptrArr& offsets, const GLsizeiptrArr& sizes, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindFragDataLocation(const GLuint& program, const GLuint& color, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindFragDataLocationIndexed(const GLuint& program, const GLuint& colorNumber, const GLuint& index, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindFramebuffer(const GLenum& target, const GLuint& framebuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindImageTexture(const GLuint& unit, const GLuint& texture, const GLint& level, const GLboolean& layered, const GLint& layer, const GLenum& access, const GLenum& format, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindImageTextures(const GLuint& first, const GLsizei& count, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindProgramPipeline(const GLuint& pipeline, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindRenderbuffer(const GLenum& target, const GLuint& renderbuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindSampler(const GLuint& unit, const GLuint& sampler, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindSamplers(const GLuint& first, const GLsizei& count, const GLuintArr& samplers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindTexture(const GLenum& target, const GLuint& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindTextureUnit(const GLuint& unit, const GLuint& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindTextures(const GLuint& first, const GLsizei& count, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindTransformFeedback(const GLenum& target, const GLuint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindVertexArray(const GLuint& array, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindVertexBuffer(const GLuint& bindingindex, const GLuint& buffer, const GLintptr& offset, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BindVertexBuffers(const GLuint& first, const GLsizei& count, const GLuintArr& buffers, const GLintptrArr& offsets, const GLsizeiArr& strides, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendColor(const GLfloat& red, const GLfloat& green, const GLfloat& blue, const GLfloat& alpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendEquation(const GLenum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendEquationSeparate(const GLenum& modeRGB, const GLenum& modeAlpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendEquationSeparatei(const GLuint& buf, const GLenum& modeRGB, const GLenum& modeAlpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendEquationi(const GLuint& buf, const GLenum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendFunc(const GLenum& sfactor, const GLenum& dfactor, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendFuncSeparate(const GLenum& sfactorRGB, const GLenum& dfactorRGB, const GLenum& sfactorAlpha, const GLenum& dfactorAlpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendFuncSeparatei(const GLuint& buf, const GLenum& srcRGB, const GLenum& dstRGB, const GLenum& srcAlpha, const GLenum& dstAlpha, const GLenum& modeAlpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlendFunci(const GLuint& buf, const GLenum& src, const GLenum& dst, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlitFramebuffer(const GLint& srcX0, const GLint& srcY0, const GLint& srcX1, const GLint& srcY1, const GLint& dstX0, const GLint& dstY0, const GLint& dstX1, const GLint& dstY1, const GLbitfield& mask, const GLenum& filter, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BlitNamedFramebuffer(const GLuint& readFramebuffer, const GLuint& drawFramebuffer, const GLint& srcX0, const GLint& srcY0, const GLint& srcX1, const GLint& srcY1, const GLint& dstX0, const GLint& dstY0, const GLint& dstX1, const GLint& dstY1, const GLbitfield& mask, const GLenum& filter, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BufferData(const GLenum& target, const GLsizeiptr& size, const GLdata& data, const GLenum& usage, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BufferStorage(const GLenum& target, const GLsizeiptr& size, const GLdata& data, const GLbitfield& flags, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void BufferSubData(const GLenum& target, const GLintptr& offset, const GLsizeiptr& size, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CheckFramebufferStatus(const GLenum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CheckNamedFramebufferStatus(const GLuint& framebuffer, const GLenum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClampColor(const GLenum& target, const GLenum& clamp, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Clear(const GLbitfield& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferData(const GLenum& target, const GLenum& internalformat, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferSubData(const GLenum& target, const GLenum& internalformat, const GLintptr& offset, const GLsizeiptr& size, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferfi(const GLenum& buffer, const GLint& drawbuffer, const GLfloat& depth, const GLint& stencil, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferfv(const GLenum& buffer, const GLint& drawbuffer, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferiv(const GLenum& buffer, const GLint& drawbuffer, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearBufferuiv(const GLenum& buffer, const GLint& drawbuffer, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearColor(const GLfloat& red, const GLfloat& green, const GLfloat& blue, const GLfloat& alpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearDepth(const GLdouble& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearDepthf(const GLfloat& d, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedBufferData(const GLuint& buffer, const GLenum& internalformat, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedBufferSubData(const GLuint& buffer, const GLenum& internalformat, const GLintptr& offset, const GLsizeiptr& size, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedFramebufferfi(const GLuint& framebuffer, const GLenum& buffer, const GLint& drawbuffer, const GLfloat& depth, const GLint& stencil, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedFramebufferfv(const GLuint& framebuffer, const GLenum& buffer, const GLint& drawbuffer, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedFramebufferiv(const GLuint& framebuffer, const GLenum& buffer, const GLint& drawbuffer, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearNamedFramebufferuiv(const GLuint& framebuffer, const GLenum& buffer, const GLint& drawbuffer, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearStencil(const GLint& s, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearTexImage(const GLuint& texture, const GLint& level, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClearTexSubImage(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLenum& type, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClientWaitSync(const GLsync& sync, const GLbitfield& flags, const GLuint64& timeout, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ClipControl(const GLenum& origin, const GLenum& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ColorMask(const GLboolean& red, const GLboolean& green, const GLboolean& blue, const GLboolean& alpha, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ColorMaski(const GLuint& index, const GLboolean& r, const GLboolean& g, const GLboolean& b, const GLboolean& a, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompileShader(const GLuint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexImage1D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLsizei& width, const GLint& border, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexImage2D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLint& border, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexImage3D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLint& border, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexSubImage1D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLsizei& width, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexSubImage2D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTexSubImage3D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTextureSubImage1D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLsizei& width, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTextureSubImage2D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CompressedTextureSubImage3D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLsizei& imageSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyBufferSubData(const GLenum& readTarget, const GLenum& writeTarget, const GLintptr& readOffset, const GLintptr& writeOffset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyImageSubData(const GLuint& srcName, const GLenum& srcTarget, const GLint& srcLevel, const GLint& srcX, const GLint& srcY, const GLint& srcZ, const GLuint& dstName, const GLenum& dstTarget, const GLint& dstLevel, const GLint& dstX, const GLint& dstY, const GLint& dstZ, const GLsizei& srcWidth, const GLsizei& srcHeight, const GLsizei& srcDepth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyNamedBufferSubData(const GLuint& readBuffer, const GLuint& writeBuffer, const GLintptr& readOffset, const GLintptr& writeOffset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexImage1D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLint& x, const GLint& y, const GLsizei& width, const GLint& border, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexImage2D(const GLenum& target, const GLint& level, const GLenum& internalformat, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const GLint& border, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexSubImage1D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& x, const GLint& y, const GLsizei& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexSubImage2D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTexSubImage3D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTextureSubImage1D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& x, const GLint& y, const GLsizei& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTextureSubImage2D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CopyTextureSubImage3D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateBuffers(const GLsizei& n, const GLuintArr& dst, const SrcLoc& src_loc = SrcLoc{});

    EXPORT void CreateFramebuffers(const GLsizei& n, const GLuintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLuintRes CreateProgram(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateProgramPipelines(const GLsizei& n, const GLuintArr& pipelines, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateQueries(const GLenum& target, const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateRenderbuffers(const GLsizei& n, const GLuintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateSamplers(const GLsizei& n, const GLuintArr& samplers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLuintRes CreateShader(const GLenum& type, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateTextures(const GLenum& target, const GLsizei& n, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateTransformFeedbacks(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CreateVertexArrays(const GLsizei& n, const GLuintArr& arrays, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void CullFace(const GLenum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DebugMessageControl(const GLenum& source, const GLenum& type, const GLenum& severity, const GLsizei& count, const GLuintArr& ids, const GLboolean& enabled, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DebugMessageInsert(const GLenum& source, const GLenum& type, const GLuint& id, const GLenum& severity, const GLsizei& length, const GLcharArr& buf, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteBuffers(const GLsizei& n, const GLuintArr& buffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteFramebuffers(const GLsizei& n, const GLuintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteProgramPipelines(const GLsizei& n, const GLuintArr& pipelines, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteQueries(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteRenderbuffers(const GLsizei& n, const GLuintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteSamplers(const GLsizei& count, const GLuintArr& samplers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteShader(const GLuint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteSync(const GLsync& sync, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteTextures(const GLsizei& n, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteTransformFeedbacks(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DeleteVertexArrays(const GLsizei& n, const GLuintArr& arrays, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthFunc(const GLenum& func, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthMask(const GLboolean& flag, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthRange(const GLdouble& n, const GLdouble& f, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthRangeArrayv(const GLuint& first, const GLsizei& count, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthRangeIndexed(const GLuint& index, const GLdouble& n, const GLdouble& f, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DepthRangef(const GLfloat& n, const GLfloat& f, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DetachShader(const GLuint& program, const GLuint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Disable(const GLenum& cap, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DisableVertexArrayAttrib(const GLuint& vaobj, const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DisableVertexAttribArray(const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Disablei(const GLenum& target, const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DispatchCompute(const GLuint& num_groups_x, const GLuint& num_groups_y, const GLuint& num_groups_z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DispatchComputeIndirect(const GLintptr& indirect, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawArrays(const GLenum& mode, const GLint& first, const GLsizei& count, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawArraysIndirect(const GLenum& mode, const GLdata& indirect, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawArraysInstanced(const GLenum& mode, const GLint& first, const GLsizei& count, const GLsizei& instancecount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawArraysInstancedBaseInstance(const GLenum& mode, const GLint& first, const GLsizei& count, const GLsizei& instancecount, const GLuint& baseinstance, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawBuffer(const GLenum& buf, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawBuffers(const GLsizei& n, const GLenumArr& bufs, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElements(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsBaseVertex(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLint& basevertex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsIndirect(const GLenum& mode, const GLenum& type, const GLdata& indirect, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsInstanced(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLsizei& instancecount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsInstancedBaseInstance(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLsizei& instancecount, const GLuint& baseinstance, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsInstancedBaseVertex(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLsizei& instancecount, const GLint& basevertex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawElementsInstancedBaseVertexBaseInstance(const GLenum& mode, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLsizei& instancecount, const GLint& basevertex, const GLuint& baseinstance, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawRangeElements(const GLenum& mode, const GLuint& start, const GLuint& end, const GLsizei& count, const GLenum& type, const GLdata& indices, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawRangeElementsBaseVertex(const GLenum& mode, const GLuint& start, const GLuint& end, const GLsizei& count, const GLenum& type, const GLdata& indices, const GLint& basevertex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawTransformFeedback(const GLenum& mode, const GLuint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawTransformFeedbackInstanced(const GLenum& mode, const GLuint& id, const GLsizei& instancecount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawTransformFeedbackStream(const GLenum& mode, const GLuint& id, const GLuint& stream, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void DrawTransformFeedbackStreamInstanced(const GLenum& mode, const GLuint& id, const GLuint& stream, const GLsizei& instancecount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Enable(const GLenum& cap, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EnableVertexArrayAttrib(const GLuint& vaobj, const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EnableVertexAttribArray(const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Enablei(const GLenum& target, const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EndConditionalRender(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EndQuery(const GLenum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EndQueryIndexed(const GLenum& target, const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void EndTransformFeedback(const SrcLoc& src_loc = SrcLoc{});
    EXPORT const GLsyncRes& FenceSync(const GLenum& condition, const GLbitfield& flags, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Finish(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Flush(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FlushMappedBufferRange(const GLenum& target, const GLintptr& offset, const GLsizeiptr& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FlushMappedNamedBufferRange(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferParameteri(const GLenum& target, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferRenderbuffer(const GLenum& target, const GLenum& attachment, const GLenum& renderbuffertarget, const GLuint& renderbuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTexture(const GLenum& target, const GLenum& attachment, const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTexture1D(const GLenum& target, const GLenum& attachment, const GLenum& textarget, const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTexture2D(const GLenum& target, const GLenum& attachment, const GLenum& textarget, const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTexture3D(const GLenum& target, const GLenum& attachment, const GLenum& textarget, const GLuint& texture, const GLint& level, const GLint& zoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FramebufferTextureLayer(const GLenum& target, const GLenum& attachment, const GLuint& texture, const GLint& level, const GLint& layer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void FrontFace(const GLenum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenBuffers(const GLsizei& n, const GLuintArr& buffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenFramebuffers(const GLsizei& n, const GLuintArr& framebuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenProgramPipelines(const GLsizei& n, const GLuintArr& pipelines, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenQueries(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenRenderbuffers(const GLsizei& n, const GLuintArr& renderbuffers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenSamplers(const GLsizei& count, const GLuintArr& samplers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenTextures(const GLsizei& n, const GLuintArr& textures, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenTransformFeedbacks(const GLsizei& n, const GLuintArr& ids, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenVertexArrays(const GLsizei& n, const GLuintArr& arrays, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenerateMipmap(const GLenum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GenerateTextureMipmap(const GLuint& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveAtomicCounterBufferiv(const GLuint& program, const GLuint& bufferIndex, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveAttrib(const GLuint& program, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLint& size, const GLenum& type, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveSubroutineName(const GLuint& program, const GLenum& shadertype, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveSubroutineUniformName(const GLuint& program, const GLenum& shadertype, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveSubroutineUniformiv(const GLuint& program, const GLenum& shadertype, const GLuint& index, const GLenum& pname, const GLintArr& values, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniform(const GLuint& program, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLint& size, const GLenum& type, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniformBlockName(const GLuint& program, const GLuint& uniformBlockIndex, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& uniformBlockName, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniformBlockiv(const GLuint& program, const GLuint& uniformBlockIndex, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniformName(const GLuint& program, const GLuint& uniformIndex, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& uniformName, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetActiveUniformsiv(const GLuint& program, const GLsizei& uniformCount, const GLuintArr& uniformIndices, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetAttachedShaders(const GLuint& program, const GLsizei& maxCount, const GLsizeiArr& count, const GLuintArr& shaders, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLint GetAttribLocation(const GLuint& program, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBooleani_v(const GLenum& target, const GLuint& index, const GLbooleanArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBooleanv(const GLenum& pname, const GLbooleanArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBufferParameteri64v(const GLenum& target, const GLenum& pname, const GLint64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBufferParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBufferPointerv(const GLenum& target, const GLenum& pname, const GLdataPtr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetBufferSubData(const GLenum& target, const GLintptr& offset, const GLsizeiptr& size, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetCompressedTexImage(const GLenum& target, const GLint& level, const GLdata& img, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetCompressedTextureImage(const GLuint& texture, const GLint& level, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetCompressedTextureSubImage(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLuintRes GetDebugMessageLog(const GLuint& count, const GLsizei& bufSize, const GLenumArr& sources, const GLenumArr& types, const GLuintArr& ids, const GLenumArr& severities, const GLsizei& lengths, const GLcharArr& messageLog, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetDoublei_v(const GLenum& target, const GLuint& index, const GLdoubleArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetDoublev(const GLenum& pname, const GLdoubleArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT const GLenumRes& GetError(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetFloati_v(const GLenum& target, const GLuint& index, const GLfloatArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetFloatv(const GLenum& pname, const GLfloatArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLint GetFragDataIndex(const GLuint& program, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLint GetFragDataLocation(const GLuint& program, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetFramebufferAttachmentParameteriv(const GLenum& target, const GLenum& attachment, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetFramebufferParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT const GLenumRes& GetGraphicsResetStatus(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetInteger64i_v(const GLenum& target, const GLuint& index, const GLint64Arr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetInteger64v(const GLenum& pname, const GLint64Arr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetIntegeri_v(const GLenum& target, const GLuint& index, const GLintArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetIntegerv(const GLenum& pname, const GLintArr& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetInternalformati64v(const GLenum& target, const GLenum& internalformat, const GLenum& pname, const GLsizei& count, const GLint64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetInternalformativ(const GLenum& target, const GLenum& internalformat, const GLenum& pname, const GLsizei& count, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetMultisamplefv(const GLenum& pname, const GLuint& index, const GLfloatArr& val, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedBufferParameteri64v(const GLuint& buffer, const GLenum& pname, const GLint64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedBufferParameteriv(const GLuint& buffer, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedBufferPointerv(const GLuint& buffer, const GLenum& pname, const GLdataPtr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedBufferSubData(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedFramebufferAttachmentParameteriv(const GLuint& framebuffer, const GLenum& attachment, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedFramebufferParameteriv(const GLuint& framebuffer, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetNamedRenderbufferParameteriv(const GLuint& renderbuffer, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetObjectLabel(const GLenum& identifier, const GLuint& name, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& label, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetObjectPtrLabel(const GLdata& ptr, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& label, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetPointerv(const GLenum& pname, const GLdataPtr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramBinary(const GLuint& program, const GLsizei& bufSize, const GLsizei& length, const GLenumArr& binaryFormat, const GLdata& binary, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramInfoLog(const GLuint& program, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& infoLog, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramInterfaceiv(const GLuint& program, const GLenum& programInterface, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramPipelineInfoLog(const GLuint& pipeline, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& infoLog, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramPipelineiv(const GLuint& pipeline, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLuintRes GetProgramResourceIndex(const GLuint& program, const GLenum& programInterface, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLint GetProgramResourceLocation(const GLuint& program, const GLenum& programInterface, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLint GetProgramResourceLocationIndex(const GLuint& program, const GLenum& programInterface, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramResourceName(const GLuint& program, const GLenum& programInterface, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramResourceiv(const GLuint& program, const GLenum& programInterface, const GLuint& index, const GLsizei& propCount, const GLenumArr& props, const GLsizei& count, const GLsizei& length, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramStageiv(const GLuint& program, const GLenum& shadertype, const GLenum& pname, const GLintArr& values, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetProgramiv(const GLuint& program, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryBufferObjecti64v(const GLuint& id, const GLuint& buffer, const GLenum& pname, const GLintptr& offset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryBufferObjectiv(const GLuint& id, const GLuint& buffer, const GLenum& pname, const GLintptr& offset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryBufferObjectui64v(const GLuint& id, const GLuint& buffer, const GLenum& pname, const GLintptr& offset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryBufferObjectuiv(const GLuint& id, const GLuint& buffer, const GLenum& pname, const GLintptr& offset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryIndexediv(const GLenum& target, const GLuint& index, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryObjecti64v(const GLuint& id, const GLenum& pname, const GLint64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryObjectiv(const GLuint& id, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryObjectui64v(const GLuint& id, const GLenum& pname, const GLuint64Arr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryObjectuiv(const GLuint& id, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetQueryiv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetRenderbufferParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSamplerParameterIiv(const GLuint& sampler, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSamplerParameterIuiv(const GLuint& sampler, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSamplerParameterfv(const GLuint& sampler, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSamplerParameteriv(const GLuint& sampler, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetShaderInfoLog(const GLuint& shader, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& infoLog, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetShaderPrecisionFormat(const GLenum& shadertype, const GLenum& precisiontype, const GLintArr& range, const GLintArr& precision, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetShaderSource(const GLuint& shader, const GLsizei& bufSize, const GLsizei& length, const GLcharArr& source, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetShaderiv(const GLuint& shader, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT const GLubyteArrRes& GetString(const GLenum& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT const GLubyteArrRes& GetStringi(const GLenum& name, const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLuintRes GetSubroutineIndex(const GLuint& program, const GLenum& shadertype, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLint GetSubroutineUniformLocation(const GLuint& program, const GLenum& shadertype, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetSynciv(const GLsync& sync, const GLenum& pname, const GLsizei& count, const GLsizei& length, const GLintArr& values, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexImage(const GLenum& target, const GLint& level, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexLevelParameterfv(const GLenum& target, const GLint& level, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexLevelParameteriv(const GLenum& target, const GLint& level, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexParameterIiv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexParameterIuiv(const GLenum& target, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexParameterfv(const GLenum& target, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTexParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureImage(const GLuint& texture, const GLint& level, const GLenum& format, const GLenum& type, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureLevelParameterfv(const GLuint& texture, const GLint& level, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureLevelParameteriv(const GLuint& texture, const GLint& level, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureParameterIiv(const GLuint& texture, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureParameterIuiv(const GLuint& texture, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureParameterfv(const GLuint& texture, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureParameteriv(const GLuint& texture, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTextureSubImage(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLenum& type, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTransformFeedbackVarying(const GLuint& program, const GLuint& index, const GLsizei& bufSize, const GLsizei& length, const GLsizeiArr& size, const GLenumArr& type, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTransformFeedbacki64_v(const GLuint& xfb, const GLenum& pname, const GLuint& index, const GLint64Arr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTransformFeedbacki_v(const GLuint& xfb, const GLenum& pname, const GLuint& index, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetTransformFeedbackiv(const GLuint& xfb, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLuint GetUniformBlockIndex(const GLuint& program, const GLcharArr& uniformBlockName, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLint GetUniformLocation(const GLuint& program, const GLcharArr& name, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformSubroutineuiv(const GLenum& shadertype, const GLint& location, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformdv(const GLuint& program, const GLint& location, const GLdoubleArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformfv(const GLuint& program, const GLint& location, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformiv(const GLuint& program, const GLint& location, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetUniformuiv(const GLuint& program, const GLint& location, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexArrayIndexed64iv(const GLuint& vaobj, const GLuint& index, const GLenum& pname, const GLint64Arr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexArrayIndexediv(const GLuint& vaobj, const GLuint& index, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexArrayiv(const GLuint& vaobj, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribIiv(const GLuint& index, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribIuiv(const GLuint& index, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribLdv(const GLuint& index, const GLenum& pname, const GLdoubleArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribPointerv(const GLuint& index, const GLenum& pname, const GLdataPtr& pointer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribdv(const GLuint& index, const GLenum& pname, const GLdoubleArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribfv(const GLuint& index, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetVertexAttribiv(const GLuint& index, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnCompressedTexImage(const GLenum& target, const GLint& lod, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnTexImage(const GLenum& target, const GLint& level, const GLenum& format, const GLenum& type, const GLsizei& bufSize, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnUniformdv(const GLuint& program, const GLint& location, const GLsizei& bufSize, const GLdoubleArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnUniformfv(const GLuint& program, const GLint& location, const GLsizei& bufSize, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnUniformiv(const GLuint& program, const GLint& location, const GLsizei& bufSize, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void GetnUniformuiv(const GLuint& program, const GLint& location, const GLsizei& bufSize, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Hint(const GLenum& target, const GLenum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateBufferData(const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateBufferSubData(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateFramebuffer(const GLenum& target, const GLsizei& numAttachments, const GLenumArr& attachments, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateNamedFramebufferData(const GLuint& framebuffer, const GLsizei& numAttachments, const GLenumArr& attachments, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateNamedFramebufferSubData(const GLuint& framebuffer, const GLsizei& numAttachments, const GLenumArr& attachments, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateSubFramebuffer(const GLenum& target, const GLsizei& numAttachments, const GLenumArr& attachments, const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateTexImage(const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void InvalidateTexSubImage(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsBuffer(const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsEnabled(const GLenum& cap, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsEnabledi(const GLenum& target, const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsFramebuffer(const GLuint& framebuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsProgramPipeline(const GLuint& pipeline, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsQuery(const GLuint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsRenderbuffer(const GLuint& renderbuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsSampler(const GLuint& sampler, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsShader(const GLuint& shader, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsSync(const GLsync& sync, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsTexture(const GLuint& texture, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsTransformFeedback(const GLuint& id, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean IsVertexArray(const GLuint& array, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void LineWidth(const GLfloat& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void LinkProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void LogicOp(const GLenum& opcode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MemoryBarrier(const GLbitfield& barriers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MemoryBarrierByRegion(const GLbitfield& barriers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MinSampleShading(const GLfloat& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawArrays(const GLenum& mode, const GLintArr& first, const GLsizeiArr& count, const GLsizei& drawcount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawArraysIndirect(const GLenum& mode, const GLdata& indirect, const GLsizei& drawcount, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawArraysIndirectCount(const GLenum& mode, const GLdata& indirect, const GLintptr& drawcount, const GLsizei& maxdrawcount, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawElements(const GLenum& mode, const GLsizeiArr& count, const GLenum& type, const GLdataPtr& indices, const GLsizei& drawcount, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawElementsBaseVertex(const GLenum& mode, const GLsizeiArr& count, const GLenum& type, const GLdataPtr& indices, const GLsizei& drawcount, const GLintArr& basevertex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawElementsIndirect(const GLenum& mode, const GLenum& type, const GLdata& indirect, const GLsizei& drawcount, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void MultiDrawElementsIndirectCount(const GLenum& mode, const GLenum& type, const GLdata& indirect, const GLintptr& drawcount, const GLsizei& maxdrawcount, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedBufferData(const GLuint& buffer, const GLsizeiptr& size, const GLdata& data, const GLenum& usage, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedBufferStorage(const GLuint& buffer, const GLsizeiptr& size, const GLdata& data, const GLbitfield& flags, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedBufferSubData(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferDrawBuffer(const GLuint& framebuffer, const GLenum& buf, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferDrawBuffers(const GLuint& framebuffer, const GLsizei& n, const GLenumArr& bufs, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferParameteri(const GLuint& framebuffer, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferReadBuffer(const GLuint& framebuffer, const GLenum& src, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferRenderbuffer(const GLuint& framebuffer, const GLenum& attachment, const GLenum& renderbuffertarget, const GLuint& renderbuffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferTexture(const GLuint& framebuffer, const GLenum& attachment, const GLuint& texture, const GLint& level, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedFramebufferTextureLayer(const GLuint& framebuffer, const GLenum& attachment, const GLuint& texture, const GLint& level, const GLint& layer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedRenderbufferStorage(const GLuint& renderbuffer, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void NamedRenderbufferStorageMultisample(const GLuint& renderbuffer, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ObjectLabel(const GLenum& identifier, const GLuint& name, const GLsizei& length, const GLcharArr& label, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ObjectPtrLabel(const GLdata& ptr, const GLsizei& length, const GLcharArr& label, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PatchParameterfv(const GLenum& pname, const GLfloatArr& values, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PatchParameteri(const GLenum& pname, const GLint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PauseTransformFeedback(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PixelStoref(const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PixelStorei(const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointParameterf(const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointParameterfv(const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointParameteri(const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointParameteriv(const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PointSize(const GLfloat& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PolygonMode(const GLenum& face, const GLenum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PolygonOffset(const GLfloat& factor, const GLfloat& units, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PolygonOffsetClamp(const GLfloat& factor, const GLfloat& units, const GLfloat& clamp, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PopDebugGroup(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PrimitiveRestartIndex(const GLuint& index, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramBinary(const GLuint& program, const GLenum& binaryFormat, const GLdata& binary, const GLsizei& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramParameteri(const GLuint& program, const GLenum& pname, const GLint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1d(const GLuint& program, const GLint& location, const GLdouble& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1f(const GLuint& program, const GLint& location, const GLfloat& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1i(const GLuint& program, const GLint& location, const GLint& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1iv(const GLuint& program, const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1ui(const GLuint& program, const GLint& location, const GLuint& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform1uiv(const GLuint& program, const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2d(const GLuint& program, const GLint& location, const GLdouble& v0, const GLdouble& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2f(const GLuint& program, const GLint& location, const GLfloat& v0, const GLfloat& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2i(const GLuint& program, const GLint& location, const GLint& v0, const GLint& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2iv(const GLuint& program, const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2ui(const GLuint& program, const GLint& location, const GLuint& v0, const GLuint& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform2uiv(const GLuint& program, const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3d(const GLuint& program, const GLint& location, const GLdouble& v0, const GLdouble& v1, const GLdouble& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3f(const GLuint& program, const GLint& location, const GLfloat& v0, const GLfloat& v1, const GLfloat& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3i(const GLuint& program, const GLint& location, const GLint& v0, const GLint& v1, const GLint& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3iv(const GLuint& program, const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3ui(const GLuint& program, const GLint& location, const GLuint& v0, const GLuint& v1, const GLuint& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform3uiv(const GLuint& program, const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4d(const GLuint& program, const GLint& location, const GLdouble& v0, const GLdouble& v1, const GLdouble& v2, const GLdouble& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4f(const GLuint& program, const GLint& location, const GLfloat& v0, const GLfloat& v1, const GLfloat& v2, const GLfloat& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4i(const GLuint& program, const GLint& location, const GLint& v0, const GLint& v1, const GLint& v2, const GLint& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4iv(const GLuint& program, const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4ui(const GLuint& program, const GLint& location, const GLuint& v0, const GLuint& v1, const GLuint& v2, const GLuint& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniform4uiv(const GLuint& program, const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2x3dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2x3fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2x4dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix2x4fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3x2dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3x2fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3x4dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix3x4fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4x2dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4x2fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4x3dv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProgramUniformMatrix4x3fv(const GLuint& program, const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ProvokingVertex(const GLenum& mode, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void PushDebugGroup(const GLenum& source, const GLuint& id, const GLsizei& length, const GLcharArr& message, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void QueryCounter(const GLuint& id, const GLenum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ReadBuffer(const GLenum& src, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ReadPixels(const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ReadnPixels(const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLenum& type, const GLsizei& bufSize, const GLdata& data, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ReleaseShaderCompiler(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void RenderbufferStorage(const GLenum& target, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void RenderbufferStorageMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ResumeTransformFeedback(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SampleCoverage(const GLfloat& value, const GLboolean& invert, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SampleMaski(const GLuint& maskNumber, const GLbitfield& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameterIiv(const GLuint& sampler, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameterIuiv(const GLuint& sampler, const GLenum& pname, const GLuintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameterf(const GLuint& sampler, const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameterfv(const GLuint& sampler, const GLenum& pname, const GLfloatArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameteri(const GLuint& sampler, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SamplerParameteriv(const GLuint& sampler, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Scissor(const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ScissorArrayv(const GLuint& first, const GLsizei& count, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ScissorIndexed(const GLuint& index, const GLint& left, const GLint& bottom, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ScissorIndexedv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ShaderBinary(const GLsizei& count, const GLuintArr& shaders, const GLenum& binaryFormat, const GLdata& binary, const GLsizei& length, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ShaderStorageBlockBinding(const GLuint& program, const GLuint& storageBlockIndex, const GLuint& storageBlockBinding, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void SpecializeShader(const GLuint& shader, const GLcharArr& pEntryPoint, const GLuint& numSpecializationConstants, const GLuintArr& pConstantIndex, const GLuintArr& pConstantValue, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilFunc(const GLenum& func, const GLint& ref, const GLuint& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilFuncSeparate(const GLenum& face, const GLenum& func, const GLint& ref, const GLuint& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilMask(const GLuint& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilMaskSeparate(const GLenum& face, const GLuint& mask, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilOp(const GLenum& fail, const GLenum& zfail, const GLenum& zpass, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void StencilOpSeparate(const GLenum& face, const GLenum& sfail, const GLenum& dpfail, const GLenum& dppass, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexBuffer(const GLenum& target, const GLenum& internalformat, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexBufferRange(const GLenum& target, const GLenum& internalformat, const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage1D(const GLenum& target, const GLint& level, const GLint& internalformat, const GLsizei& width, const GLint& border, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage2D(const GLenum& target, const GLint& level, const GLint& internalformat, const GLsizei& width, const GLsizei& height, const GLint& border, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage2DMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage3D(const GLenum& target, const GLint& level, const GLint& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLint& border, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexImage3DMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameterIiv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameterIuiv(const GLenum& target, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameterf(const GLenum& target, const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameterfv(const GLenum& target, const GLenum& pname, const GLfloatArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameteri(const GLenum& target, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexParameteriv(const GLenum& target, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage1D(const GLenum& target, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage2D(const GLenum& target, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage2DMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage3D(const GLenum& target, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexStorage3DMultisample(const GLenum& target, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexSubImage1D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLsizei& width, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexSubImage2D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TexSubImage3D(const GLenum& target, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureBarrier(const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureBuffer(const GLuint& texture, const GLenum& internalformat, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureBufferRange(const GLuint& texture, const GLenum& internalformat, const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameterIiv(const GLuint& texture, const GLenum& pname, const GLintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameterIuiv(const GLuint& texture, const GLenum& pname, const GLuintArr& params, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameterf(const GLuint& texture, const GLenum& pname, const GLfloat& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameterfv(const GLuint& texture, const GLenum& pname, const GLfloatArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameteri(const GLuint& texture, const GLenum& pname, const GLint& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureParameteriv(const GLuint& texture, const GLenum& pname, const GLintArr& param, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage1D(const GLuint& texture, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage2D(const GLuint& texture, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage2DMultisample(const GLuint& texture, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage3D(const GLuint& texture, const GLsizei& levels, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureStorage3DMultisample(const GLuint& texture, const GLsizei& samples, const GLenum& internalformat, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLboolean& fixedsamplelocations, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureSubImage1D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLsizei& width, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureSubImage2D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLsizei& width, const GLsizei& height, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureSubImage3D(const GLuint& texture, const GLint& level, const GLint& xoffset, const GLint& yoffset, const GLint& zoffset, const GLsizei& width, const GLsizei& height, const GLsizei& depth, const GLenum& format, const GLenum& type, const GLdata& pixels, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TextureView(const GLuint& texture, const GLenum& target, const GLuint& origtexture, const GLenum& internalformat, const GLuint& minlevel, const GLuint& numlevels, const GLuint& minlayer, const GLuint& numlayers, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TransformFeedbackBufferBase(const GLuint& xfb, const GLuint& index, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void TransformFeedbackBufferRange(const GLuint& xfb, const GLuint& index, const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& size, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1d(const GLint& location, const GLdouble& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1dv(const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1f(const GLint& location, const GLfloat& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1fv(const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1i(const GLint& location, const GLint& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1iv(const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1ui(const GLint& location, const GLuint& v0, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform1uiv(const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2d(const GLint& location, const GLdouble& x, const GLdouble& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2dv(const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2f(const GLint& location, const GLfloat& v0, const GLfloat& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2fv(const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2i(const GLint& location, const GLint& v0, const GLint& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2iv(const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2ui(const GLint& location, const GLuint& v0, const GLuint& v1, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform2uiv(const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3d(const GLint& location, const GLdouble& x, const GLdouble& y, const GLdouble& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3dv(const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3f(const GLint& location, const GLfloat& v0, const GLfloat& v1, const GLfloat& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3fv(const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3i(const GLint& location, const GLint& v0, const GLint& v1, const GLint& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3iv(const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3ui(const GLint& location, const GLuint& v0, const GLuint& v1, const GLuint& v2, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform3uiv(const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4d(const GLint& location, const GLdouble& x, const GLdouble& y, const GLdouble& z, const GLdouble& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4dv(const GLint& location, const GLsizei& count, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4f(const GLint& location, const GLfloat& v0, const GLfloat& v1, const GLfloat& v2, const GLfloat& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4fv(const GLint& location, const GLsizei& count, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4i(const GLint& location, const GLint& v0, const GLint& v1, const GLint& v2, const GLint& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4iv(const GLint& location, const GLsizei& count, const GLintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4ui(const GLint& location, const GLuint& v0, const GLuint& v1, const GLuint& v2, const GLuint& v3, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Uniform4uiv(const GLint& location, const GLsizei& count, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformBlockBinding(const GLuint& program, const GLuint& uniformBlockIndex, const GLuint& uniformBlockBinding, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2x3dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2x3fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2x4dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix2x4fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3x2dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3x2fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3x4dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix3x4fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4x2dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4x2fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4x3dv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLdoubleArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformMatrix4x3fv(const GLint& location, const GLsizei& count, const GLboolean& transpose, const GLfloatArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UniformSubroutinesuiv(const GLenum& shadertype, const GLsizei& count, const GLuintArr& indices, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean UnmapBuffer(const GLenum& target, const SrcLoc& src_loc = SrcLoc{});
    EXPORT GLboolean UnmapNamedBuffer(const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UseProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void UseProgramStages(const GLuint& pipeline, const GLbitfield& stages, const GLuint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ValidateProgram(const GLuint& program, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ValidateProgramPipeline(const GLuint& pipeline, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayAttribBinding(const GLuint& vaobj, const GLuint& attribindex, const GLuint& bindingindex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayAttribFormat(const GLuint& vaobj, const GLuint& attribindex, const GLint& size, const GLenum& type, const GLboolean& normalized, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayAttribIFormat(const GLuint& vaobj, const GLuint& attribindex, const GLint& size, const GLenum& type, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayAttribLFormat(const GLuint& vaobj, const GLuint& attribindex, const GLint& size, const GLenum& type, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayBindingDivisor(const GLuint& vaobj, const GLuint& bindingindex, const GLuint& divisor, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayElementBuffer(const GLuint& vaobj, const GLuint& buffer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayVertexBuffer(const GLuint& vaobj, const GLuint& bindingindex, const GLuint& buffer, const GLintptr& offset, const GLsizei& stride, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexArrayVertexBuffers(const GLuint& vaobj, const GLuint& first, const GLsizei& count, const GLuintArr& buffers, const GLintptrArr& offsets, const GLsizeiArr& strides, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1d(const GLuint& index, const GLdouble& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1f(const GLuint& index, const GLfloat& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1fv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1s(const GLuint& index, const GLshort& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib1sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2d(const GLuint& index, const GLdouble& x, const GLdouble& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2f(const GLuint& index, const GLfloat& x, const GLfloat& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2fv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2s(const GLuint& index, const GLshort& x, const GLshort& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib2sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3d(const GLuint& index, const GLdouble& x, const GLdouble& y, const GLdouble& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3f(const GLuint& index, const GLfloat& x, const GLfloat& y, const GLfloat& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3fv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3s(const GLuint& index, const GLshort& x, const GLshort& y, const GLshort& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib3sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nbv(const GLuint& index, const GLbyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Niv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nsv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nub(const GLuint& index, const GLubyte& x, const GLubyte& y, const GLubyte& z, const GLubyte& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nubv(const GLuint& index, const GLubyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nuiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4Nusv(const GLuint& index, const GLushort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4bv(const GLuint& index, const GLbyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4d(const GLuint& index, const GLdouble& x, const GLdouble& y, const GLdouble& z, const GLdouble& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4f(const GLuint& index, const GLfloat& x, const GLfloat& y, const GLfloat& z, const GLfloat& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4fv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4s(const GLuint& index, const GLshort& x, const GLshort& y, const GLshort& z, const GLshort& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4ubv(const GLuint& index, const GLubyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttrib4usv(const GLuint& index, const GLushort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribBinding(const GLuint& attribindex, const GLuint& bindingindex, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribDivisor(const GLuint& index, const GLuint& divisor, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribFormat(const GLuint& attribindex, const GLint& size, const GLenum& type, const GLboolean& normalized, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI1i(const GLuint& index, const GLint& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI1iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI1ui(const GLuint& index, const GLuint& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI1uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI2i(const GLuint& index, const GLint& x, const GLint& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI2iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI2ui(const GLuint& index, const GLuint& x, const GLuint& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI2uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI3i(const GLuint& index, const GLint& x, const GLint& y, const GLint& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI3iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI3ui(const GLuint& index, const GLuint& x, const GLuint& y, const GLuint& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI3uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4bv(const GLuint& index, const GLbyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4i(const GLuint& index, const GLint& x, const GLint& y, const GLint& z, const GLint& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4iv(const GLuint& index, const GLintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4sv(const GLuint& index, const GLshort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4ubv(const GLuint& index, const GLubyte& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4ui(const GLuint& index, const GLuint& x, const GLuint& y, const GLuint& z, const GLuint& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4uiv(const GLuint& index, const GLuintArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribI4usv(const GLuint& index, const GLushort& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribIFormat(const GLuint& attribindex, const GLint& size, const GLenum& type, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribIPointer(const GLuint& index, const GLint& size, const GLenum& type, const GLsizei& stride, const GLdata& pointer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL1d(const GLuint& index, const GLdouble& x, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL1dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL2d(const GLuint& index, const GLdouble& x, const GLdouble& y, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL2dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL3d(const GLuint& index, const GLdouble& x, const GLdouble& y, const GLdouble& z, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL3dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL4d(const GLuint& index, const GLdouble& x, const GLdouble& y, const GLdouble& z, const GLdouble& w, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribL4dv(const GLuint& index, const GLdoubleArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribLFormat(const GLuint& attribindex, const GLint& size, const GLenum& type, const GLuint& relativeoffset, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribLPointer(const GLuint& index, const GLint& size, const GLenum& type, const GLsizei& stride, const GLdata& pointer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP1ui(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP1uiv(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP2ui(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP2uiv(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP3ui(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP3uiv(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP4ui(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuint& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribP4uiv(const GLuint& index, const GLenum& type, const GLboolean& normalized, const GLuintArr& value, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexAttribPointer(const GLuint& index, const GLint& size, const GLenum& type, const GLboolean& normalized, const GLsizei& stride, const GLdata& pointer, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void VertexBindingDivisor(const GLuint& bindingindex, const GLuint& divisor, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void Viewport(const GLint& x, const GLint& y, const GLsizei& width, const GLsizei& height, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ViewportArrayv(const GLuint& first, const GLsizei& count, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ViewportIndexedf(const GLuint& index, const GLfloat& x, const GLfloat& y, const GLfloat& w, const GLfloat& h, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void ViewportIndexedfv(const GLuint& index, const GLfloatArr& v, const SrcLoc& src_loc = SrcLoc{});
    EXPORT void WaitSync(const GLsync& sync, const GLbitfield& flags, const GLuint64& timeout, const SrcLoc& src_loc = SrcLoc{});


    // EXPORT GLuintRes CreateShaderProgramv(const GLenum& type, const GLsizei& count, const GLchar& *const* strings, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void DebugMessageCallback(const GLDEBUGPROC& callback, const GLdata& userParam, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void GetUniformIndices(const GLuint& program, const GLsizei& uniformCount, const GLchar& *const* uniformNames, const GLuintArr& uniformIndices, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void ShaderSource(const GLuint& shader, const GLsizei& count, const GLchar& *const* string, const GLintArr& length, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void TransformFeedbackVaryings(const GLuint& program, const GLsizei& count, const GLchar& *const* varyings, const GLenum& bufferMode, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void* MapBuffer(const GLenum& target, const GLenum& access, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void* MapBufferRange(const GLenum& target, const GLintptr& offset, const GLsizeiptr& length, const GLbitfield& access, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void* MapNamedBuffer(const GLuint& buffer, const GLenum& access, const SrcLoc& src_loc = SrcLoc{});
    // EXPORT void* MapNamedBufferRange(const GLuint& buffer, const GLintptr& offset, const GLsizeiptr& length, const GLbitfield& access, const SrcLoc& src_loc = SrcLoc{});

};

} // namespace GL

} // namespace glwpp