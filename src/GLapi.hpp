#pragma once

#include <functional>

#include "glad/gl.h"

#include "utils/Export.hpp"
#include "utils/SrcLoc.hpp"

namespace glwpp {

class GLapi {
private:
    std::unique_ptr<GladGLContext> _glad_context;

public:
    EXPORT void Accum(GLenum op, GLfloat value, const SrcLoc& src_loc);
    EXPORT void ActiveShaderProgram(GLuint pipeline, GLuint program, const SrcLoc& src_loc);
    EXPORT void ActiveTexture(GLenum texture, const SrcLoc& src_loc);
    EXPORT void AlphaFunc(GLenum func, GLfloat ref, const SrcLoc& src_loc);
    EXPORT GLboolean AreTexturesResident(GLsizei n, const GLuint * textures, GLboolean * residences, const SrcLoc& src_loc);
    EXPORT void ArrayElement(GLint i, const SrcLoc& src_loc);
    EXPORT void AttachShader(GLuint program, GLuint shader, const SrcLoc& src_loc);
    EXPORT void Begin(GLenum mode, const SrcLoc& src_loc);
    EXPORT void BeginConditionalRender(GLuint id, GLenum mode, const SrcLoc& src_loc);
    EXPORT void BeginQuery(GLenum target, GLuint id, const SrcLoc& src_loc);
    EXPORT void BeginQueryIndexed(GLenum target, GLuint index, GLuint id, const SrcLoc& src_loc);
    EXPORT void BeginTransformFeedback(GLenum primitiveMode, const SrcLoc& src_loc);
    EXPORT void BindAttribLocation(GLuint program, GLuint index, const GLchar * name, const SrcLoc& src_loc);
    EXPORT void BindBuffer(GLenum target, GLuint buffer, const SrcLoc& src_loc);
    EXPORT void BindBufferBase(GLenum target, GLuint index, GLuint buffer, const SrcLoc& src_loc);
    EXPORT void BindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size, const SrcLoc& src_loc);
    EXPORT void BindBuffersBase(GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const SrcLoc& src_loc);
    EXPORT void BindBuffersRange(GLenum target, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizeiptr * sizes, const SrcLoc& src_loc);
    EXPORT void BindFragDataLocation(GLuint program, GLuint color, const GLchar * name, const SrcLoc& src_loc);
    EXPORT void BindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar * name, const SrcLoc& src_loc);
    EXPORT void BindFramebuffer(GLenum target, GLuint framebuffer, const SrcLoc& src_loc);
    EXPORT void BindImageTexture(GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format, const SrcLoc& src_loc);
    EXPORT void BindImageTextures(GLuint first, GLsizei count, const GLuint * textures, const SrcLoc& src_loc);
    EXPORT void BindProgramPipeline(GLuint pipeline, const SrcLoc& src_loc);
    EXPORT void BindRenderbuffer(GLenum target, GLuint renderbuffer, const SrcLoc& src_loc);
    EXPORT void BindSampler(GLuint unit, GLuint sampler, const SrcLoc& src_loc);
    EXPORT void BindSamplers(GLuint first, GLsizei count, const GLuint * samplers, const SrcLoc& src_loc);
    EXPORT void BindTexture(GLenum target, GLuint texture, const SrcLoc& src_loc);
    EXPORT void BindTextureUnit(GLuint unit, GLuint texture, const SrcLoc& src_loc);
    EXPORT void BindTextures(GLuint first, GLsizei count, const GLuint * textures, const SrcLoc& src_loc);
    EXPORT void BindTransformFeedback(GLenum target, GLuint id, const SrcLoc& src_loc);
    EXPORT void BindVertexArray(GLuint array, const SrcLoc& src_loc);
    EXPORT void BindVertexBuffer(GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride, const SrcLoc& src_loc);
    EXPORT void BindVertexBuffers(GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides, const SrcLoc& src_loc);
    EXPORT void Bitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte * bitmap, const SrcLoc& src_loc);
    EXPORT void BlendColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha, const SrcLoc& src_loc);
    EXPORT void BlendEquation(GLenum mode, const SrcLoc& src_loc);
    EXPORT void BlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha, const SrcLoc& src_loc);
    EXPORT void BlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha, const SrcLoc& src_loc);
    EXPORT void BlendEquationi(GLuint buf, GLenum mode, const SrcLoc& src_loc);
    EXPORT void BlendFunc(GLenum sfactor, GLenum dfactor, const SrcLoc& src_loc);
    EXPORT void BlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha, const SrcLoc& src_loc);
    EXPORT void BlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha, const SrcLoc& src_loc);
    EXPORT void BlendFunci(GLuint buf, GLenum src, GLenum dst, const SrcLoc& src_loc);
    EXPORT void BlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter, const SrcLoc& src_loc);
    EXPORT void BlitNamedFramebuffer(GLuint readFramebuffer, GLuint drawFramebuffer, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter, const SrcLoc& src_loc);
    EXPORT void BufferData(GLenum target, GLsizeiptr size, const void * data, GLenum usage, const SrcLoc& src_loc);
    EXPORT void BufferStorage(GLenum target, GLsizeiptr size, const void * data, GLbitfield flags, const SrcLoc& src_loc);
    EXPORT void BufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const void * data, const SrcLoc& src_loc);
    EXPORT void CallList(GLuint list, const SrcLoc& src_loc);
    EXPORT void CallLists(GLsizei n, GLenum type, const void * lists, const SrcLoc& src_loc);
    EXPORT GLenum CheckFramebufferStatus(GLenum target, const SrcLoc& src_loc);
    EXPORT GLenum CheckNamedFramebufferStatus(GLuint framebuffer, GLenum target, const SrcLoc& src_loc);
    EXPORT void ClampColor(GLenum target, GLenum clamp, const SrcLoc& src_loc);
    EXPORT void Clear(GLbitfield mask, const SrcLoc& src_loc);
    EXPORT void ClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha, const SrcLoc& src_loc);
    EXPORT void ClearBufferData(GLenum target, GLenum internalformat, GLenum format, GLenum type, const void * data, const SrcLoc& src_loc);
    EXPORT void ClearBufferSubData(GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data, const SrcLoc& src_loc);
    EXPORT void ClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil, const SrcLoc& src_loc);
    EXPORT void ClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint * value, const SrcLoc& src_loc);
    EXPORT void ClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void ClearColor(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha, const SrcLoc& src_loc);
    EXPORT void ClearDepth(GLdouble depth, const SrcLoc& src_loc);
    EXPORT void ClearDepthf(GLfloat d, const SrcLoc& src_loc);
    EXPORT void ClearIndex(GLfloat c, const SrcLoc& src_loc);
    EXPORT void ClearNamedBufferData(GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void * data, const SrcLoc& src_loc);
    EXPORT void ClearNamedBufferSubData(GLuint buffer, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void * data, const SrcLoc& src_loc);
    EXPORT void ClearNamedFramebufferfi(GLuint framebuffer, GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil, const SrcLoc& src_loc);
    EXPORT void ClearNamedFramebufferfv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ClearNamedFramebufferiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLint * value, const SrcLoc& src_loc);
    EXPORT void ClearNamedFramebufferuiv(GLuint framebuffer, GLenum buffer, GLint drawbuffer, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void ClearStencil(GLint s, const SrcLoc& src_loc);
    EXPORT void ClearTexImage(GLuint texture, GLint level, GLenum format, GLenum type, const void * data, const SrcLoc& src_loc);
    EXPORT void ClearTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * data, const SrcLoc& src_loc);
    EXPORT void ClientActiveTexture(GLenum texture, const SrcLoc& src_loc);
    EXPORT GLenum ClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout, const SrcLoc& src_loc);
    EXPORT void ClipControl(GLenum origin, GLenum depth, const SrcLoc& src_loc);
    EXPORT void ClipPlane(GLenum plane, const GLdouble * equation, const SrcLoc& src_loc);
    EXPORT void Color3b(GLbyte red, GLbyte green, GLbyte blue, const SrcLoc& src_loc);
    EXPORT void Color3bv(const GLbyte * v, const SrcLoc& src_loc);
    EXPORT void Color3d(GLdouble red, GLdouble green, GLdouble blue, const SrcLoc& src_loc);
    EXPORT void Color3dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void Color3f(GLfloat red, GLfloat green, GLfloat blue, const SrcLoc& src_loc);
    EXPORT void Color3fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void Color3i(GLint red, GLint green, GLint blue, const SrcLoc& src_loc);
    EXPORT void Color3iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void Color3s(GLshort red, GLshort green, GLshort blue, const SrcLoc& src_loc);
    EXPORT void Color3sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void Color3ub(GLubyte red, GLubyte green, GLubyte blue, const SrcLoc& src_loc);
    EXPORT void Color3ubv(const GLubyte * v, const SrcLoc& src_loc);
    EXPORT void Color3ui(GLuint red, GLuint green, GLuint blue, const SrcLoc& src_loc);
    EXPORT void Color3uiv(const GLuint * v, const SrcLoc& src_loc);
    EXPORT void Color3us(GLushort red, GLushort green, GLushort blue, const SrcLoc& src_loc);
    EXPORT void Color3usv(const GLushort * v, const SrcLoc& src_loc);
    EXPORT void Color4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha, const SrcLoc& src_loc);
    EXPORT void Color4bv(const GLbyte * v, const SrcLoc& src_loc);
    EXPORT void Color4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha, const SrcLoc& src_loc);
    EXPORT void Color4dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void Color4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha, const SrcLoc& src_loc);
    EXPORT void Color4fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void Color4i(GLint red, GLint green, GLint blue, GLint alpha, const SrcLoc& src_loc);
    EXPORT void Color4iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void Color4s(GLshort red, GLshort green, GLshort blue, GLshort alpha, const SrcLoc& src_loc);
    EXPORT void Color4sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void Color4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha, const SrcLoc& src_loc);
    EXPORT void Color4ubv(const GLubyte * v, const SrcLoc& src_loc);
    EXPORT void Color4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha, const SrcLoc& src_loc);
    EXPORT void Color4uiv(const GLuint * v, const SrcLoc& src_loc);
    EXPORT void Color4us(GLushort red, GLushort green, GLushort blue, GLushort alpha, const SrcLoc& src_loc);
    EXPORT void Color4usv(const GLushort * v, const SrcLoc& src_loc);
    EXPORT void ColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha, const SrcLoc& src_loc);
    EXPORT void ColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a, const SrcLoc& src_loc);
    EXPORT void ColorMaterial(GLenum face, GLenum mode, const SrcLoc& src_loc);
    EXPORT void ColorP3ui(GLenum type, GLuint color, const SrcLoc& src_loc);
    EXPORT void ColorP3uiv(GLenum type, const GLuint * color, const SrcLoc& src_loc);
    EXPORT void ColorP4ui(GLenum type, GLuint color, const SrcLoc& src_loc);
    EXPORT void ColorP4uiv(GLenum type, const GLuint * color, const SrcLoc& src_loc);
    EXPORT void ColorPointer(GLint size, GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void CompileShader(GLuint shader, const SrcLoc& src_loc);
    EXPORT void CompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CompressedTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CompressedTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CompressedTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const void * data, const SrcLoc& src_loc);
    EXPORT void CopyBufferSubData(GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, const SrcLoc& src_loc);
    EXPORT void CopyImageSubData(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth, const SrcLoc& src_loc);
    EXPORT void CopyNamedBufferSubData(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size, const SrcLoc& src_loc);
    EXPORT void CopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type, const SrcLoc& src_loc);
    EXPORT void CopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border, const SrcLoc& src_loc);
    EXPORT void CopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border, const SrcLoc& src_loc);
    EXPORT void CopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width, const SrcLoc& src_loc);
    EXPORT void CopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void CopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void CopyTextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width, const SrcLoc& src_loc);
    EXPORT void CopyTextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void CopyTextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void CreateBuffers(GLsizei n, GLuint * buffers, const SrcLoc& src_loc);
    EXPORT void CreateFramebuffers(GLsizei n, GLuint * framebuffers, const SrcLoc& src_loc);
    EXPORT GLuint CreateProgram(const SrcLoc& src_loc);
    EXPORT void CreateProgramPipelines(GLsizei n, GLuint * pipelines, const SrcLoc& src_loc);
    EXPORT void CreateQueries(GLenum target, GLsizei n, GLuint * ids, const SrcLoc& src_loc);
    EXPORT void CreateRenderbuffers(GLsizei n, GLuint * renderbuffers, const SrcLoc& src_loc);
    EXPORT void CreateSamplers(GLsizei n, GLuint * samplers, const SrcLoc& src_loc);
    EXPORT GLuint CreateShader(GLenum type, const SrcLoc& src_loc);
    EXPORT GLuint CreateShaderProgramv(GLenum type, GLsizei count, const GLchar *const* strings, const SrcLoc& src_loc);
    EXPORT void CreateTextures(GLenum target, GLsizei n, GLuint * textures, const SrcLoc& src_loc);
    EXPORT void CreateTransformFeedbacks(GLsizei n, GLuint * ids, const SrcLoc& src_loc);
    EXPORT void CreateVertexArrays(GLsizei n, GLuint * arrays, const SrcLoc& src_loc);
    EXPORT void CullFace(GLenum mode, const SrcLoc& src_loc);
    EXPORT void DebugMessageCallback(GLDEBUGPROC callback, const void * userParam, const SrcLoc& src_loc);
    EXPORT void DebugMessageControl(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint * ids, GLboolean enabled, const SrcLoc& src_loc);
    EXPORT void DebugMessageInsert(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar * buf, const SrcLoc& src_loc);
    EXPORT void DeleteBuffers(GLsizei n, const GLuint * buffers, const SrcLoc& src_loc);
    EXPORT void DeleteFramebuffers(GLsizei n, const GLuint * framebuffers, const SrcLoc& src_loc);
    EXPORT void DeleteLists(GLuint list, GLsizei range, const SrcLoc& src_loc);
    EXPORT void DeleteProgram(GLuint program, const SrcLoc& src_loc);
    EXPORT void DeleteProgramPipelines(GLsizei n, const GLuint * pipelines, const SrcLoc& src_loc);
    EXPORT void DeleteQueries(GLsizei n, const GLuint * ids, const SrcLoc& src_loc);
    EXPORT void DeleteRenderbuffers(GLsizei n, const GLuint * renderbuffers, const SrcLoc& src_loc);
    EXPORT void DeleteSamplers(GLsizei count, const GLuint * samplers, const SrcLoc& src_loc);
    EXPORT void DeleteShader(GLuint shader, const SrcLoc& src_loc);
    EXPORT void DeleteSync(GLsync sync, const SrcLoc& src_loc);
    EXPORT void DeleteTextures(GLsizei n, const GLuint * textures, const SrcLoc& src_loc);
    EXPORT void DeleteTransformFeedbacks(GLsizei n, const GLuint * ids, const SrcLoc& src_loc);
    EXPORT void DeleteVertexArrays(GLsizei n, const GLuint * arrays, const SrcLoc& src_loc);
    EXPORT void DepthFunc(GLenum func, const SrcLoc& src_loc);
    EXPORT void DepthMask(GLboolean flag, const SrcLoc& src_loc);
    EXPORT void DepthRange(GLdouble n, GLdouble f, const SrcLoc& src_loc);
    EXPORT void DepthRangeArrayv(GLuint first, GLsizei count, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void DepthRangeIndexed(GLuint index, GLdouble n, GLdouble f, const SrcLoc& src_loc);
    EXPORT void DepthRangef(GLfloat n, GLfloat f, const SrcLoc& src_loc);
    EXPORT void DetachShader(GLuint program, GLuint shader, const SrcLoc& src_loc);
    EXPORT void Disable(GLenum cap, const SrcLoc& src_loc);
    EXPORT void DisableClientState(GLenum array, const SrcLoc& src_loc);
    EXPORT void DisableVertexArrayAttrib(GLuint vaobj, GLuint index, const SrcLoc& src_loc);
    EXPORT void DisableVertexAttribArray(GLuint index, const SrcLoc& src_loc);
    EXPORT void Disablei(GLenum target, GLuint index, const SrcLoc& src_loc);
    EXPORT void DispatchCompute(GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z, const SrcLoc& src_loc);
    EXPORT void DispatchComputeIndirect(GLintptr indirect, const SrcLoc& src_loc);
    EXPORT void DrawArrays(GLenum mode, GLint first, GLsizei count, const SrcLoc& src_loc);
    EXPORT void DrawArraysIndirect(GLenum mode, const void * indirect, const SrcLoc& src_loc);
    EXPORT void DrawArraysInstanced(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, const SrcLoc& src_loc);
    EXPORT void DrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance, const SrcLoc& src_loc);
    EXPORT void DrawBuffer(GLenum buf, const SrcLoc& src_loc);
    EXPORT void DrawBuffers(GLsizei n, const GLenum * bufs, const SrcLoc& src_loc);
    EXPORT void DrawElements(GLenum mode, GLsizei count, GLenum type, const void * indices, const SrcLoc& src_loc);
    EXPORT void DrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLint basevertex, const SrcLoc& src_loc);
    EXPORT void DrawElementsIndirect(GLenum mode, GLenum type, const void * indirect, const SrcLoc& src_loc);
    EXPORT void DrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, const SrcLoc& src_loc);
    EXPORT void DrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLuint baseinstance, const SrcLoc& src_loc);
    EXPORT void DrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, const SrcLoc& src_loc);
    EXPORT void DrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const void * indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance, const SrcLoc& src_loc);
    EXPORT void DrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void DrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, const SrcLoc& src_loc);
    EXPORT void DrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const void * indices, GLint basevertex, const SrcLoc& src_loc);
    EXPORT void DrawTransformFeedback(GLenum mode, GLuint id, const SrcLoc& src_loc);
    EXPORT void DrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei instancecount, const SrcLoc& src_loc);
    EXPORT void DrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream, const SrcLoc& src_loc);
    EXPORT void DrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei instancecount, const SrcLoc& src_loc);
    EXPORT void EdgeFlag(GLboolean flag, const SrcLoc& src_loc);
    EXPORT void EdgeFlagPointer(GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void EdgeFlagv(const GLboolean * flag, const SrcLoc& src_loc);
    EXPORT void Enable(GLenum cap, const SrcLoc& src_loc);
    EXPORT void EnableClientState(GLenum array, const SrcLoc& src_loc);
    EXPORT void EnableVertexArrayAttrib(GLuint vaobj, GLuint index, const SrcLoc& src_loc);
    EXPORT void EnableVertexAttribArray(GLuint index, const SrcLoc& src_loc);
    EXPORT void Enablei(GLenum target, GLuint index, const SrcLoc& src_loc);
    EXPORT void End(const SrcLoc& src_loc);
    EXPORT void EndConditionalRender(const SrcLoc& src_loc);
    EXPORT void EndList(const SrcLoc& src_loc);
    EXPORT void EndQuery(GLenum target, const SrcLoc& src_loc);
    EXPORT void EndQueryIndexed(GLenum target, GLuint index, const SrcLoc& src_loc);
    EXPORT void EndTransformFeedback(const SrcLoc& src_loc);
    EXPORT void EvalCoord1d(GLdouble u, const SrcLoc& src_loc);
    EXPORT void EvalCoord1dv(const GLdouble * u, const SrcLoc& src_loc);
    EXPORT void EvalCoord1f(GLfloat u, const SrcLoc& src_loc);
    EXPORT void EvalCoord1fv(const GLfloat * u, const SrcLoc& src_loc);
    EXPORT void EvalCoord2d(GLdouble u, GLdouble v, const SrcLoc& src_loc);
    EXPORT void EvalCoord2dv(const GLdouble * u, const SrcLoc& src_loc);
    EXPORT void EvalCoord2f(GLfloat u, GLfloat v, const SrcLoc& src_loc);
    EXPORT void EvalCoord2fv(const GLfloat * u, const SrcLoc& src_loc);
    EXPORT void EvalMesh1(GLenum mode, GLint i1, GLint i2, const SrcLoc& src_loc);
    EXPORT void EvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2, const SrcLoc& src_loc);
    EXPORT void EvalPoint1(GLint i, const SrcLoc& src_loc);
    EXPORT void EvalPoint2(GLint i, GLint j, const SrcLoc& src_loc);
    EXPORT void FeedbackBuffer(GLsizei size, GLenum type, GLfloat * buffer, const SrcLoc& src_loc);
    EXPORT GLsync FenceSync(GLenum condition, GLbitfield flags, const SrcLoc& src_loc);
    EXPORT void Finish(const SrcLoc& src_loc);
    EXPORT void Flush(const SrcLoc& src_loc);
    EXPORT void FlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, const SrcLoc& src_loc);
    EXPORT void FlushMappedNamedBufferRange(GLuint buffer, GLintptr offset, GLsizeiptr length, const SrcLoc& src_loc);
    EXPORT void FogCoordPointer(GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void FogCoordd(GLdouble coord, const SrcLoc& src_loc);
    EXPORT void FogCoorddv(const GLdouble * coord, const SrcLoc& src_loc);
    EXPORT void FogCoordf(GLfloat coord, const SrcLoc& src_loc);
    EXPORT void FogCoordfv(const GLfloat * coord, const SrcLoc& src_loc);
    EXPORT void Fogf(GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void Fogfv(GLenum pname, const GLfloat * params, const SrcLoc& src_loc);
    EXPORT void Fogi(GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void Fogiv(GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void FramebufferParameteri(GLenum target, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void FramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer, const SrcLoc& src_loc);
    EXPORT void FramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level, const SrcLoc& src_loc);
    EXPORT void FramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, const SrcLoc& src_loc);
    EXPORT void FramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, const SrcLoc& src_loc);
    EXPORT void FramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset, const SrcLoc& src_loc);
    EXPORT void FramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer, const SrcLoc& src_loc);
    EXPORT void FrontFace(GLenum mode, const SrcLoc& src_loc);
    EXPORT void Frustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar, const SrcLoc& src_loc);
    EXPORT void GenBuffers(GLsizei n, GLuint * buffers, const SrcLoc& src_loc);
    EXPORT void GenFramebuffers(GLsizei n, GLuint * framebuffers, const SrcLoc& src_loc);
    EXPORT GLuint GenLists(GLsizei range, const SrcLoc& src_loc);
    EXPORT void GenProgramPipelines(GLsizei n, GLuint * pipelines, const SrcLoc& GetProgram);
    EXPORT void GenQueries(GLsizei n, GLuint * ids, const SrcLoc& src_loc);
    EXPORT void GenRenderbuffers(GLsizei n, GLuint * renderbuffers, const SrcLoc& src_loc);
    EXPORT void GenSamplers(GLsizei count, GLuint * samplers, const SrcLoc& src_loc);
    EXPORT void GenTextures(GLsizei n, GLuint * textures, const SrcLoc& src_loc);
    EXPORT void GenTransformFeedbacks(GLsizei n, GLuint * ids, const SrcLoc& src_loc);
    EXPORT void GenVertexArrays(GLsizei n, GLuint * arrays, const SrcLoc& src_loc);
    EXPORT void GenerateMipmap(GLenum target, const SrcLoc& src_loc);
    EXPORT void GenerateTextureMipmap(GLuint texture, const SrcLoc& src_loc);
    EXPORT void GetActiveAtomicCounterBufferiv(GLuint program, GLuint bufferIndex, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetActiveSubroutineName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetActiveSubroutineUniformName(GLuint program, GLenum shadertype, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetActiveSubroutineUniformiv(GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint * values, const SrcLoc& src_loc);
    EXPORT void GetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLint * size, GLenum * type, GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformBlockName, const SrcLoc& src_loc);
    EXPORT void GetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei * length, GLchar * uniformName, const SrcLoc& src_loc);
    EXPORT void GetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint * uniformIndices, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei * count, GLuint * shaders, const SrcLoc& src_loc);
    EXPORT GLint GetAttribLocation(GLuint program, const GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetBooleani_v(GLenum target, GLuint index, GLboolean * data, const SrcLoc& src_loc);
    EXPORT void GetBooleanv(GLenum pname, GLboolean * data, const SrcLoc& src_loc);
    EXPORT void GetBufferParameteri64v(GLenum target, GLenum pname, GLint64 * params, const SrcLoc& src_loc);
    EXPORT void GetBufferParameteriv(GLenum target, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetBufferPointerv(GLenum target, GLenum pname, void ** params, const SrcLoc& src_loc);
    EXPORT void GetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, void * data, const SrcLoc& src_loc);
    EXPORT void GetClipPlane(GLenum plane, GLdouble * equation, const SrcLoc& src_loc);
    EXPORT void GetCompressedTexImage(GLenum target, GLint level, void * img, const SrcLoc& src_loc);
    EXPORT void GetCompressedTextureImage(GLuint texture, GLint level, GLsizei bufSize, void * pixels, const SrcLoc& src_loc);
    EXPORT void GetCompressedTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei bufSize, void * pixels, const SrcLoc& src_loc);
    EXPORT GLuint GetDebugMessageLog(GLuint count, GLsizei bufSize, GLenum * sources, GLenum * types, GLuint * ids, GLenum * severities, GLsizei * lengths, GLchar * messageLog, const SrcLoc& src_loc);
    EXPORT void GetDoublei_v(GLenum target, GLuint index, GLdouble * data, const SrcLoc& src_loc);
    EXPORT void GetDoublev(GLenum pname, GLdouble * data, const SrcLoc& src_loc);
    EXPORT GLenum GetError(const SrcLoc& src_loc);
    EXPORT void GetFloati_v(GLenum target, GLuint index, GLfloat * data, const SrcLoc& src_loc);
    EXPORT void GetFloatv(GLenum pname, GLfloat * data, const SrcLoc& src_loc);
    EXPORT GLint GetFragDataIndex(GLuint program, const GLchar * name, const SrcLoc& src_loc);
    EXPORT GLint GetFragDataLocation(GLuint program, const GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetFramebufferParameteriv(GLenum target, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT GLenum GetGraphicsResetStatus(const SrcLoc& src_loc);
    EXPORT void GetInteger64i_v(GLenum target, GLuint index, GLint64 * data, const SrcLoc& src_loc);
    EXPORT void GetInteger64v(GLenum pname, GLint64 * data, const SrcLoc& src_loc);
    EXPORT void GetIntegeri_v(GLenum target, GLuint index, GLint * data, const SrcLoc& src_loc);
    EXPORT void GetIntegerv(GLenum pname, GLint * data, const SrcLoc& src_loc);
    EXPORT void GetInternalformati64v(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint64 * params, const SrcLoc& src_loc);
    EXPORT void GetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei count, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetLightfv(GLenum light, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetLightiv(GLenum light, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetMapdv(GLenum target, GLenum query, GLdouble * v, const SrcLoc& src_loc);
    EXPORT void GetMapfv(GLenum target, GLenum query, GLfloat * v, const SrcLoc& src_loc);
    EXPORT void GetMapiv(GLenum target, GLenum query, GLint * v, const SrcLoc& src_loc);
    EXPORT void GetMaterialfv(GLenum face, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetMaterialiv(GLenum face, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetMultisamplefv(GLenum pname, GLuint index, GLfloat * val, const SrcLoc& src_loc);
    EXPORT void GetNamedBufferParameteri64v(GLuint buffer, GLenum pname, GLint64 * params, const SrcLoc& src_loc);
    EXPORT void GetNamedBufferParameteriv(GLuint buffer, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetNamedBufferPointerv(GLuint buffer, GLenum pname, void ** params, const SrcLoc& src_loc);
    EXPORT void GetNamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, void * data, const SrcLoc& src_loc);
    EXPORT void GetNamedFramebufferAttachmentParameteriv(GLuint framebuffer, GLenum attachment, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetNamedFramebufferParameteriv(GLuint framebuffer, GLenum pname, GLint * param, const SrcLoc& src_loc);
    EXPORT void GetNamedRenderbufferParameteriv(GLuint renderbuffer, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetObjectLabel(GLenum identifier, GLuint name, GLsizei bufSize, GLsizei * length, GLchar * label, const SrcLoc& src_loc);
    EXPORT void GetObjectPtrLabel(const void * ptr, GLsizei bufSize, GLsizei * length, GLchar * label, const SrcLoc& src_loc);
    EXPORT void GetPixelMapfv(GLenum map, GLfloat * values, const SrcLoc& src_loc);
    EXPORT void GetPixelMapuiv(GLenum map, GLuint * values, const SrcLoc& src_loc);
    EXPORT void GetPixelMapusv(GLenum map, GLushort * values, const SrcLoc& src_loc);
    EXPORT void GetPointerv(GLenum pname, void ** params, const SrcLoc& src_loc);
    EXPORT void GetPolygonStipple(GLubyte * mask, const SrcLoc& src_loc);
    EXPORT void GetProgramBinary(GLuint program, GLsizei bufSize, GLsizei * length, GLenum * binaryFormat, void * binary, const SrcLoc& src_loc);
    EXPORT void GetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei * length, GLchar * infoLog, const SrcLoc& src_loc);
    EXPORT void GetProgramInterfaceiv(GLuint program, GLenum programInterface, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei * length, GLchar * infoLog, const SrcLoc& src_loc);
    EXPORT void GetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT GLuint GetProgramResourceIndex(GLuint program, GLenum programInterface, const GLchar * name, const SrcLoc& src_loc);
    EXPORT GLint GetProgramResourceLocation(GLuint program, GLenum programInterface, const GLchar * name, const SrcLoc& src_loc);
    EXPORT GLint GetProgramResourceLocationIndex(GLuint program, GLenum programInterface, const GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetProgramResourceName(GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei * length, GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetProgramResourceiv(GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum * props, GLsizei count, GLsizei * length, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetProgramStageiv(GLuint program, GLenum shadertype, GLenum pname, GLint * values, const SrcLoc& src_loc);
    EXPORT void GetProgramiv(GLuint program, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetQueryBufferObjecti64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset, const SrcLoc& src_loc);
    EXPORT void GetQueryBufferObjectiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset, const SrcLoc& src_loc);
    EXPORT void GetQueryBufferObjectui64v(GLuint id, GLuint buffer, GLenum pname, GLintptr offset, const SrcLoc& src_loc);
    EXPORT void GetQueryBufferObjectuiv(GLuint id, GLuint buffer, GLenum pname, GLintptr offset, const SrcLoc& src_loc);
    EXPORT void GetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetQueryObjecti64v(GLuint id, GLenum pname, GLint64 * params, const SrcLoc& src_loc);
    EXPORT void GetQueryObjectiv(GLuint id, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 * params, const SrcLoc& src_loc);
    EXPORT void GetQueryObjectuiv(GLuint id, GLenum pname, GLuint * params, const SrcLoc& src_loc);
    EXPORT void GetQueryiv(GLenum target, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetRenderbufferParameteriv(GLenum target, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint * params, const SrcLoc& src_loc);
    EXPORT void GetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetSamplerParameteriv(GLuint sampler, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * infoLog, const SrcLoc& src_loc);
    EXPORT void GetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint * range, GLint * precision, const SrcLoc& src_loc);
    EXPORT void GetShaderSource(GLuint shader, GLsizei bufSize, GLsizei * length, GLchar * source, const SrcLoc& src_loc);
    EXPORT void GetShaderiv(GLuint shader, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT const GLubyte* GetString(GLenum name, const SrcLoc& src_loc);
    EXPORT const GLubyte* GetStringi(GLenum name, GLuint index, const SrcLoc& src_loc);
    EXPORT GLuint GetSubroutineIndex(GLuint program, GLenum shadertype, const GLchar * name, const SrcLoc& src_loc);
    EXPORT GLint GetSubroutineUniformLocation(GLuint program, GLenum shadertype, const GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetSynciv(GLsync sync, GLenum pname, GLsizei count, GLsizei * length, GLint * values, const SrcLoc& src_loc);
    EXPORT void GetTexEnvfv(GLenum target, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetTexEnviv(GLenum target, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetTexGendv(GLenum coord, GLenum pname, GLdouble * params, const SrcLoc& src_loc);
    EXPORT void GetTexGenfv(GLenum coord, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetTexGeniv(GLenum coord, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetTexImage(GLenum target, GLint level, GLenum format, GLenum type, void * pixels, const SrcLoc& src_loc);
    EXPORT void GetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetTexParameterIiv(GLenum target, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetTexParameterIuiv(GLenum target, GLenum pname, GLuint * params, const SrcLoc& src_loc);
    EXPORT void GetTexParameterfv(GLenum target, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetTexParameteriv(GLenum target, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetTextureImage(GLuint texture, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels, const SrcLoc& src_loc);
    EXPORT void GetTextureLevelParameterfv(GLuint texture, GLint level, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetTextureLevelParameteriv(GLuint texture, GLint level, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetTextureParameterIiv(GLuint texture, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetTextureParameterIuiv(GLuint texture, GLenum pname, GLuint * params, const SrcLoc& src_loc);
    EXPORT void GetTextureParameterfv(GLuint texture, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetTextureParameteriv(GLuint texture, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetTextureSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLsizei bufSize, void * pixels, const SrcLoc& src_loc);
    EXPORT void GetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei * length, GLsizei * size, GLenum * type, GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetTransformFeedbacki64_v(GLuint xfb, GLenum pname, GLuint index, GLint64 * param, const SrcLoc& src_loc);
    EXPORT void GetTransformFeedbacki_v(GLuint xfb, GLenum pname, GLuint index, GLint * param, const SrcLoc& src_loc);
    EXPORT void GetTransformFeedbackiv(GLuint xfb, GLenum pname, GLint * param, const SrcLoc& src_loc);
    EXPORT GLuint GetUniformBlockIndex(GLuint program, const GLchar * uniformBlockName, const SrcLoc& src_loc);
    EXPORT void GetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar *const* uniformNames, GLuint * uniformIndices, const SrcLoc& src_loc);
    EXPORT GLint GetUniformLocation(GLuint program, const GLchar * name, const SrcLoc& src_loc);
    EXPORT void GetUniformSubroutineuiv(GLenum shadertype, GLint location, GLuint * params, const SrcLoc& src_loc);
    EXPORT void GetUniformdv(GLuint program, GLint location, GLdouble * params, const SrcLoc& src_loc);
    EXPORT void GetUniformfv(GLuint program, GLint location, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetUniformiv(GLuint program, GLint location, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetUniformuiv(GLuint program, GLint location, GLuint * params, const SrcLoc& src_loc);
    EXPORT void GetVertexArrayIndexed64iv(GLuint vaobj, GLuint index, GLenum pname, GLint64 * param, const SrcLoc& src_loc);
    EXPORT void GetVertexArrayIndexediv(GLuint vaobj, GLuint index, GLenum pname, GLint * param, const SrcLoc& src_loc);
    EXPORT void GetVertexArrayiv(GLuint vaobj, GLenum pname, GLint * param, const SrcLoc& src_loc);
    EXPORT void GetVertexAttribIiv(GLuint index, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetVertexAttribIuiv(GLuint index, GLenum pname, GLuint * params, const SrcLoc& src_loc);
    EXPORT void GetVertexAttribLdv(GLuint index, GLenum pname, GLdouble * params, const SrcLoc& src_loc);
    EXPORT void GetVertexAttribPointerv(GLuint index, GLenum pname, void ** pointer, const SrcLoc& src_loc);
    EXPORT void GetVertexAttribdv(GLuint index, GLenum pname, GLdouble * params, const SrcLoc& src_loc);
    EXPORT void GetVertexAttribfv(GLuint index, GLenum pname, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetVertexAttribiv(GLuint index, GLenum pname, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetnColorTable(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * table, const SrcLoc& src_loc);
    EXPORT void GetnCompressedTexImage(GLenum target, GLint lod, GLsizei bufSize, void * pixels, const SrcLoc& src_loc);
    EXPORT void GetnConvolutionFilter(GLenum target, GLenum format, GLenum type, GLsizei bufSize, void * image, const SrcLoc& src_loc);
    EXPORT void GetnHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values, const SrcLoc& src_loc);
    EXPORT void GetnMapdv(GLenum target, GLenum query, GLsizei bufSize, GLdouble * v, const SrcLoc& src_loc);
    EXPORT void GetnMapfv(GLenum target, GLenum query, GLsizei bufSize, GLfloat * v, const SrcLoc& src_loc);
    EXPORT void GetnMapiv(GLenum target, GLenum query, GLsizei bufSize, GLint * v, const SrcLoc& src_loc);
    EXPORT void GetnMinmax(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, void * values, const SrcLoc& src_loc);
    EXPORT void GetnPixelMapfv(GLenum map, GLsizei bufSize, GLfloat * values, const SrcLoc& src_loc);
    EXPORT void GetnPixelMapuiv(GLenum map, GLsizei bufSize, GLuint * values, const SrcLoc& src_loc);
    EXPORT void GetnPixelMapusv(GLenum map, GLsizei bufSize, GLushort * values, const SrcLoc& src_loc);
    EXPORT void GetnPolygonStipple(GLsizei bufSize, GLubyte * pattern, const SrcLoc& src_loc);
    EXPORT void GetnSeparableFilter(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, void * row, GLsizei columnBufSize, void * column, void * span, const SrcLoc& src_loc);
    EXPORT void GetnTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, void * pixels, const SrcLoc& src_loc);
    EXPORT void GetnUniformdv(GLuint program, GLint location, GLsizei bufSize, GLdouble * params, const SrcLoc& src_loc);
    EXPORT void GetnUniformfv(GLuint program, GLint location, GLsizei bufSize, GLfloat * params, const SrcLoc& src_loc);
    EXPORT void GetnUniformiv(GLuint program, GLint location, GLsizei bufSize, GLint * params, const SrcLoc& src_loc);
    EXPORT void GetnUniformuiv(GLuint program, GLint location, GLsizei bufSize, GLuint * params, const SrcLoc& src_loc);
    EXPORT void Hint(GLenum target, GLenum mode, const SrcLoc& src_loc);
    EXPORT void IndexMask(GLuint mask, const SrcLoc& src_loc);
    EXPORT void IndexPointer(GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void Indexd(GLdouble c, const SrcLoc& src_loc);
    EXPORT void Indexdv(const GLdouble * c, const SrcLoc& src_loc);
    EXPORT void Indexf(GLfloat c, const SrcLoc& src_loc);
    EXPORT void Indexfv(const GLfloat * c, const SrcLoc& src_loc);
    EXPORT void Indexi(GLint c, const SrcLoc& src_loc);
    EXPORT void Indexiv(const GLint * c, const SrcLoc& src_loc);
    EXPORT void Indexs(GLshort c, const SrcLoc& src_loc);
    EXPORT void Indexsv(const GLshort * c, const SrcLoc& src_loc);
    EXPORT void Indexub(GLubyte c, const SrcLoc& src_loc);
    EXPORT void Indexubv(const GLubyte * c, const SrcLoc& src_loc);
    EXPORT void InitNames(const SrcLoc& src_loc);
    EXPORT void InterleavedArrays(GLenum format, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void InvalidateBufferData(GLuint buffer, const SrcLoc& src_loc);
    EXPORT void InvalidateBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr length, const SrcLoc& src_loc);
    EXPORT void InvalidateFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, const SrcLoc& src_loc);
    EXPORT void InvalidateNamedFramebufferData(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, const SrcLoc& src_loc);
    EXPORT void InvalidateNamedFramebufferSubData(GLuint framebuffer, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void InvalidateSubFramebuffer(GLenum target, GLsizei numAttachments, const GLenum * attachments, GLint x, GLint y, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void InvalidateTexImage(GLuint texture, GLint level, const SrcLoc& src_loc);
    EXPORT void InvalidateTexSubImage(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, const SrcLoc& src_loc);
    EXPORT GLboolean IsBuffer(GLuint buffer, const SrcLoc& src_loc);
    EXPORT GLboolean IsEnabled(GLenum cap, const SrcLoc& src_loc);
    EXPORT GLboolean IsEnabledi(GLenum target, GLuint index, const SrcLoc& src_loc);
    EXPORT GLboolean IsFramebuffer(GLuint framebuffer, const SrcLoc& src_loc);
    EXPORT GLboolean IsList(GLuint list, const SrcLoc& src_loc);
    EXPORT GLboolean IsProgram(GLuint program, const SrcLoc& src_loc);
    EXPORT GLboolean IsProgramPipeline(GLuint pipeline, const SrcLoc& src_loc);
    EXPORT GLboolean IsQuery(GLuint id, const SrcLoc& src_loc);
    EXPORT GLboolean IsRenderbuffer(GLuint renderbuffer, const SrcLoc& src_loc);
    EXPORT GLboolean IsSampler(GLuint sampler, const SrcLoc& src_loc);
    EXPORT GLboolean IsShader(GLuint shader, const SrcLoc& src_loc);
    EXPORT GLboolean IsSync(GLsync sync, const SrcLoc& src_loc);
    EXPORT GLboolean IsTexture(GLuint texture, const SrcLoc& src_loc);
    EXPORT GLboolean IsTransformFeedback(GLuint id, const SrcLoc& src_loc);
    EXPORT GLboolean IsVertexArray(GLuint array, const SrcLoc& src_loc);
    EXPORT void LightModelf(GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void LightModelfv(GLenum pname, const GLfloat * params, const SrcLoc& src_loc);
    EXPORT void LightModeli(GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void LightModeliv(GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void Lightf(GLenum light, GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void Lightfv(GLenum light, GLenum pname, const GLfloat * params, const SrcLoc& src_loc);
    EXPORT void Lighti(GLenum light, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void Lightiv(GLenum light, GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void LineStipple(GLint factor, GLushort pattern, const SrcLoc& src_loc);
    EXPORT void LineWidth(GLfloat width, const SrcLoc& src_loc);
    EXPORT void LinkProgram(GLuint program, const SrcLoc& src_loc);
    EXPORT void ListBase(GLuint base, const SrcLoc& src_loc);
    EXPORT void LoadIdentity(const SrcLoc& src_loc);
    EXPORT void LoadMatrixd(const GLdouble * m, const SrcLoc& src_loc);
    EXPORT void LoadMatrixf(const GLfloat * m, const SrcLoc& src_loc);
    EXPORT void LoadName(GLuint name, const SrcLoc& src_loc);
    EXPORT void LoadTransposeMatrixd(const GLdouble * m, const SrcLoc& src_loc);
    EXPORT void LoadTransposeMatrixf(const GLfloat * m, const SrcLoc& src_loc);
    EXPORT void LogicOp(GLenum opcode, const SrcLoc& src_loc);
    EXPORT void Map1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble * points, const SrcLoc& src_loc);
    EXPORT void Map1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat * points, const SrcLoc& src_loc);
    EXPORT void Map2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble * points, const SrcLoc& src_loc);
    EXPORT void Map2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat * points, const SrcLoc& src_loc);
    EXPORT void MapBuffer (GLenum target, GLenum access, const SrcLoc& src_loc);
    EXPORT void MapBufferRange (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access, const SrcLoc& src_loc);
    EXPORT void MapGrid1d(GLint un, GLdouble u1, GLdouble u2, const SrcLoc& src_loc);
    EXPORT void MapGrid1f(GLint un, GLfloat u1, GLfloat u2, const SrcLoc& src_loc);
    EXPORT void MapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2, const SrcLoc& src_loc);
    EXPORT void MapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2, const SrcLoc& src_loc);
    EXPORT void MapNamedBuffer (GLuint buffer, GLenum access, const SrcLoc& src_loc);
    EXPORT void MapNamedBufferRange (GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access, const SrcLoc& src_loc);
    EXPORT void Materialf(GLenum face, GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void Materialfv(GLenum face, GLenum pname, const GLfloat * params, const SrcLoc& src_loc);
    EXPORT void Materiali(GLenum face, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void Materialiv(GLenum face, GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void MatrixMode(GLenum mode, const SrcLoc& src_loc);
    EXPORT void MemoryBarrier(GLbitfield barriers, const SrcLoc& src_loc);
    EXPORT void MemoryBarrierByRegion(GLbitfield barriers, const SrcLoc& src_loc);
    EXPORT void MinSampleShading(GLfloat value, const SrcLoc& src_loc);
    EXPORT void MultMatrixd(const GLdouble * m, const SrcLoc& src_loc);
    EXPORT void MultMatrixf(const GLfloat * m, const SrcLoc& src_loc);
    EXPORT void MultTransposeMatrixd(const GLdouble * m, const SrcLoc& src_loc);
    EXPORT void MultTransposeMatrixf(const GLfloat * m, const SrcLoc& src_loc);
    EXPORT void MultiDrawArrays(GLenum mode, const GLint * first, const GLsizei * count, GLsizei drawcount, const SrcLoc& src_loc);
    EXPORT void MultiDrawArraysIndirect(GLenum mode, const void * indirect, GLsizei drawcount, GLsizei stride, const SrcLoc& src_loc);
    EXPORT void MultiDrawArraysIndirectCount(GLenum mode, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride, const SrcLoc& src_loc);
    EXPORT void MultiDrawElements(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const SrcLoc& src_loc);
    EXPORT void MultiDrawElementsBaseVertex(GLenum mode, const GLsizei * count, GLenum type, const void *const* indices, GLsizei drawcount, const GLint * basevertex, const SrcLoc& src_loc);
    EXPORT void MultiDrawElementsIndirect(GLenum mode, GLenum type, const void * indirect, GLsizei drawcount, GLsizei stride, const SrcLoc& src_loc);
    EXPORT void MultiDrawElementsIndirectCount(GLenum mode, GLenum type, const void * indirect, GLintptr drawcount, GLsizei maxdrawcount, GLsizei stride, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord1d(GLenum target, GLdouble s, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord1dv(GLenum target, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord1f(GLenum target, GLfloat s, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord1fv(GLenum target, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord1i(GLenum target, GLint s, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord1iv(GLenum target, const GLint * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord1s(GLenum target, GLshort s, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord1sv(GLenum target, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord2d(GLenum target, GLdouble s, GLdouble t, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord2dv(GLenum target, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord2f(GLenum target, GLfloat s, GLfloat t, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord2fv(GLenum target, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord2i(GLenum target, GLint s, GLint t, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord2iv(GLenum target, const GLint * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord2s(GLenum target, GLshort s, GLshort t, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord2sv(GLenum target, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord3dv(GLenum target, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord3fv(GLenum target, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord3iv(GLenum target, const GLint * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord3sv(GLenum target, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord4dv(GLenum target, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord4fv(GLenum target, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord4iv(GLenum target, const GLint * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q, const SrcLoc& src_loc);
    EXPORT void MultiTexCoord4sv(GLenum target, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void MultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void MultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void MultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void MultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void MultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void MultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void MultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void MultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void NamedBufferData(GLuint buffer, GLsizeiptr size, const void * data, GLenum usage, const SrcLoc& src_loc);
    EXPORT void NamedBufferStorage(GLuint buffer, GLsizeiptr size, const void * data, GLbitfield flags, const SrcLoc& src_loc);
    EXPORT void NamedBufferSubData(GLuint buffer, GLintptr offset, GLsizeiptr size, const void * data, const SrcLoc& src_loc);
    EXPORT void NamedFramebufferDrawBuffer(GLuint framebuffer, GLenum buf, const SrcLoc& src_loc);
    EXPORT void NamedFramebufferDrawBuffers(GLuint framebuffer, GLsizei n, const GLenum * bufs, const SrcLoc& src_loc);
    EXPORT void NamedFramebufferParameteri(GLuint framebuffer, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void NamedFramebufferReadBuffer(GLuint framebuffer, GLenum src, const SrcLoc& src_loc);
    EXPORT void NamedFramebufferRenderbuffer(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer, const SrcLoc& src_loc);
    EXPORT void NamedFramebufferTexture(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, const SrcLoc& src_loc);
    EXPORT void NamedFramebufferTextureLayer(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer, const SrcLoc& src_loc);
    EXPORT void NamedRenderbufferStorage(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void NamedRenderbufferStorageMultisample(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void NewList(GLuint list, GLenum mode, const SrcLoc& src_loc);
    EXPORT void Normal3b(GLbyte nx, GLbyte ny, GLbyte nz, const SrcLoc& src_loc);
    EXPORT void Normal3bv(const GLbyte * v, const SrcLoc& src_loc);
    EXPORT void Normal3d(GLdouble nx, GLdouble ny, GLdouble nz, const SrcLoc& src_loc);
    EXPORT void Normal3dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void Normal3f(GLfloat nx, GLfloat ny, GLfloat nz, const SrcLoc& src_loc);
    EXPORT void Normal3fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void Normal3i(GLint nx, GLint ny, GLint nz, const SrcLoc& src_loc);
    EXPORT void Normal3iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void Normal3s(GLshort nx, GLshort ny, GLshort nz, const SrcLoc& src_loc);
    EXPORT void Normal3sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void NormalP3ui(GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void NormalP3uiv(GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void NormalPointer(GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void ObjectLabel(GLenum identifier, GLuint name, GLsizei length, const GLchar * label, const SrcLoc& src_loc);
    EXPORT void ObjectPtrLabel(const void * ptr, GLsizei length, const GLchar * label, const SrcLoc& src_loc);
    EXPORT void Ortho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar, const SrcLoc& src_loc);
    EXPORT void PassThrough(GLfloat token, const SrcLoc& src_loc);
    EXPORT void PatchParameterfv(GLenum pname, const GLfloat * values, const SrcLoc& src_loc);
    EXPORT void PatchParameteri(GLenum pname, GLint value, const SrcLoc& src_loc);
    EXPORT void PauseTransformFeedback(const SrcLoc& src_loc);
    EXPORT void PixelMapfv(GLenum map, GLsizei mapsize, const GLfloat * values, const SrcLoc& src_loc);
    EXPORT void PixelMapuiv(GLenum map, GLsizei mapsize, const GLuint * values, const SrcLoc& src_loc);
    EXPORT void PixelMapusv(GLenum map, GLsizei mapsize, const GLushort * values, const SrcLoc& src_loc);
    EXPORT void PixelStoref(GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void PixelStorei(GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void PixelTransferf(GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void PixelTransferi(GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void PixelZoom(GLfloat xfactor, GLfloat yfactor, const SrcLoc& src_loc);
    EXPORT void PointParameterf(GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void PointParameterfv(GLenum pname, const GLfloat * params, const SrcLoc& src_loc);
    EXPORT void PointParameteri(GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void PointParameteriv(GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void PointSize(GLfloat size, const SrcLoc& src_loc);
    EXPORT void PolygonMode(GLenum face, GLenum mode, const SrcLoc& src_loc);
    EXPORT void PolygonOffset(GLfloat factor, GLfloat units, const SrcLoc& src_loc);
    EXPORT void PolygonOffsetClamp(GLfloat factor, GLfloat units, GLfloat clamp, const SrcLoc& src_loc);
    EXPORT void PolygonStipple(const GLubyte * mask, const SrcLoc& src_loc);
    EXPORT void PopAttrib(const SrcLoc& src_loc);
    EXPORT void PopClientAttrib(const SrcLoc& src_loc);
    EXPORT void PopDebugGroup(const SrcLoc& src_loc);
    EXPORT void PopMatrix(const SrcLoc& src_loc);
    EXPORT void PopName(const SrcLoc& src_loc);
    EXPORT void PrimitiveRestartIndex(GLuint index, const SrcLoc& src_loc);
    EXPORT void PrioritizeTextures(GLsizei n, const GLuint * textures, const GLfloat * priorities, const SrcLoc& src_loc);
    EXPORT void ProgramBinary(GLuint program, GLenum binaryFormat, const void * binary, GLsizei length, const SrcLoc& src_loc);
    EXPORT void ProgramParameteri(GLuint program, GLenum pname, GLint value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform1d(GLuint program, GLint location, GLdouble v0, const SrcLoc& src_loc);
    EXPORT void ProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform1f(GLuint program, GLint location, GLfloat v0, const SrcLoc& src_loc);
    EXPORT void ProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform1i(GLuint program, GLint location, GLint v0, const SrcLoc& src_loc);
    EXPORT void ProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform1ui(GLuint program, GLint location, GLuint v0, const SrcLoc& src_loc);
    EXPORT void ProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform2d(GLuint program, GLint location, GLdouble v0, GLdouble v1, const SrcLoc& src_loc);
    EXPORT void ProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform2f(GLuint program, GLint location, GLfloat v0, GLfloat v1, const SrcLoc& src_loc);
    EXPORT void ProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform2i(GLuint program, GLint location, GLint v0, GLint v1, const SrcLoc& src_loc);
    EXPORT void ProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform2ui(GLuint program, GLint location, GLuint v0, GLuint v1, const SrcLoc& src_loc);
    EXPORT void ProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform3d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, const SrcLoc& src_loc);
    EXPORT void ProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform3f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, const SrcLoc& src_loc);
    EXPORT void ProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform3i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, const SrcLoc& src_loc);
    EXPORT void ProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform3ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, const SrcLoc& src_loc);
    EXPORT void ProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform4d(GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3, const SrcLoc& src_loc);
    EXPORT void ProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform4f(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3, const SrcLoc& src_loc);
    EXPORT void ProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform4i(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3, const SrcLoc& src_loc);
    EXPORT void ProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniform4ui(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3, const SrcLoc& src_loc);
    EXPORT void ProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void ProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void ProvokingVertex(GLenum mode, const SrcLoc& src_loc);
    EXPORT void PushAttrib(GLbitfield mask, const SrcLoc& src_loc);
    EXPORT void PushClientAttrib(GLbitfield mask, const SrcLoc& src_loc);
    EXPORT void PushDebugGroup(GLenum source, GLuint id, GLsizei length, const GLchar * message, const SrcLoc& src_loc);
    EXPORT void PushMatrix(const SrcLoc& src_loc);
    EXPORT void PushName(GLuint name, const SrcLoc& src_loc);
    EXPORT void QueryCounter(GLuint id, GLenum target, const SrcLoc& src_loc);
    EXPORT void RasterPos2d(GLdouble x, GLdouble y, const SrcLoc& src_loc);
    EXPORT void RasterPos2dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void RasterPos2f(GLfloat x, GLfloat y, const SrcLoc& src_loc);
    EXPORT void RasterPos2fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void RasterPos2i(GLint x, GLint y, const SrcLoc& src_loc);
    EXPORT void RasterPos2iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void RasterPos2s(GLshort x, GLshort y, const SrcLoc& src_loc);
    EXPORT void RasterPos2sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void RasterPos3d(GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void RasterPos3dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void RasterPos3f(GLfloat x, GLfloat y, GLfloat z, const SrcLoc& src_loc);
    EXPORT void RasterPos3fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void RasterPos3i(GLint x, GLint y, GLint z, const SrcLoc& src_loc);
    EXPORT void RasterPos3iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void RasterPos3s(GLshort x, GLshort y, GLshort z, const SrcLoc& src_loc);
    EXPORT void RasterPos3sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void RasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w, const SrcLoc& src_loc);
    EXPORT void RasterPos4dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void RasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w, const SrcLoc& src_loc);
    EXPORT void RasterPos4fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void RasterPos4i(GLint x, GLint y, GLint z, GLint w, const SrcLoc& src_loc);
    EXPORT void RasterPos4iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void RasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w, const SrcLoc& src_loc);
    EXPORT void RasterPos4sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void ReadBuffer(GLenum src, const SrcLoc& src_loc);
    EXPORT void ReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void * pixels, const SrcLoc& src_loc);
    EXPORT void ReadnPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, void * data, const SrcLoc& src_loc);
    EXPORT void Rectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2, const SrcLoc& src_loc);
    EXPORT void Rectdv(const GLdouble * v1, const GLdouble * v2, const SrcLoc& src_loc);
    EXPORT void Rectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2, const SrcLoc& src_loc);
    EXPORT void Rectfv(const GLfloat * v1, const GLfloat * v2, const SrcLoc& src_loc);
    EXPORT void Recti(GLint x1, GLint y1, GLint x2, GLint y2, const SrcLoc& src_loc);
    EXPORT void Rectiv(const GLint * v1, const GLint * v2, const SrcLoc& src_loc);
    EXPORT void Rects(GLshort x1, GLshort y1, GLshort x2, GLshort y2, const SrcLoc& src_loc);
    EXPORT void Rectsv(const GLshort * v1, const GLshort * v2, const SrcLoc& src_loc);
    EXPORT void ReleaseShaderCompiler(const SrcLoc& src_loc);
    EXPORT GLint RenderMode(GLenum mode, const SrcLoc& src_loc);
    EXPORT void RenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void RenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void ResumeTransformFeedback(const SrcLoc& src_loc);
    EXPORT void Rotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void Rotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z, const SrcLoc& src_loc);
    EXPORT void SampleCoverage(GLfloat value, GLboolean invert, const SrcLoc& src_loc);
    EXPORT void SampleMaski(GLuint maskNumber, GLbitfield mask, const SrcLoc& src_loc);
    EXPORT void SamplerParameterIiv(GLuint sampler, GLenum pname, const GLint * param, const SrcLoc& src_loc);
    EXPORT void SamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint * param, const SrcLoc& src_loc);
    EXPORT void SamplerParameterf(GLuint sampler, GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void SamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat * param, const SrcLoc& src_loc);
    EXPORT void SamplerParameteri(GLuint sampler, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void SamplerParameteriv(GLuint sampler, GLenum pname, const GLint * param, const SrcLoc& src_loc);
    EXPORT void Scaled(GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void Scalef(GLfloat x, GLfloat y, GLfloat z, const SrcLoc& src_loc);
    EXPORT void Scissor(GLint x, GLint y, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void ScissorArrayv(GLuint first, GLsizei count, const GLint * v, const SrcLoc& src_loc);
    EXPORT void ScissorIndexed(GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void ScissorIndexedv(GLuint index, const GLint * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3bv(const GLbyte * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3i(GLint red, GLint green, GLint blue, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3s(GLshort red, GLshort green, GLshort blue, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3ubv(const GLubyte * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3ui(GLuint red, GLuint green, GLuint blue, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3uiv(const GLuint * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3us(GLushort red, GLushort green, GLushort blue, const SrcLoc& src_loc);
    EXPORT void SecondaryColor3usv(const GLushort * v, const SrcLoc& src_loc);
    EXPORT void SecondaryColorP3ui(GLenum type, GLuint color, const SrcLoc& src_loc);
    EXPORT void SecondaryColorP3uiv(GLenum type, const GLuint * color, const SrcLoc& src_loc);
    EXPORT void SecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void SelectBuffer(GLsizei size, GLuint * buffer, const SrcLoc& src_loc);
    EXPORT void ShadeModel(GLenum mode, const SrcLoc& src_loc);
    EXPORT void ShaderBinary(GLsizei count, const GLuint * shaders, GLenum binaryFormat, const void * binary, GLsizei length, const SrcLoc& src_loc);
    EXPORT void ShaderSource(GLuint shader, GLsizei count, const GLchar *const* string, const GLint * length, const SrcLoc& src_loc);
    EXPORT void ShaderStorageBlockBinding(GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding, const SrcLoc& src_loc);
    EXPORT void SpecializeShader(GLuint shader, const GLchar * pEntryPoint, GLuint numSpecializationConstants, const GLuint * pConstantIndex, const GLuint * pConstantValue, const SrcLoc& src_loc);
    EXPORT void StencilFunc(GLenum func, GLint ref, GLuint mask, const SrcLoc& src_loc);
    EXPORT void StencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask, const SrcLoc& src_loc);
    EXPORT void StencilMask(GLuint mask, const SrcLoc& src_loc);
    EXPORT void StencilMaskSeparate(GLenum face, GLuint mask, const SrcLoc& src_loc);
    EXPORT void StencilOp(GLenum fail, GLenum zfail, GLenum zpass, const SrcLoc& src_loc);
    EXPORT void StencilOpSeparate(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass, const SrcLoc& src_loc);
    EXPORT void TexBuffer(GLenum target, GLenum internalformat, GLuint buffer, const SrcLoc& src_loc);
    EXPORT void TexBufferRange(GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size, const SrcLoc& src_loc);
    EXPORT void TexCoord1d(GLdouble s, const SrcLoc& src_loc);
    EXPORT void TexCoord1dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void TexCoord1f(GLfloat s, const SrcLoc& src_loc);
    EXPORT void TexCoord1fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void TexCoord1i(GLint s, const SrcLoc& src_loc);
    EXPORT void TexCoord1iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void TexCoord1s(GLshort s, const SrcLoc& src_loc);
    EXPORT void TexCoord1sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void TexCoord2d(GLdouble s, GLdouble t, const SrcLoc& src_loc);
    EXPORT void TexCoord2dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void TexCoord2f(GLfloat s, GLfloat t, const SrcLoc& src_loc);
    EXPORT void TexCoord2fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void TexCoord2i(GLint s, GLint t, const SrcLoc& src_loc);
    EXPORT void TexCoord2iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void TexCoord2s(GLshort s, GLshort t, const SrcLoc& src_loc);
    EXPORT void TexCoord2sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void TexCoord3d(GLdouble s, GLdouble t, GLdouble r, const SrcLoc& src_loc);
    EXPORT void TexCoord3dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void TexCoord3f(GLfloat s, GLfloat t, GLfloat r, const SrcLoc& src_loc);
    EXPORT void TexCoord3fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void TexCoord3i(GLint s, GLint t, GLint r, const SrcLoc& src_loc);
    EXPORT void TexCoord3iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void TexCoord3s(GLshort s, GLshort t, GLshort r, const SrcLoc& src_loc);
    EXPORT void TexCoord3sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void TexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q, const SrcLoc& src_loc);
    EXPORT void TexCoord4dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void TexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q, const SrcLoc& src_loc);
    EXPORT void TexCoord4fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void TexCoord4i(GLint s, GLint t, GLint r, GLint q, const SrcLoc& src_loc);
    EXPORT void TexCoord4iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void TexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q, const SrcLoc& src_loc);
    EXPORT void TexCoord4sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void TexCoordP1ui(GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void TexCoordP1uiv(GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void TexCoordP2ui(GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void TexCoordP2uiv(GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void TexCoordP3ui(GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void TexCoordP3uiv(GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void TexCoordP4ui(GLenum type, GLuint coords, const SrcLoc& src_loc);
    EXPORT void TexCoordP4uiv(GLenum type, const GLuint * coords, const SrcLoc& src_loc);
    EXPORT void TexCoordPointer(GLint size, GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void TexEnvf(GLenum target, GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void TexEnvfv(GLenum target, GLenum pname, const GLfloat * params, const SrcLoc& src_loc);
    EXPORT void TexEnvi(GLenum target, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void TexEnviv(GLenum target, GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void TexGend(GLenum coord, GLenum pname, GLdouble param, const SrcLoc& src_loc);
    EXPORT void TexGendv(GLenum coord, GLenum pname, const GLdouble * params, const SrcLoc& src_loc);
    EXPORT void TexGenf(GLenum coord, GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void TexGenfv(GLenum coord, GLenum pname, const GLfloat * params, const SrcLoc& src_loc);
    EXPORT void TexGeni(GLenum coord, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void TexGeniv(GLenum coord, GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void TexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TexImage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations, const SrcLoc& src_loc);
    EXPORT void TexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TexImage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations, const SrcLoc& src_loc);
    EXPORT void TexParameterIiv(GLenum target, GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void TexParameterIuiv(GLenum target, GLenum pname, const GLuint * params, const SrcLoc& src_loc);
    EXPORT void TexParameterf(GLenum target, GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void TexParameterfv(GLenum target, GLenum pname, const GLfloat * params, const SrcLoc& src_loc);
    EXPORT void TexParameteri(GLenum target, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void TexParameteriv(GLenum target, GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void TexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, const SrcLoc& src_loc);
    EXPORT void TexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void TexStorage2DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations, const SrcLoc& src_loc);
    EXPORT void TexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, const SrcLoc& src_loc);
    EXPORT void TexStorage3DMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations, const SrcLoc& src_loc);
    EXPORT void TexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TextureBarrier(const SrcLoc& src_loc);
    EXPORT void TextureBuffer(GLuint texture, GLenum internalformat, GLuint buffer, const SrcLoc& src_loc);
    EXPORT void TextureBufferRange(GLuint texture, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size, const SrcLoc& src_loc);
    EXPORT void TextureParameterIiv(GLuint texture, GLenum pname, const GLint * params, const SrcLoc& src_loc);
    EXPORT void TextureParameterIuiv(GLuint texture, GLenum pname, const GLuint * params, const SrcLoc& src_loc);
    EXPORT void TextureParameterf(GLuint texture, GLenum pname, GLfloat param, const SrcLoc& src_loc);
    EXPORT void TextureParameterfv(GLuint texture, GLenum pname, const GLfloat * param, const SrcLoc& src_loc);
    EXPORT void TextureParameteri(GLuint texture, GLenum pname, GLint param, const SrcLoc& src_loc);
    EXPORT void TextureParameteriv(GLuint texture, GLenum pname, const GLint * param, const SrcLoc& src_loc);
    EXPORT void TextureStorage1D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, const SrcLoc& src_loc);
    EXPORT void TextureStorage2D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void TextureStorage2DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations, const SrcLoc& src_loc);
    EXPORT void TextureStorage3D(GLuint texture, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, const SrcLoc& src_loc);
    EXPORT void TextureStorage3DMultisample(GLuint texture, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations, const SrcLoc& src_loc);
    EXPORT void TextureSubImage1D(GLuint texture, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TextureSubImage2D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TextureSubImage3D(GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const void * pixels, const SrcLoc& src_loc);
    EXPORT void TextureView(GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers, const SrcLoc& src_loc);
    EXPORT void TransformFeedbackBufferBase(GLuint xfb, GLuint index, GLuint buffer, const SrcLoc& src_loc);
    EXPORT void TransformFeedbackBufferRange(GLuint xfb, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size, const SrcLoc& src_loc);
    EXPORT void TransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar *const* varyings, GLenum bufferMode, const SrcLoc& src_loc);
    EXPORT void Translated(GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void Translatef(GLfloat x, GLfloat y, GLfloat z, const SrcLoc& src_loc);
    EXPORT void Uniform1d(GLint location, GLdouble x, const SrcLoc& src_loc);
    EXPORT void Uniform1dv(GLint location, GLsizei count, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void Uniform1f(GLint location, GLfloat v0, const SrcLoc& src_loc);
    EXPORT void Uniform1fv(GLint location, GLsizei count, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void Uniform1i(GLint location, GLint v0, const SrcLoc& src_loc);
    EXPORT void Uniform1iv(GLint location, GLsizei count, const GLint * value, const SrcLoc& src_loc);
    EXPORT void Uniform1ui(GLint location, GLuint v0, const SrcLoc& src_loc);
    EXPORT void Uniform1uiv(GLint location, GLsizei count, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void Uniform2d(GLint location, GLdouble x, GLdouble y, const SrcLoc& src_loc);
    EXPORT void Uniform2dv(GLint location, GLsizei count, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void Uniform2f(GLint location, GLfloat v0, GLfloat v1, const SrcLoc& src_loc);
    EXPORT void Uniform2fv(GLint location, GLsizei count, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void Uniform2i(GLint location, GLint v0, GLint v1, const SrcLoc& src_loc);
    EXPORT void Uniform2iv(GLint location, GLsizei count, const GLint * value, const SrcLoc& src_loc);
    EXPORT void Uniform2ui(GLint location, GLuint v0, GLuint v1, const SrcLoc& src_loc);
    EXPORT void Uniform2uiv(GLint location, GLsizei count, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void Uniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void Uniform3dv(GLint location, GLsizei count, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void Uniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, const SrcLoc& src_loc);
    EXPORT void Uniform3fv(GLint location, GLsizei count, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void Uniform3i(GLint location, GLint v0, GLint v1, GLint v2, const SrcLoc& src_loc);
    EXPORT void Uniform3iv(GLint location, GLsizei count, const GLint * value, const SrcLoc& src_loc);
    EXPORT void Uniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2, const SrcLoc& src_loc);
    EXPORT void Uniform3uiv(GLint location, GLsizei count, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void Uniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w, const SrcLoc& src_loc);
    EXPORT void Uniform4dv(GLint location, GLsizei count, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void Uniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3, const SrcLoc& src_loc);
    EXPORT void Uniform4fv(GLint location, GLsizei count, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void Uniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3, const SrcLoc& src_loc);
    EXPORT void Uniform4iv(GLint location, GLsizei count, const GLint * value, const SrcLoc& src_loc);
    EXPORT void Uniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3, const SrcLoc& src_loc);
    EXPORT void Uniform4uiv(GLint location, GLsizei count, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void UniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding, const SrcLoc& src_loc);
    EXPORT void UniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble * value, const SrcLoc& src_loc);
    EXPORT void UniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat * value, const SrcLoc& src_loc);
    EXPORT void UniformSubroutinesuiv(GLenum shadertype, GLsizei count, const GLuint * indices, const SrcLoc& src_loc);
    EXPORT GLboolean UnmapBuffer(GLenum target, const SrcLoc& src_loc);
    EXPORT GLboolean UnmapNamedBuffer(GLuint buffer, const SrcLoc& src_loc);
    EXPORT void UseProgram(GLuint program, const SrcLoc& src_loc);
    EXPORT void UseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program, const SrcLoc& src_loc);
    EXPORT void ValidateProgram(GLuint program, const SrcLoc& src_loc);
    EXPORT void ValidateProgramPipeline(GLuint pipeline, const SrcLoc& src_loc);
    EXPORT void Vertex2d(GLdouble x, GLdouble y, const SrcLoc& src_loc);
    EXPORT void Vertex2dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void Vertex2f(GLfloat x, GLfloat y, const SrcLoc& src_loc);
    EXPORT void Vertex2fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void Vertex2i(GLint x, GLint y, const SrcLoc& src_loc);
    EXPORT void Vertex2iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void Vertex2s(GLshort x, GLshort y, const SrcLoc& src_loc);
    EXPORT void Vertex2sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void Vertex3d(GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void Vertex3dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void Vertex3f(GLfloat x, GLfloat y, GLfloat z, const SrcLoc& src_loc);
    EXPORT void Vertex3fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void Vertex3i(GLint x, GLint y, GLint z, const SrcLoc& src_loc);
    EXPORT void Vertex3iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void Vertex3s(GLshort x, GLshort y, GLshort z, const SrcLoc& src_loc);
    EXPORT void Vertex3sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void Vertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w, const SrcLoc& src_loc);
    EXPORT void Vertex4dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void Vertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w, const SrcLoc& src_loc);
    EXPORT void Vertex4fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void Vertex4i(GLint x, GLint y, GLint z, GLint w, const SrcLoc& src_loc);
    EXPORT void Vertex4iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void Vertex4s(GLshort x, GLshort y, GLshort z, GLshort w, const SrcLoc& src_loc);
    EXPORT void Vertex4sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void VertexArrayAttribBinding(GLuint vaobj, GLuint attribindex, GLuint bindingindex, const SrcLoc& src_loc);
    EXPORT void VertexArrayAttribFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset, const SrcLoc& src_loc);
    EXPORT void VertexArrayAttribIFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset, const SrcLoc& src_loc);
    EXPORT void VertexArrayAttribLFormat(GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset, const SrcLoc& src_loc);
    EXPORT void VertexArrayBindingDivisor(GLuint vaobj, GLuint bindingindex, GLuint divisor, const SrcLoc& src_loc);
    EXPORT void VertexArrayElementBuffer(GLuint vaobj, GLuint buffer, const SrcLoc& src_loc);
    EXPORT void VertexArrayVertexBuffer(GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride, const SrcLoc& src_loc);
    EXPORT void VertexArrayVertexBuffers(GLuint vaobj, GLuint first, GLsizei count, const GLuint * buffers, const GLintptr * offsets, const GLsizei * strides, const SrcLoc& src_loc);
    EXPORT void VertexAttrib1d(GLuint index, GLdouble x, const SrcLoc& src_loc);
    EXPORT void VertexAttrib1dv(GLuint index, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib1f(GLuint index, GLfloat x, const SrcLoc& src_loc);
    EXPORT void VertexAttrib1fv(GLuint index, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib1s(GLuint index, GLshort x, const SrcLoc& src_loc);
    EXPORT void VertexAttrib1sv(GLuint index, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib2d(GLuint index, GLdouble x, GLdouble y, const SrcLoc& src_loc);
    EXPORT void VertexAttrib2dv(GLuint index, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib2f(GLuint index, GLfloat x, GLfloat y, const SrcLoc& src_loc);
    EXPORT void VertexAttrib2fv(GLuint index, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib2s(GLuint index, GLshort x, GLshort y, const SrcLoc& src_loc);
    EXPORT void VertexAttrib2sv(GLuint index, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void VertexAttrib3dv(GLuint index, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z, const SrcLoc& src_loc);
    EXPORT void VertexAttrib3fv(GLuint index, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z, const SrcLoc& src_loc);
    EXPORT void VertexAttrib3sv(GLuint index, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4Nbv(GLuint index, const GLbyte * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4Niv(GLuint index, const GLint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4Nsv(GLuint index, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4Nubv(GLuint index, const GLubyte * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4Nuiv(GLuint index, const GLuint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4Nusv(GLuint index, const GLushort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4bv(GLuint index, const GLbyte * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4dv(GLuint index, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4fv(GLuint index, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4iv(GLuint index, const GLint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4sv(GLuint index, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4ubv(GLuint index, const GLubyte * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4uiv(GLuint index, const GLuint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttrib4usv(GLuint index, const GLushort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribBinding(GLuint attribindex, GLuint bindingindex, const SrcLoc& src_loc);
    EXPORT void VertexAttribDivisor(GLuint index, GLuint divisor, const SrcLoc& src_loc);
    EXPORT void VertexAttribFormat(GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset, const SrcLoc& src_loc);
    EXPORT void VertexAttribI1i(GLuint index, GLint x, const SrcLoc& src_loc);
    EXPORT void VertexAttribI1iv(GLuint index, const GLint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI1ui(GLuint index, GLuint x, const SrcLoc& src_loc);
    EXPORT void VertexAttribI1uiv(GLuint index, const GLuint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI2i(GLuint index, GLint x, GLint y, const SrcLoc& src_loc);
    EXPORT void VertexAttribI2iv(GLuint index, const GLint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI2ui(GLuint index, GLuint x, GLuint y, const SrcLoc& src_loc);
    EXPORT void VertexAttribI2uiv(GLuint index, const GLuint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI3i(GLuint index, GLint x, GLint y, GLint z, const SrcLoc& src_loc);
    EXPORT void VertexAttribI3iv(GLuint index, const GLint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z, const SrcLoc& src_loc);
    EXPORT void VertexAttribI3uiv(GLuint index, const GLuint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI4bv(GLuint index, const GLbyte * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w, const SrcLoc& src_loc);
    EXPORT void VertexAttribI4iv(GLuint index, const GLint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI4sv(GLuint index, const GLshort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI4ubv(GLuint index, const GLubyte * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w, const SrcLoc& src_loc);
    EXPORT void VertexAttribI4uiv(GLuint index, const GLuint * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribI4usv(GLuint index, const GLushort * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribIFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset, const SrcLoc& src_loc);
    EXPORT void VertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void VertexAttribL1d(GLuint index, GLdouble x, const SrcLoc& src_loc);
    EXPORT void VertexAttribL1dv(GLuint index, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribL2d(GLuint index, GLdouble x, GLdouble y, const SrcLoc& src_loc);
    EXPORT void VertexAttribL2dv(GLuint index, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void VertexAttribL3dv(GLuint index, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w, const SrcLoc& src_loc);
    EXPORT void VertexAttribL4dv(GLuint index, const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void VertexAttribLFormat(GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset, const SrcLoc& src_loc);
    EXPORT void VertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void VertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value, const SrcLoc& src_loc);
    EXPORT void VertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void VertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value, const SrcLoc& src_loc);
    EXPORT void VertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void VertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value, const SrcLoc& src_loc);
    EXPORT void VertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void VertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value, const SrcLoc& src_loc);
    EXPORT void VertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void VertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void VertexBindingDivisor(GLuint bindingindex, GLuint divisor, const SrcLoc& src_loc);
    EXPORT void VertexP2ui(GLenum type, GLuint value, const SrcLoc& src_loc);
    EXPORT void VertexP2uiv(GLenum type, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void VertexP3ui(GLenum type, GLuint value, const SrcLoc& src_loc);
    EXPORT void VertexP3uiv(GLenum type, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void VertexP4ui(GLenum type, GLuint value, const SrcLoc& src_loc);
    EXPORT void VertexP4uiv(GLenum type, const GLuint * value, const SrcLoc& src_loc);
    EXPORT void VertexPointer(GLint size, GLenum type, GLsizei stride, const void * pointer, const SrcLoc& src_loc);
    EXPORT void Viewport(GLint x, GLint y, GLsizei width, GLsizei height, const SrcLoc& src_loc);
    EXPORT void ViewportArrayv(GLuint first, GLsizei count, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void ViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h, const SrcLoc& src_loc);
    EXPORT void ViewportIndexedfv(GLuint index, const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void WaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout, const SrcLoc& src_loc);
    EXPORT void WindowPos2d(GLdouble x, GLdouble y, const SrcLoc& src_loc);
    EXPORT void WindowPos2dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void WindowPos2f(GLfloat x, GLfloat y, const SrcLoc& src_loc);
    EXPORT void WindowPos2fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void WindowPos2i(GLint x, GLint y, const SrcLoc& src_loc);
    EXPORT void WindowPos2iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void WindowPos2s(GLshort x, GLshort y, const SrcLoc& src_loc);
    EXPORT void WindowPos2sv(const GLshort * v, const SrcLoc& src_loc);
    EXPORT void WindowPos3d(GLdouble x, GLdouble y, GLdouble z, const SrcLoc& src_loc);
    EXPORT void WindowPos3dv(const GLdouble * v, const SrcLoc& src_loc);
    EXPORT void WindowPos3f(GLfloat x, GLfloat y, GLfloat z, const SrcLoc& src_loc);
    EXPORT void WindowPos3fv(const GLfloat * v, const SrcLoc& src_loc);
    EXPORT void WindowPos3i(GLint x, GLint y, GLint z, const SrcLoc& src_loc);
    EXPORT void WindowPos3iv(const GLint * v, const SrcLoc& src_loc);
    EXPORT void WindowPos3s(GLshort x, GLshort y, GLshort z, const SrcLoc& src_loc);
    EXPORT void WindowPos3sv(const GLshort * v, const SrcLoc& src_loc);
};

} // namespace glwpp