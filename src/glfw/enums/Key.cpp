#include "glwpp/glfw/enums/Key.hpp"

#define GLFW_INCLUDE_NONE
#include "GLFW/glfw3.h"

glwpp::Key glwpp::toKey(int glfw_key){
    switch (glfw_key){
    /* Printable keys */
        case GLFW_KEY_SPACE: return glwpp::Key::Space;
        case GLFW_KEY_APOSTROPHE: return glwpp::Key::Apostrophe;
        case GLFW_KEY_COMMA: return glwpp::Key::Comma;
        case GLFW_KEY_MINUS: return glwpp::Key::Minus;
        case GLFW_KEY_PERIOD: return glwpp::Key::Period;
        case GLFW_KEY_SLASH: return glwpp::Key::Slash;
        case GLFW_KEY_0: return glwpp::Key::_0;
        case GLFW_KEY_1: return glwpp::Key::_1;
        case GLFW_KEY_2: return glwpp::Key::_2;
        case GLFW_KEY_3: return glwpp::Key::_3;
        case GLFW_KEY_4: return glwpp::Key::_4;
        case GLFW_KEY_5: return glwpp::Key::_5;
        case GLFW_KEY_6: return glwpp::Key::_6;
        case GLFW_KEY_7: return glwpp::Key::_7;
        case GLFW_KEY_8: return glwpp::Key::_8;
        case GLFW_KEY_9: return glwpp::Key::_9;
        case GLFW_KEY_SEMICOLON: return glwpp::Key::Semicolon;
        case GLFW_KEY_EQUAL: return glwpp::Key::Equal;
        case GLFW_KEY_A: return glwpp::Key::A;
        case GLFW_KEY_B: return glwpp::Key::B;
        case GLFW_KEY_C: return glwpp::Key::C;
        case GLFW_KEY_D: return glwpp::Key::D;
        case GLFW_KEY_E: return glwpp::Key::E;
        case GLFW_KEY_F: return glwpp::Key::F;
        case GLFW_KEY_G: return glwpp::Key::G;
        case GLFW_KEY_H: return glwpp::Key::H;
        case GLFW_KEY_I: return glwpp::Key::I;
        case GLFW_KEY_J: return glwpp::Key::J;
        case GLFW_KEY_K: return glwpp::Key::K;
        case GLFW_KEY_L: return glwpp::Key::L;
        case GLFW_KEY_M: return glwpp::Key::M;
        case GLFW_KEY_N: return glwpp::Key::N;
        case GLFW_KEY_O: return glwpp::Key::O;
        case GLFW_KEY_P: return glwpp::Key::P;
        case GLFW_KEY_Q: return glwpp::Key::Q;
        case GLFW_KEY_R: return glwpp::Key::R;
        case GLFW_KEY_S: return glwpp::Key::S;
        case GLFW_KEY_T: return glwpp::Key::T;
        case GLFW_KEY_U: return glwpp::Key::U;
        case GLFW_KEY_V: return glwpp::Key::V;
        case GLFW_KEY_W: return glwpp::Key::W;
        case GLFW_KEY_X: return glwpp::Key::X;
        case GLFW_KEY_Y: return glwpp::Key::Y;
        case GLFW_KEY_Z: return glwpp::Key::Z;
        case GLFW_KEY_LEFT_BRACKET: return glwpp::Key::LeftBracket;
        case GLFW_KEY_BACKSLASH: return glwpp::Key::Backslash;
        case GLFW_KEY_RIGHT_BRACKET: return glwpp::Key::RightBracket;
        case GLFW_KEY_GRAVE_ACCENT: return glwpp::Key::GraveAccent;
        case GLFW_KEY_WORLD_1: return glwpp::Key::World_1;
        case GLFW_KEY_WORLD_2: return glwpp::Key::World_2;

    /* Function keys */
        case GLFW_KEY_ESCAPE: return glwpp::Key::Escape;
        case GLFW_KEY_ENTER: return glwpp::Key::Enter;
        case GLFW_KEY_TAB: return glwpp::Key::Tab;
        case GLFW_KEY_BACKSPACE: return glwpp::Key::Backspace;
        case GLFW_KEY_INSERT: return glwpp::Key::Insert;
        case GLFW_KEY_DELETE: return glwpp::Key::Delete;
        case GLFW_KEY_RIGHT: return glwpp::Key::Right;
        case GLFW_KEY_LEFT: return glwpp::Key::Left;
        case GLFW_KEY_DOWN: return glwpp::Key::Down;
        case GLFW_KEY_UP: return glwpp::Key::Up;
        case GLFW_KEY_PAGE_UP: return glwpp::Key::PageUp;
        case GLFW_KEY_PAGE_DOWN: return glwpp::Key::PageDown;
        case GLFW_KEY_HOME: return glwpp::Key::Home;
        case GLFW_KEY_END: return glwpp::Key::End;
        case GLFW_KEY_CAPS_LOCK: return glwpp::Key::CapsLock;
        case GLFW_KEY_SCROLL_LOCK: return glwpp::Key::ScrollLock;
        case GLFW_KEY_NUM_LOCK: return glwpp::Key::NumLock;
        case GLFW_KEY_PRINT_SCREEN: return glwpp::Key::PrintScreen;
        case GLFW_KEY_PAUSE: return glwpp::Key::Pause;
        case GLFW_KEY_F1: return glwpp::Key::F1;
        case GLFW_KEY_F2: return glwpp::Key::F2;
        case GLFW_KEY_F3: return glwpp::Key::F3;
        case GLFW_KEY_F4: return glwpp::Key::F4;
        case GLFW_KEY_F5: return glwpp::Key::F5;
        case GLFW_KEY_F6: return glwpp::Key::F6;
        case GLFW_KEY_F7: return glwpp::Key::F7;
        case GLFW_KEY_F8: return glwpp::Key::F8;
        case GLFW_KEY_F9: return glwpp::Key::F9;
        case GLFW_KEY_F10: return glwpp::Key::F10;
        case GLFW_KEY_F11: return glwpp::Key::F11;
        case GLFW_KEY_F12: return glwpp::Key::F12;
        case GLFW_KEY_F13: return glwpp::Key::F13;
        case GLFW_KEY_F14: return glwpp::Key::F14;
        case GLFW_KEY_F15: return glwpp::Key::F15;
        case GLFW_KEY_F16: return glwpp::Key::F16;
        case GLFW_KEY_F17: return glwpp::Key::F17;
        case GLFW_KEY_F18: return glwpp::Key::F18;
        case GLFW_KEY_F19: return glwpp::Key::F19;
        case GLFW_KEY_F20: return glwpp::Key::F20;
        case GLFW_KEY_F21: return glwpp::Key::F21;
        case GLFW_KEY_F22: return glwpp::Key::F22;
        case GLFW_KEY_F23: return glwpp::Key::F23;
        case GLFW_KEY_F24: return glwpp::Key::F24;
        case GLFW_KEY_F25: return glwpp::Key::F25;
        case GLFW_KEY_KP_0: return glwpp::Key::KP_0;
        case GLFW_KEY_KP_1: return glwpp::Key::KP_1;
        case GLFW_KEY_KP_2: return glwpp::Key::KP_2;
        case GLFW_KEY_KP_3: return glwpp::Key::KP_3;
        case GLFW_KEY_KP_4: return glwpp::Key::KP_4;
        case GLFW_KEY_KP_5: return glwpp::Key::KP_5;
        case GLFW_KEY_KP_6: return glwpp::Key::KP_6;
        case GLFW_KEY_KP_7: return glwpp::Key::KP_7;
        case GLFW_KEY_KP_8: return glwpp::Key::KP_8;
        case GLFW_KEY_KP_9: return glwpp::Key::KP_9;
        case GLFW_KEY_KP_DECIMAL: return glwpp::Key::KP_Decimal;
        case GLFW_KEY_KP_DIVIDE: return glwpp::Key::KP_Divide;
        case GLFW_KEY_KP_MULTIPLY: return glwpp::Key::KP_Multiply;
        case GLFW_KEY_KP_SUBTRACT: return glwpp::Key::KP_Subsract;
        case GLFW_KEY_KP_ADD: return glwpp::Key::KP_Add;
        case GLFW_KEY_KP_ENTER: return glwpp::Key::KP_Enter;
        case GLFW_KEY_KP_EQUAL: return glwpp::Key::KP_Equal;
        case GLFW_KEY_LEFT_SHIFT: return glwpp::Key::LeftShift;
        case GLFW_KEY_LEFT_CONTROL: return glwpp::Key::LeftControl;
        case GLFW_KEY_LEFT_ALT: return glwpp::Key::LeftAlt;
        case GLFW_KEY_LEFT_SUPER: return glwpp::Key::LeftSuper;
        case GLFW_KEY_RIGHT_SHIFT: return glwpp::Key::RightShift;
        case GLFW_KEY_RIGHT_CONTROL: return glwpp::Key::RightControl;
        case GLFW_KEY_RIGHT_ALT: return glwpp::Key::RightAlt;
        case GLFW_KEY_RIGHT_SUPER: return glwpp::Key::RightSuper;
        case GLFW_KEY_MENU: return glwpp::Key::Menu;
        default: return glwpp::Key::Unknown;
    }
}